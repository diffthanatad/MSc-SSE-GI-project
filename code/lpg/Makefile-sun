#!/bin/sh
#
# Makefile for GpG v 0.1
#


####### FLAGS

TYPE	= 
ADDONS	= 

# -march=i386

MYHOME=/home/int-artif/lazzaroni
#MYHOME=/home/marco

CC_PROF = $(MYHOME)/cacheprof/cacheprof --cacheprofdir=$(MYHOME)/cacheprof/ gcc
#CFLAGS_PROF =  -O6 -Wall   $(TYPE) $(ADDONS)

CC	= gcc 
CFLAGS	=  -g    -D__MY_OUTPUT__ -D__TEST__   $(TYPE) $(ADDONS)
CFLAGS	=  -g    $(TYPE) -D__EFENCE__  -DNDEBUG   $(ADDONS)
#CFLAGS	=  -g    -D__MY_OUTPUT__  $(TYPE) $(ADDONS)
#CFLAGS  =  -g    $(TYPE) $(ADDONS)
CFLAGS =  -g    -Wall -D__MY_OUTPUT__  -DNDEBUG $(TYPE) $(ADDONS)


#CFLAGS	=  -pg   -Wall  -D__MY_OUTPUT__ -D__TEST__   $(TYPE) $(ADDONS)
#CFLAGS	=  -pg   -Wall  -D__MY_OUTPUT__   $(TYPE) $(ADDONS)
#CFLAGS =  -O4   -Wall   $(TYPE) $(ADDONS)
#CFLAGS =  -O6   -Wall -D__MY_OUTPUT__ -D__TEST__ $(TYPE) $(ADDONS)
CFLAGS =  -O6    -Wall -D__MY_OUTPUT__ -DNDEBUG $(TYPE) $(ADDONS) 

#CFLAGS =  -O6  -Wall $(TYPE)  $(ADDONS) 
CFLAGS =  -O6    -DNDEBUG  -Wall $(TYPE) $(ADDONS)
#CC     = $(MYHOME)/cacheprof/cacheprof --cacheprofdir=$(MYHOME)/cacheprof/ gcc


TARGET = lpg-T 
TARGET = lpg-debug
#TARGET = lpg-pg
#TARGET = lpg-30000
TARGET = lpg

INCLUDE = ./include/
LIBS    = -lm 
#LIBS    = -lm -lefence


####### Files

PDDL_PARSER_SRC	= scan-fct_pddl.tab.c \
	scan-ops_pddl.tab.c \
	scan-probname.tab.c \
	lex.fct_pddl.c \
	lex.ops_pddl.c 

PDDL_PARSER_OBJ = scan-fct_pddl.tab.o \
	scan-ops_pddl.tab.o 


SOURCES 	= main.c \
 		./LocalSearch/ActionSubgraph.c   \
		./Parser/inst_easy.c\
		./LocalSearch/ComputeReachInf.c \
		./Parser/inst_final.c   \
		./Parser/memory.c  \
		./LocalSearch/H_max.c   \
		./Parser/inst_hard.c  \
		./Utilities/mutex.c       \
		./HillClimbingSearch/search.c \
		./LocalSearch/H_relaxed.c  \
		./Parser/inst_pre.c   \
		./LocalSearch/numeric.c    \
		./LocalSearch/time.c    \
		./LocalSearch/LocalSearch.c  \
		./Parser/inst_utils.c   \
		./HillClimbingSearch/output.c       \
		./Utilities/utilities.c \
		./Utilities/LpgOutput.c \
		./Parser/parse.c \
		./Utilities/check.c   \
		./HillClimbingSearch/relax.c



HEADERS   =  ./include/ActionSubgraph.h \
	./include/LpgTime.h ./include/inst_pre.h  ./include/orderings.h \
	./include/ComputeReachInf.h  ./include/check.h ./include/inst_utils.h ./include/output.h \
	./include/H_max.h ./include/ff.h ./include/lpg.h ./include/parse.h \
	./include/H_relaxed.h ./include/inst_easy.h ./include/memory.h ./include/relax.h \
	./include/LocalSearch.h ./include/inst_final.h ./include/mutex.h ./include/search.h \
        ./include/LpgOutput.h ./include/inst_hard.h  ./include/numeric.h ./include/utilities.h




OBJECTS 	= $(SOURCES:.c=.o)

####### Implicit rules

.SUFFIXES:

.SUFFIXES: .c .o

.c.o:; $(CC) -o $(<:.c=.o) -c $(CFLAGS) -I$(INCLUDE)  $<

####### Build rules


gpg: $(OBJECTS) $(PDDL_PARSER_OBJ) $(HEADERS)
	$(CC) -o  $(TARGET)  -I$(INCLUDE) $(OBJECTS) $(PDDL_PARSER_OBJ) $(CFLAGS) $(LIBS)

prof: $(OBJECTS) $(PDDL_PARSER_OBJ) $(HEADERS)
	$(CC_PROF) -o prof -I$(INCLUDE) $(OBJECTS) $(PDDL_PARSER_OBJ) $(CFLAGS_PROF) $(LIBS)

gpg-T : $(OBJECTS) $(PDDL_PARSER_OBJ) $(HEADERS)
	$(CC) -o  gpg-T  -I$(INCLUDE) $(OBJECTS) $(PDDL_PARSER_OBJ) $(CFLAGS_T) $(LIBS)


# pddl syntax
scan-fct_pddl.tab.c: ./Parser/scan-fct_pddl.y lex.fct_pddl.c
	bison --verbose -pfct_pddl -bscan-fct_pddl ./Parser/scan-fct_pddl.y

scan-ops_pddl.tab.c: ./Parser/scan-ops_pddl.y lex.ops_pddl.c
	bison --verbose -pops_pddl -bscan-ops_pddl ./Parser/scan-ops_pddl.y

lex.fct_pddl.c: ./Parser/lex-fct_pddl.l
	flex -o./Parser/lex.fct_pddl.c -Pfct_pddl ./Parser/lex-fct_pddl.l  

lex.ops_pddl.c: ./Parser/lex-ops_pddl.l
	flex -o./Parser/lex.ops_pddl.c -Pops_pddl ./Parser/lex-ops_pddl.l

$(OBJECTS): $(HEADERS)
# misc
clean:
	rm -f *.o *.output *.bak *~ *% gmon.out core *_pure_p9_c0_400.o.warnings \
        \#*\# $(RES_PARSER_SRC) $(PDDL_PARSER_SRC)\
	    ./HillClimbingSearch/*.o  ./LocalSearch*.o  ./Parser*.o  ./Utilities/*.o \
	./HillClimbingSearch/*.a  ./LocalSearch*.a  ./Parser*.a  ./Utilities/*.a

veryclean: clean
	rm -f  $(TARGET) H* J* K* L* O* graph.* *.symbex \
	$(PDDL_PARSER_SRC) \
	./Parser/lex.fct_pddl.c ./Parser/lex.ops_pddl.c ./Parser/lex.probname.c \
	*.output

depend:
	makedepend -- $(SOURCES) $(PDDL_PARSER_SRC)

lint:
	lclint -booltype Bool $(SOURCES) 2> output.lint

# DO NOT DELETE







