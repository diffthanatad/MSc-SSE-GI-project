2023-07-14 18:47:19,414	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 15
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_8.sh
run_timeout = 1263
run_lengthout = 
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5


2023-07-14 18:47:19,415	[INFO]	==== WARMUP ====
2023-07-14 19:04:38,609	[INFO]	WARM    SUCCESS               1030.9288               
2023-07-14 19:22:04,406	[INFO]	WARM    SUCCESS               1042.2916               
2023-07-14 19:39:17,606	[INFO]	WARM    SUCCESS               1029.5506               
2023-07-14 19:39:17,606	[INFO]	INITIAL SUCCESS               1029.5506               
2023-07-14 19:39:17,607	[INFO]	==== START: ValidRankingSimplify ====
2023-07-14 19:39:17,722	[DEBUG]	CLEAN_PATCH: StmtInsertion(('core/Solver.cc.xml', '_inter_block', 85), ('core/Solver.cc.xml', 'stmt', 16)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 299)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 362), ('core/Solver.cc.xml', 'stmt', 310)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 200)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 377), ('core/Solver.cc.xml', 'stmt', 436)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 429), ('core/Solver.cc.xml', 'stmt', 299))
2023-07-14 19:39:17,723	[DEBUG]	CLEAN_SIZE: 6 (was 6)
2023-07-14 19:58:39,093	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 85), ('core/Solver.cc.xml', 'stmt', 16)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 299)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 362), ('core/Solver.cc.xml', 'stmt', 310)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 200)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 377), ('core/Solver.cc.xml', 'stmt', 436)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 429), ('core/Solver.cc.xml', 'stmt', 299))
2023-07-14 19:58:39,094	[INFO]	1       SUCCESS              *1157.9085 (112.47%) [6 edit(s)] 
2023-07-14 19:58:39,131	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,7 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
+    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;static IntOption     opt_luby_restart      (_cat, "luby",        "Use the Luby restart sequence", 0, IntRange(0, 1));
 }/*auto*/
     c.mark(1); 
     ca.free(cr);
@@ -506,20 +506,7 @@
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
         Var x = var(trail[i]);
-        if (seen[x]){
-            if (reason(x) == CRef_Undef){
-                assert(level(x) > 0);
-                out_conflict.push(~trail[i]);
-            }else{
-                Clause& c = ca[reason(x)];
-                for (int j = 1; j < c.size(); j++)/*auto*/{
-                    if (level(var(c[j])) > 0)/*auto*/{
-                        seen[var(c[j])] = 1;
-}/*auto*/
-}/*auto*/
-            }
-            seen[x] = 0;
-        }
+        
     }
 
     seen[var(p)] = 0;
@@ -673,6 +660,7 @@
         if (decision[v] && value(v) == l_Undef)/*auto*/{
             vs.push(v);
 }/*auto*/
+        int cnt = 0;
 }/*auto*/
     order_heap.build(vs);
 }
@@ -738,7 +726,7 @@
 #define PUSH(Q, V, Z, S) S += V; Q.push_back(V); if (Q.size() > Z) S -= Q.front(), Q.pop_front();
 lbool Solver::search(int nof_conflicts)
 {
-    assert(ok);
+    
     int         backtrack_level;
     int         conflictC = 0;
     vec<Lit>    learnt_clause;
@@ -812,6 +800,7 @@
                            (int32_t)opt_cp_increase, (double)opt_core_tolerance);
 }/*auto*/
             }
+            assert(ok);
 
         }else{
             // NO CONFLICT
@@ -850,7 +839,7 @@
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
 }/*auto*/
-                    LBD_cut = (int32_t)opt_lbd_cut + adjust;
+                    var_decay += 0.01;
                 }
                 core_added = 0;
             }

2023-07-14 19:58:39,132	[INFO]	-- ranking --
2023-07-14 20:16:09,854	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 85), ('core/Solver.cc.xml', 'stmt', 16))
2023-07-14 20:16:09,854	[INFO]	2       SUCCESS              *1046.8806 (101.68%) [1 edit(s)] 
2023-07-14 20:16:09,875	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,7 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
+    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;static IntOption     opt_luby_restart      (_cat, "luby",        "Use the Luby restart sequence", 0, IntRange(0, 1));
 }/*auto*/
     c.mark(1); 
     ca.free(cr);

2023-07-14 20:33:36,994	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 299))
2023-07-14 20:33:36,994	[INFO]	3       SUCCESS              *1043.5302 (101.36%) [1 edit(s)] 
2023-07-14 20:33:37,005	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -738,7 +738,7 @@
 #define PUSH(Q, V, Z, S) S += V; Q.push_back(V); if (Q.size() > Z) S -= Q.front(), Q.pop_front();
 lbool Solver::search(int nof_conflicts)
 {
-    assert(ok);
+    
     int         backtrack_level;
     int         conflictC = 0;
     vec<Lit>    learnt_clause;

2023-07-14 20:53:11,037	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 362), ('core/Solver.cc.xml', 'stmt', 310))
2023-07-14 20:53:11,037	[INFO]	4       SUCCESS              +1170.1975 (113.66%) [1 edit(s)] 
2023-07-14 20:53:11,047	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -850,7 +850,7 @@
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
 }/*auto*/
-                    LBD_cut = (int32_t)opt_lbd_cut + adjust;
+                    var_decay += 0.01;
                 }
                 core_added = 0;
             }

2023-07-14 21:10:29,819	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 200))
2023-07-14 21:10:29,819	[INFO]	5       SUCCESS              *1035.2588 (100.55%) [1 edit(s)] 
2023-07-14 21:10:29,829	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -506,20 +506,7 @@
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
         Var x = var(trail[i]);
-        if (seen[x]){
-            if (reason(x) == CRef_Undef){
-                assert(level(x) > 0);
-                out_conflict.push(~trail[i]);
-            }else{
-                Clause& c = ca[reason(x)];
-                for (int j = 1; j < c.size(); j++)/*auto*/{
-                    if (level(var(c[j])) > 0)/*auto*/{
-                        seen[var(c[j])] = 1;
-}/*auto*/
-}/*auto*/
-            }
-            seen[x] = 0;
-        }
+        
     }
 
     seen[var(p)] = 0;

2023-07-14 21:27:57,153	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 377), ('core/Solver.cc.xml', 'stmt', 436))
2023-07-14 21:27:57,154	[INFO]	6       SUCCESS              +1043.6185 (101.37%) [1 edit(s)] 
2023-07-14 21:27:57,166	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -673,6 +673,7 @@
         if (decision[v] && value(v) == l_Undef)/*auto*/{
             vs.push(v);
 }/*auto*/
+        int cnt = 0;
 }/*auto*/
     order_heap.build(vs);
 }

2023-07-14 21:45:11,297	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 429), ('core/Solver.cc.xml', 'stmt', 299))
2023-07-14 21:45:11,298	[INFO]	7       SUCCESS              *1030.5445 (100.1%) [1 edit(s)] 
2023-07-14 21:45:11,312	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -812,6 +812,7 @@
                            (int32_t)opt_cp_increase, (double)opt_core_tolerance);
 }/*auto*/
             }
+            assert(ok);
 
         }else{
             // NO CONFLICT

2023-07-14 21:45:11,312	[INFO]	-- simplify --
2023-07-14 21:45:11,323	[DEBUG]	
2023-07-14 21:45:11,324	[INFO]	8       SUCCESS              *1029.5506 (100.0%) [0 edit(s)] 
2023-07-14 21:45:11,337	[DEBUG]	
2023-07-14 21:45:11,352	[INFO]	==== END ====
2023-07-14 21:45:11,352	[INFO]	Reason: validation end
2023-07-14 21:45:11,352	[INFO]	
2023-07-14 21:45:11,353	[INFO]	==== REPORT ====
2023-07-14 21:45:11,353	[INFO]	Termination: validation end
2023-07-14 21:45:11,353	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1689356831.log
2023-07-14 21:45:11,365	[INFO]	Patch file: _magpie_logs/minisat-hack_1689356831.patch
2023-07-14 21:45:11,365	[INFO]	Diff file: _magpie_logs/minisat-hack_1689356831.diff
2023-07-14 21:45:11,365	[INFO]	Best fitness: 1029.5506
2023-07-14 21:45:11,365	[INFO]	Best patch: 
2023-07-14 21:45:11,365	[INFO]	Diff:

