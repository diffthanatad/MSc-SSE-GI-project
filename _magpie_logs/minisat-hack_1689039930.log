2023-07-11 02:45:32,114	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 15
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_3.sh
run_timeout = 1266
run_lengthout = 
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 
max_time = 21840
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5


2023-07-11 02:45:32,115	[INFO]	==== WARMUP ====
2023-07-11 03:01:59,565	[INFO]	WARM    SUCCESS               977.1179                
2023-07-11 03:18:14,497	[INFO]	WARM    SUCCESS               971.2714                
2023-07-11 03:34:19,207	[INFO]	WARM    SUCCESS               960.1021                
2023-07-11 03:34:19,207	[INFO]	INITIAL SUCCESS               960.1021                
2023-07-11 03:34:19,207	[INFO]	==== START: ValidRankingSimplify ====
2023-07-11 03:34:19,307	[DEBUG]	CLEAN_PATCH: StmtReplacement(('core/Solver.cc.xml', 'stmt', 404), ('core/Solver.cc.xml', 'stmt', 19)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 158), ('core/Solver.cc.xml', 'stmt', 219)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 427)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 161), ('core/Solver.cc.xml', 'stmt', 406)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 476))
2023-07-11 03:34:19,307	[DEBUG]	CLEAN_SIZE: 6 (was 6)
2023-07-11 03:55:29,585	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 404), ('core/Solver.cc.xml', 'stmt', 19)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 158), ('core/Solver.cc.xml', 'stmt', 219)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 427)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 161), ('core/Solver.cc.xml', 'stmt', 406)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 476))
2023-07-11 03:55:29,586	[INFO]	1       RUN_TIMEOUT           None  [6 edit(s)]       
2023-07-11 03:55:29,586	[INFO]	-- ranking --
2023-07-11 04:11:37,582	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 404), ('core/Solver.cc.xml', 'stmt', 19))
2023-07-11 04:11:37,583	[INFO]	2       SUCCESS              *962.8642 (100.29%) [1 edit(s)] 
2023-07-11 04:11:37,599	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -960,7 +960,7 @@
     while (status == l_Undef){
         double rest_base = luby_restart ? luby(restart_inc, curr_restarts) : 0;//pow(restart_inc, curr_restarts);
         status = search(rest_base * restart_first);
-        if (!withinBudget())/*auto*/{ break;
+        if (!withinBudget())/*auto*/{ static DoubleOption  opt_garbage_frac      (_cat, "gc-frac",     "The fraction of wasted memory allowed before a garbage collection is triggered",  0.20, DoubleRange(0, false, HUGE_VAL, false));
 }/*auto*/
         curr_restarts++;
     }

2023-07-11 04:27:47,933	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 158), ('core/Solver.cc.xml', 'stmt', 219))
2023-07-11 04:27:47,934	[INFO]	3       SUCCESS              +965.784 (100.59%) [1 edit(s)] 
2023-07-11 04:27:47,945	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -421,7 +421,7 @@
         i = j = out_learnt.size();
 }/*auto*/
 
-    max_literals += out_learnt.size();
+    vec<Watcher>&  ws  = watches[p];
     out_learnt.shrink(i - j);
     tot_literals += out_learnt.size();
 

2023-07-11 04:43:48,500	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 427))
2023-07-11 04:43:48,500	[INFO]	4       SUCCESS              *956.8484 (99.66%) [1 edit(s)] 
2023-07-11 04:43:48,513	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1015,9 +1015,7 @@
 void Solver::toDimacs(const char *file, const vec<Lit>& assumps)
 {
     FILE* f = fopen(file, "wr");
-    if (f == NULL)/*auto*/{
-        fprintf(stderr, "could not open file %s\n", file), exit(1);
-}/*auto*/
+    
     toDimacs(f, assumps);
     fclose(f);
 }

2023-07-11 05:03:29,892	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 161), ('core/Solver.cc.xml', 'stmt', 406))
2023-07-11 05:03:29,892	[INFO]	5       SUCCESS              +1177.5123 (122.64%) [1 edit(s)] 
2023-07-11 05:03:29,903	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -425,7 +425,9 @@
     out_learnt.shrink(i - j);
     tot_literals += out_learnt.size();
 
-    LBD(out_learnt);
+    if (verbosity >= 1)/*auto*/{
+        printf("c ===============================================================================\n");
+}/*auto*/
 
     // Find correct backtrack level:
     //

2023-07-11 05:19:29,544	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 384))
2023-07-11 05:19:29,545	[INFO]	6       SUCCESS              *955.9874 (99.57%) [1 edit(s)] 
2023-07-11 05:19:29,555	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -930,7 +930,7 @@
         x = x % size;
     }
 
-    return pow(y, seq);
+    
 }
 
 // NOTE: assumptions passed in member-variable 'assumptions'.

2023-07-11 05:35:54,134	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 476))
2023-07-11 05:35:54,134	[INFO]	7       SUCCESS              +981.0093 (102.18%) [1 edit(s)] 
2023-07-11 05:35:54,143	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1131,5 +1131,5 @@
         printf("c |  Garbage collection:   %12d bytes => %12d bytes             |\n", 
                ca.size()*ClauseAllocator::Unit_Size, to.size()*ClauseAllocator::Unit_Size);
 }/*auto*/
-    to.moveTo(ca);
-}
+    
+}

2023-07-11 05:35:54,143	[INFO]	-- rebuild --
2023-07-11 05:52:31,538	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 427))
2023-07-11 05:52:31,538	[INFO]	8       SUCCESS              +993.6164 (103.49%) [2 edit(s)] 
2023-07-11 05:52:31,549	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -930,7 +930,7 @@
         x = x % size;
     }
 
-    return pow(y, seq);
+    
 }
 
 // NOTE: assumptions passed in member-variable 'assumptions'.
@@ -1015,9 +1015,7 @@
 void Solver::toDimacs(const char *file, const vec<Lit>& assumps)
 {
     FILE* f = fopen(file, "wr");
-    if (f == NULL)/*auto*/{
-        fprintf(stderr, "could not open file %s\n", file), exit(1);
-}/*auto*/
+    
     toDimacs(f, assumps);
     fclose(f);
 }

2023-07-11 06:09:03,674	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 404), ('core/Solver.cc.xml', 'stmt', 19))
2023-07-11 06:09:03,674	[INFO]	9       SUCCESS              +987.4382 (102.85%) [2 edit(s)] 
2023-07-11 06:09:03,685	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -930,7 +930,7 @@
         x = x % size;
     }
 
-    return pow(y, seq);
+    
 }
 
 // NOTE: assumptions passed in member-variable 'assumptions'.
@@ -960,7 +960,7 @@
     while (status == l_Undef){
         double rest_base = luby_restart ? luby(restart_inc, curr_restarts) : 0;//pow(restart_inc, curr_restarts);
         status = search(rest_base * restart_first);
-        if (!withinBudget())/*auto*/{ break;
+        if (!withinBudget())/*auto*/{ static DoubleOption  opt_garbage_frac      (_cat, "gc-frac",     "The fraction of wasted memory allowed before a garbage collection is triggered",  0.20, DoubleRange(0, false, HUGE_VAL, false));
 }/*auto*/
         curr_restarts++;
     }

2023-07-11 06:25:40,522	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 158), ('core/Solver.cc.xml', 'stmt', 219))
2023-07-11 06:25:40,522	[INFO]	10      SUCCESS              +993.2349 (103.45%) [2 edit(s)] 
2023-07-11 06:25:40,534	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -421,7 +421,7 @@
         i = j = out_learnt.size();
 }/*auto*/
 
-    max_literals += out_learnt.size();
+    vec<Watcher>&  ws  = watches[p];
     out_learnt.shrink(i - j);
     tot_literals += out_learnt.size();
 
@@ -930,7 +930,7 @@
         x = x % size;
     }
 
-    return pow(y, seq);
+    
 }
 
 // NOTE: assumptions passed in member-variable 'assumptions'.

2023-07-11 06:42:03,941	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 476))
2023-07-11 06:42:03,941	[INFO]	11      SUCCESS              +979.4476 (102.01%) [2 edit(s)] 
2023-07-11 06:42:03,952	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -930,7 +930,7 @@
         x = x % size;
     }
 
-    return pow(y, seq);
+    
 }
 
 // NOTE: assumptions passed in member-variable 'assumptions'.
@@ -1131,5 +1131,5 @@
         printf("c |  Garbage collection:   %12d bytes => %12d bytes             |\n", 
                ca.size()*ClauseAllocator::Unit_Size, to.size()*ClauseAllocator::Unit_Size);
 }/*auto*/
-    to.moveTo(ca);
-}
+    
+}

2023-07-11 07:03:13,946	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 161), ('core/Solver.cc.xml', 'stmt', 406))
2023-07-11 07:03:13,947	[INFO]	12      RUN_TIMEOUT           None  [2 edit(s)]       
2023-07-11 07:03:13,947	[INFO]	-- simplify --
2023-07-11 07:03:13,963	[DEBUG]	
2023-07-11 07:03:13,963	[INFO]	13      SUCCESS              +960.1021 (100.0%) [0 edit(s)] 
2023-07-11 07:03:13,978	[DEBUG]	
2023-07-11 07:03:13,995	[INFO]	==== END ====
2023-07-11 07:03:13,995	[INFO]	Reason: validation end
2023-07-11 07:03:13,995	[INFO]	
2023-07-11 07:03:13,995	[INFO]	==== REPORT ====
2023-07-11 07:03:13,995	[INFO]	Termination: validation end
2023-07-11 07:03:13,996	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1689039930.log
2023-07-11 07:03:14,020	[INFO]	Patch file: _magpie_logs/minisat-hack_1689039930.patch
2023-07-11 07:03:14,020	[INFO]	Diff file: _magpie_logs/minisat-hack_1689039930.diff
2023-07-11 07:03:14,020	[INFO]	Best fitness: 955.9874
2023-07-11 07:03:14,021	[INFO]	Best patch: StmtDeletion(('core/Solver.cc.xml', 'stmt', 384))
2023-07-11 07:03:14,021	[INFO]	Diff:
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -930,7 +930,7 @@
         x = x % size;
     }
 
-    return pow(y, seq);
+    
 }
 
 // NOTE: assumptions passed in member-variable 'assumptions'.

