2023-08-22 21:13:54,494	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/sat4j
target_files = 
	org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml
	sat4j.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 150
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 150
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_5.sh
run_timeout = 2261
run_lengthout = 
fitness = perf_instructions

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 1
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5

[search.ga]
pop_size = 100
elitism_size = 10
cxpb_chrm = 0.5
cxpb_gene = 0.5
mutpb_chrm = 0.2
mutpb_gene = 0.1
gi_delete_prob = 0.5
gi_create_prob = 0.5
tournament_size = 3

[search.pso]
pop_size = 10
speed_min = -3
speed_max = 3
c1 = 1.49
c2 = 1.49


2023-08-22 21:13:54,504	[INFO]	==== WARMUP ====
2023-08-22 21:50:45,115	[INFO]	WARM    SUCCESS               9434076105024           
2023-08-22 21:50:45,140	[INFO]	INITIAL SUCCESS               9434076105024           
2023-08-22 21:50:45,141	[INFO]	==== START: ValidTest ====
2023-08-22 21:50:45,271	[DEBUG]	CLEAN_PATCH: StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 162)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 200)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 868)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 363)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 752), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 748)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 516), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 651)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 924)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1231), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 447))
2023-08-22 21:50:45,271	[DEBUG]	CLEAN_SIZE: 8 (was 8)
2023-08-22 22:23:42,877	[DEBUG]	StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 162)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 200)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 868)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 363)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 752), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 748)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 516), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 651)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 924)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1231), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 447))
2023-08-22 22:23:42,878	[INFO]	1       SUCCESS              *9820880679228 (104.1%) [8 edit(s)] 
2023-08-22 22:23:42,894	[DEBUG]	--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -565,7 +565,7 @@
         this.voc.setReason(p, from);
         this.trail.push(p);
         if (from != null && from.learnt()) {
-            this.learnedConstraintsDeletionStrategy.onPropagation(from);
+            
         }
         return true;
     }
@@ -639,7 +639,7 @@
         } while (--counter > 0);
 
         outLearnt.set(0, p ^ 1);
-        this.simplifier.simplify(outLearnt);
+        
 
         Constr c = this.dsfactory.createUnregisteredClause(outLearnt);
         this.learnedConstraintsDeletionStrategy.onClauseLearning(c);
@@ -1056,7 +1056,7 @@
     }
 
     public void varBumpActivity(int p) {
-        this.order.updateVar(p);
+        
     }
 
     private void claRescalActivity() {
@@ -1156,6 +1156,7 @@
         // assert trail.size() == qhead || !undertimeout;
         int decisionvar = this.trail.unsafeGet(this.trailLim.last());
         this.slistener.backtracking(toDimacs(decisionvar));
+        this.qhead = 0;
         for (int c = this.trail.size() - this.trailLim.last(); c > 0; c--) {
             undoOne();
         }
@@ -1379,21 +1380,7 @@
         for (int i = 1; i <= nVars(); i++) {
             if (this.voc.belongsToPool(i)) {
                 int p = this.voc.getFromPool(i);
-                if (!this.voc.isUnassigned(p)) {
-                    tempmodel.push(this.voc.isSatisfied(p) ? i : -i);
-                    this.userbooleanmodel[i - 1] = this.voc.isSatisfied(p);
-                    reason = this.voc.getReason(p);
-                    if (reason == null && this.voc.getLevel(p) > 0
-                            // we consider literals propagated by learned
-                            // clauses
-                            // as decisions to allow blocking models by
-                            // decisions.
-                            || reason != null && reason.learnt()) {
-                        this.decisions.push(tempmodel.last());
-                    } else {
-                        this.implied.push(tempmodel.last());
-                    }
-                }
+                cancelUntil(0);
             }
         }
         this.model = new int[tempmodel.size()];
@@ -1884,6 +1871,7 @@
             Counter count = learntTypes.get(type);
             if (count == null) {
                 learntTypes.put(type, new Counter());
+                this.sharedConflict = null;
             } else {
                 count.inc();
             }
@@ -2248,7 +2236,7 @@
             System.arraycopy(this.model, 0, nmodel, 0, nmodel.length);
         } else {
             nmodel = new int[this.fullmodel.length];
-            System.arraycopy(this.fullmodel, 0, nmodel, 0, nmodel.length);
+            
         }
 
         return nmodel;
@@ -2425,7 +2413,7 @@
                 Integer trail1 = trailLevel.get(Math.abs(i1));
                 Integer trail2 = trailLevel.get(Math.abs(i2));
                 if (trail1 == null) {
-                    return -1;
+                    
                 }
                 if (trail2 == null) {
                     return -1;

2023-08-22 22:23:42,910	[INFO]	==== END ====
2023-08-22 22:23:42,910	[INFO]	Reason: validation end
2023-08-22 22:23:42,910	[INFO]	
2023-08-22 22:23:42,910	[INFO]	==== REPORT ====
2023-08-22 22:23:42,910	[INFO]	Termination: validation end
2023-08-22 22:23:42,910	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/sat4j_1692735193.log
2023-08-22 22:23:42,926	[INFO]	Patch file: _magpie_logs/sat4j_1692735193.patch
2023-08-22 22:23:42,926	[INFO]	Diff file: _magpie_logs/sat4j_1692735193.diff
2023-08-22 22:23:42,926	[INFO]	Best fitness: 9820880679228
2023-08-22 22:23:42,926	[INFO]	Best patch: StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 162)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 200)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 868)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 363)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 752), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 748)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 516), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 651)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 924)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1231), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 447))
2023-08-22 22:23:42,926	[INFO]	Diff:
--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -565,7 +565,7 @@
         this.voc.setReason(p, from);
         this.trail.push(p);
         if (from != null && from.learnt()) {
-            this.learnedConstraintsDeletionStrategy.onPropagation(from);
+            
         }
         return true;
     }
@@ -639,7 +639,7 @@
         } while (--counter > 0);
 
         outLearnt.set(0, p ^ 1);
-        this.simplifier.simplify(outLearnt);
+        
 
         Constr c = this.dsfactory.createUnregisteredClause(outLearnt);
         this.learnedConstraintsDeletionStrategy.onClauseLearning(c);
@@ -1056,7 +1056,7 @@
     }
 
     public void varBumpActivity(int p) {
-        this.order.updateVar(p);
+        
     }
 
     private void claRescalActivity() {
@@ -1156,6 +1156,7 @@
         // assert trail.size() == qhead || !undertimeout;
         int decisionvar = this.trail.unsafeGet(this.trailLim.last());
         this.slistener.backtracking(toDimacs(decisionvar));
+        this.qhead = 0;
         for (int c = this.trail.size() - this.trailLim.last(); c > 0; c--) {
             undoOne();
         }
@@ -1379,21 +1380,7 @@
         for (int i = 1; i <= nVars(); i++) {
             if (this.voc.belongsToPool(i)) {
                 int p = this.voc.getFromPool(i);
-                if (!this.voc.isUnassigned(p)) {
-                    tempmodel.push(this.voc.isSatisfied(p) ? i : -i);
-                    this.userbooleanmodel[i - 1] = this.voc.isSatisfied(p);
-                    reason = this.voc.getReason(p);
-                    if (reason == null && this.voc.getLevel(p) > 0
-                            // we consider literals propagated by learned
-                            // clauses
-                            // as decisions to allow blocking models by
-                            // decisions.
-                            || reason != null && reason.learnt()) {
-                        this.decisions.push(tempmodel.last());
-                    } else {
-                        this.implied.push(tempmodel.last());
-                    }
-                }
+                cancelUntil(0);
             }
         }
         this.model = new int[tempmodel.size()];
@@ -1884,6 +1871,7 @@
             Counter count = learntTypes.get(type);
             if (count == null) {
                 learntTypes.put(type, new Counter());
+                this.sharedConflict = null;
             } else {
                 count.inc();
             }
@@ -2248,7 +2236,7 @@
             System.arraycopy(this.model, 0, nmodel, 0, nmodel.length);
         } else {
             nmodel = new int[this.fullmodel.length];
-            System.arraycopy(this.fullmodel, 0, nmodel, 0, nmodel.length);
+            
         }
 
         return nmodel;
@@ -2425,7 +2413,7 @@
                 Integer trail1 = trailLevel.get(Math.abs(i1));
                 Integer trail2 = trailLevel.get(Math.abs(i2));
                 if (trail1 == null) {
-                    return -1;
+                    
                 }
                 if (trail2 == null) {
                     return -1;

