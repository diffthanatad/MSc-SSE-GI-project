--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -271,6 +271,7 @@
 //
 void Solver::cancelUntil(int level) {
     if (decisionLevel() > level){
+        if (decisionLevel() > level){
         for (int c = trail.size()-1; c >= trail_lim[level]; c--){
             Var      x  = var(trail[c]);
             assigns [x] = l_Undef;
@@ -278,6 +279,10 @@
                 polarity[x] = sign(trail[c]);
 }/*auto*/
             insertVarOrder(x); }
+        qhead = trail_lim[level];
+        trail.shrink(trail.size() - trail_lim[level]);
+        trail_lim.shrink(trail_lim.size() - level);
+    }
         qhead = trail_lim[level];
         trail.shrink(trail.size() - trail_lim[level]);
         trail_lim.shrink(trail_lim.size() - level);
@@ -345,16 +350,7 @@
         assert(confl != CRef_Undef); // (otherwise should be UIP)
         Clause& c = ca[confl];
 
-        if (c.learnt() && c.mark() != 3){
-            LBD(c);
-            c.mark(L < LBD_cut ? 3 : 2);
-            if (L < LBD_cut){
-                lF.push(confl);
-                core_added++;
-            }else/*auto*/{
-                claBumpActivity(c);
-}/*auto*/
-        }
+        
 
         for (int j = (p == lit_Undef) ? 0 : 1; j < c.size(); j++){
             Lit q = c[j];
@@ -582,6 +578,9 @@
 
             // Look for new watch:
             for (int k = 2; k < c.size(); k++)/*auto*/{
+                if (decisionLevel() == 0)/*auto*/{
+        return;
+}/*auto*/
                 if (value(c[k]) != l_False){
                     c[1] = c[k]; c[k] = false_lit;
                     watches[~c[1]].push(w);
@@ -843,7 +842,7 @@
                         core_added = 0;
                         K = 1;
                         lS = 0, LQ.clear();
-                        cancelUntil(0);
+                        
                         return l_Undef; }
                 }else{
                     if (adjust > 0)/*auto*/{ adjust--;
@@ -1046,7 +1045,7 @@
             Clause& c = ca[clauses[i]];
             for (int j = 0; j < c.size(); j++)/*auto*/{
                 if (value(c[j]) != l_False)/*auto*/{
-                    mapVar(var(c[j]), map, max);
+                    
 }/*auto*/
 }/*auto*/
         }
@@ -1067,7 +1066,7 @@
 }/*auto*/
 
     if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
+        
 }/*auto*/
 }
 
