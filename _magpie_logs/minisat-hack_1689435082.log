2023-07-15 16:31:23,442	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 15
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_6.sh
run_timeout = 1251
run_lengthout = 
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5


2023-07-15 16:31:23,442	[INFO]	==== WARMUP ====
2023-07-15 16:47:31,908	[INFO]	WARM    SUCCESS               959.7825                
2023-07-15 17:03:35,541	[INFO]	WARM    SUCCESS               959.7579                
2023-07-15 17:20:19,865	[INFO]	WARM    SUCCESS               1000.958                
2023-07-15 17:20:19,865	[INFO]	INITIAL SUCCESS               1000.958                
2023-07-15 17:20:19,866	[INFO]	==== START: ValidRankingSimplify ====
2023-07-15 17:20:20,123	[DEBUG]	CLEAN_PATCH: StmtReplacement(('core/Solver.cc.xml', 'stmt', 333), ('core/Solver.cc.xml', 'stmt', 364)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 316), ('core/Solver.cc.xml', 'stmt', 118)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 359), ('core/Solver.cc.xml', 'stmt', 375)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 381)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 188), ('core/Solver.cc.xml', 'stmt', 442)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 147))
2023-07-15 17:20:20,124	[DEBUG]	CLEAN_SIZE: 6 (was 7)
2023-07-15 17:40:54,965	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 333), ('core/Solver.cc.xml', 'stmt', 364)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 155), ('core/Solver.cc.xml', 'stmt', 59)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 316), ('core/Solver.cc.xml', 'stmt', 118)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 359), ('core/Solver.cc.xml', 'stmt', 375)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 381)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 188), ('core/Solver.cc.xml', 'stmt', 442)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 147))
2023-07-15 17:40:54,965	[INFO]	1       SUCCESS              *1230.9821 (122.98%) [7 edit(s)] 
2023-07-15 17:40:54,982	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -399,24 +399,9 @@
             if (reason(var(out_learnt[i])) == CRef_Undef || !litRedundant(out_learnt[i], abstract_level))/*auto*/{
                 out_learnt[j++] = out_learnt[i];
 }/*auto*/
+            Clause& c = ca[clauses[i]];
 }/*auto*/
         
-    }else if (ccmin_mode == 1){
-        for (i = j = 1; i < out_learnt.size(); i++){
-            Var x = var(out_learnt[i]);
-
-            if (reason(x) == CRef_Undef)/*auto*/{
-                out_learnt[j++] = out_learnt[i];
-}/*auto*/
-            else{
-                Clause& c = ca[reason(var(out_learnt[i]))];
-                for (int k = 1; k < c.size(); k++)/*auto*/{
-                    if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
-                        break; }
-}/*auto*/
-            }
-        }
     }else/*auto*/{
         i = j = out_learnt.size();
 }/*auto*/
@@ -758,7 +743,7 @@
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
                 if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
+                    lF.push(confl);
 }/*auto*/
             }
 
@@ -793,7 +778,7 @@
               fprintf(output, "0\n");
             }*/
 
-            varDecayActivity();
+            Lit next = lit_Undef;
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
@@ -846,7 +831,7 @@
                         cancelUntil(0);
                         return l_Undef; }
                 }else{
-                    if (adjust > 0)/*auto*/{ adjust--;
+                    if (adjust > 0)/*auto*/{ int end = i == decisionLevel() ? trail.size() : trail_lim[i];
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
 }/*auto*/
@@ -925,7 +910,7 @@
 }/*auto*/
 
     while (size-1 != x){
-        size = (size-1)>>1;
+        
         seq--;
         x = x % size;
     }

2023-07-15 17:40:54,982	[INFO]	-- ranking --
2023-07-15 18:00:21,632	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 333), ('core/Solver.cc.xml', 'stmt', 364))
2023-07-15 18:00:21,632	[INFO]	2       SUCCESS              *1163.1897 (116.21%) [1 edit(s)] 
2023-07-15 18:00:21,643	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -793,7 +793,7 @@
               fprintf(output, "0\n");
             }*/
 
-            varDecayActivity();
+            Lit next = lit_Undef;
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){

2023-07-15 18:16:23,571	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 155), ('core/Solver.cc.xml', 'stmt', 59))
2023-07-15 18:16:23,571	[INFO]	3       SUCCESS              *958.4577 (95.75%) [1 edit(s)] 
2023-07-15 18:16:23,583	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -412,7 +412,7 @@
                 Clause& c = ca[reason(var(out_learnt[i]))];
                 for (int k = 1; k < c.size(); k++)/*auto*/{
                     if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
+                        assert(c.size() > 1);
                         break; }
 }/*auto*/
             }

2023-07-15 18:34:24,991	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 316), ('core/Solver.cc.xml', 'stmt', 118))
2023-07-15 18:34:24,991	[INFO]	4       SUCCESS              +1077.7044 (107.67%) [1 edit(s)] 
2023-07-15 18:34:25,002	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -758,7 +758,7 @@
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
                 if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
+                    lF.push(confl);
 }/*auto*/
             }
 

2023-07-15 18:50:31,649	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 359), ('core/Solver.cc.xml', 'stmt', 375))
2023-07-15 18:50:31,650	[INFO]	5       SUCCESS              +963.0955 (96.22%) [1 edit(s)] 
2023-07-15 18:50:31,660	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -846,7 +846,7 @@
                         cancelUntil(0);
                         return l_Undef; }
                 }else{
-                    if (adjust > 0)/*auto*/{ adjust--;
+                    if (adjust > 0)/*auto*/{ int end = i == decisionLevel() ? trail.size() : trail_lim[i];
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
 }/*auto*/

2023-07-15 19:06:29,569	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 381))
2023-07-15 19:06:29,569	[INFO]	6       SUCCESS              *954.4428 (95.35%) [1 edit(s)] 
2023-07-15 19:06:29,579	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -925,7 +925,7 @@
 }/*auto*/
 
     while (size-1 != x){
-        size = (size-1)>>1;
+        
         seq--;
         x = x % size;
     }

2023-07-15 19:22:37,826	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 188), ('core/Solver.cc.xml', 'stmt', 442))
2023-07-15 19:22:37,827	[INFO]	7       SUCCESS              +964.8075 (96.39%) [1 edit(s)] 
2023-07-15 19:22:37,840	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -399,6 +399,7 @@
             if (reason(var(out_learnt[i])) == CRef_Undef || !litRedundant(out_learnt[i], abstract_level))/*auto*/{
                 out_learnt[j++] = out_learnt[i];
 }/*auto*/
+            Clause& c = ca[clauses[i]];
 }/*auto*/
         
     }else if (ccmin_mode == 1){

2023-07-15 19:38:56,908	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 147))
2023-07-15 19:38:56,909	[INFO]	8       SUCCESS              +975.5024 (97.46%) [1 edit(s)] 
2023-07-15 19:38:56,928	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -401,22 +401,6 @@
 }/*auto*/
 }/*auto*/
         
-    }else if (ccmin_mode == 1){
-        for (i = j = 1; i < out_learnt.size(); i++){
-            Var x = var(out_learnt[i]);
-
-            if (reason(x) == CRef_Undef)/*auto*/{
-                out_learnt[j++] = out_learnt[i];
-}/*auto*/
-            else{
-                Clause& c = ca[reason(var(out_learnt[i]))];
-                for (int k = 1; k < c.size(); k++)/*auto*/{
-                    if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
-                        break; }
-}/*auto*/
-            }
-        }
     }else/*auto*/{
         i = j = out_learnt.size();
 }/*auto*/

2023-07-15 19:38:56,929	[INFO]	-- rebuild --
2023-07-15 19:55:03,784	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 381)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 155), ('core/Solver.cc.xml', 'stmt', 59))
2023-07-15 19:55:03,784	[INFO]	9       SUCCESS              +963.1956 (96.23%) [2 edit(s)] 
2023-07-15 19:55:03,796	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -412,7 +412,7 @@
                 Clause& c = ca[reason(var(out_learnt[i]))];
                 for (int k = 1; k < c.size(); k++)/*auto*/{
                     if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
+                        assert(c.size() > 1);
                         break; }
 }/*auto*/
             }
@@ -925,7 +925,7 @@
 }/*auto*/
 
     while (size-1 != x){
-        size = (size-1)>>1;
+        
         seq--;
         x = x % size;
     }

