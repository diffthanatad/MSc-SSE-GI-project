2023-08-21 11:55:29,735	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 16
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_5.sh
run_timeout = 1600
run_lengthout = 
fitness = perf_instructions

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidTest
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 1
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5

[search.ga]
pop_size = 100
elitism_size = 10
cxpb_chrm = 0.5
cxpb_gene = 0.5
mutpb_chrm = 0.2
mutpb_gene = 0.1
gi_delete_prob = 0.5
gi_create_prob = 0.5
tournament_size = 3

[search.pso]
pop_size = 10
speed_min = -3
speed_max = 3
c1 = 1.49
c2 = 1.49


2023-08-21 11:55:29,736	[INFO]	==== WARMUP ====
2023-08-21 12:12:59,982	[INFO]	WARM    SUCCESS               1879763730065           
2023-08-21 12:12:59,983	[INFO]	INITIAL SUCCESS               1879763730065           
2023-08-21 12:12:59,983	[INFO]	==== START: ValidTest ====
2023-08-21 12:13:00,080	[DEBUG]	CLEAN_PATCH: StmtDeletion(('core/Solver.cc.xml', 'stmt', 80)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 180), ('core/Solver.cc.xml', 'stmt', 234)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 309), ('core/Solver.cc.xml', 'stmt', 13)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 194), ('core/Solver.cc.xml', 'stmt', 374)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 74))
2023-08-21 12:13:00,080	[DEBUG]	CLEAN_SIZE: 5 (was 5)
2023-08-21 12:39:14,622	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 80)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 180), ('core/Solver.cc.xml', 'stmt', 234)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 309), ('core/Solver.cc.xml', 'stmt', 13)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 194), ('core/Solver.cc.xml', 'stmt', 374)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 74))
2023-08-21 12:39:14,622	[INFO]	1       SUCCESS              *2731562112857 (145.31%) [5 edit(s)] 
2023-08-21 12:39:14,637	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -235,7 +235,7 @@
 
     if (c.learnt())/*auto*/{ learnts_literals -= c.size();
 }/*auto*/
-    else/*auto*/{            clauses_literals -= c.size();
+    else/*auto*/{            
 }/*auto*/ }
 
 
@@ -254,7 +254,7 @@
     if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
 }/*auto*/
     c.mark(1); 
-    ca.free(cr);
+    
 }
 
 
@@ -376,7 +376,8 @@
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{;
-}/*auto*/
+}/*auto*/Lit     first = c[0];
+
         p     = trail[index+1];
         confl = reason(var(p));
         seen[var(p)] = 0;
@@ -496,7 +497,7 @@
 void Solver::analyzeFinal(Lit p, vec<Lit>& out_conflict)
 {
     out_conflict.clear();
-    out_conflict.push(p);
+    int beg = i == 0 ? 0 : trail_lim[i - 1];
 
     if (decisionLevel() == 0)/*auto*/{
         return;
@@ -749,9 +750,7 @@
         if (confl != CRef_Undef){
             // CONFLICT
             conflicts++; conflictC++;
-            if (conflicts % 5000 == 0 && var_decay < 0.95)/*auto*/{
-                var_decay += 0.01;
-}/*auto*/
+            static IntOption     opt_ccmin_mode        (_cat, "ccmin-mode",  "Controls conflict clause minimization (0=none, 1=basic, 2=deep)", 2, IntRange(0, 2));
             if (decisionLevel() == 0)/*auto*/{ return l_False;
 }/*auto*/
 

2023-08-21 12:39:14,650	[INFO]	==== END ====
2023-08-21 12:39:14,650	[INFO]	Reason: validation end
2023-08-21 12:39:14,650	[INFO]	
2023-08-21 12:39:14,650	[INFO]	==== REPORT ====
2023-08-21 12:39:14,650	[INFO]	Termination: validation end
2023-08-21 12:39:14,650	[INFO]	Log file: /cs/research/crest/home0/jpetke/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1692615326.log
2023-08-21 12:39:14,663	[INFO]	Patch file: _magpie_logs/minisat-hack_1692615326.patch
2023-08-21 12:39:14,663	[INFO]	Diff file: _magpie_logs/minisat-hack_1692615326.diff
2023-08-21 12:39:14,663	[INFO]	Best fitness: 2731562112857
2023-08-21 12:39:14,663	[INFO]	Best patch: StmtDeletion(('core/Solver.cc.xml', 'stmt', 80)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 180), ('core/Solver.cc.xml', 'stmt', 234)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 309), ('core/Solver.cc.xml', 'stmt', 13)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 194), ('core/Solver.cc.xml', 'stmt', 374)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 74))
2023-08-21 12:39:14,664	[INFO]	Diff:
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -235,7 +235,7 @@
 
     if (c.learnt())/*auto*/{ learnts_literals -= c.size();
 }/*auto*/
-    else/*auto*/{            clauses_literals -= c.size();
+    else/*auto*/{            
 }/*auto*/ }
 
 
@@ -254,7 +254,7 @@
     if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
 }/*auto*/
     c.mark(1); 
-    ca.free(cr);
+    
 }
 
 
@@ -376,7 +376,8 @@
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{;
-}/*auto*/
+}/*auto*/Lit     first = c[0];
+
         p     = trail[index+1];
         confl = reason(var(p));
         seen[var(p)] = 0;
@@ -496,7 +497,7 @@
 void Solver::analyzeFinal(Lit p, vec<Lit>& out_conflict)
 {
     out_conflict.clear();
-    out_conflict.push(p);
+    int beg = i == 0 ? 0 : trail_lim[i - 1];
 
     if (decisionLevel() == 0)/*auto*/{
         return;
@@ -749,9 +750,7 @@
         if (confl != CRef_Undef){
             // CONFLICT
             conflicts++; conflictC++;
-            if (conflicts % 5000 == 0 && var_decay < 0.95)/*auto*/{
-                var_decay += 0.01;
-}/*auto*/
+            static IntOption     opt_ccmin_mode        (_cat, "ccmin-mode",  "Controls conflict clause minimization (0=none, 1=basic, 2=deep)", 2, IntRange(0, 2));
             if (decisionLevel() == 0)/*auto*/{ return l_False;
 }/*auto*/
 

