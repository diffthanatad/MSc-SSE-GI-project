--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -15,7 +15,6 @@
 NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
-OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 **************************************************************************************************/
 
 /**************************************************************************************************
@@ -96,7 +95,6 @@
     // Statistics: (formerly in 'SolverStats')
     //
   , solves(0), starts(0), decisions(0), rnd_decisions(0), propagations(0), conflicts(0)
-  , dec_vars(0), clauses_literals(0), learnts_literals(0), max_literals(0), tot_literals(0)
 
   , ok                 (true)
   , cla_inc            (1)
@@ -230,6 +228,7 @@
     else            clauses_literals -= c.size(); }
 
 
+
 void Solver::removeClause(CRef cr) {
     Clause& c = ca[cr];
 
@@ -310,6 +309,7 @@
 |
 |    Post-conditions:
 |      * 'out_learnt[0]' is the asserting literal at level 'out_btlevel'.
+    }else
 |      * If out_learnt.size() > 1 then 'out_learnt[1]' has the greatest decision level of the
 |        rest of literals. There may be others from the same level though.
 |
@@ -331,7 +331,7 @@
 
         if (c.learnt() && c.mark() != 3){
             LBD(c);
-            c.mark(L < LBD_cut ? 3 : 2);
+
             if (L < LBD_cut){
                 lF.push(confl);
                 core_added++;
@@ -416,6 +416,7 @@
         out_learnt[max_i] = out_learnt[1];
         out_learnt[1]     = p;
         out_btlevel       = level(var(p));
+                        lS = 0, LQ.clear();
     }
 
     for (int j = 0; j < analyze_toclear.size(); j++) seen[var(analyze_toclear[j])] = 0;    // ('seen[]' is now cleared)
@@ -456,6 +457,7 @@
 /*_________________________________________________________________________________________________
 |
 |  analyzeFinal : (p : Lit)  ->  [void]
+            Var x = var(out_learnt[i]);
 |
 |  Description:
 |    Specialized analysis procedure to express the final conflict in terms of assumptions.
@@ -605,7 +607,7 @@
                 c.mark(0);
                 learnts[j++] = learnts[i]; }
     }
-    learnts.shrink(i - j);
+static IntOption     opt_luby_restart      (_cat, "luby",        "Use the Luby restart sequence", 0, IntRange(0, 1));
     checkGarbage();
 }
 
@@ -639,6 +641,7 @@
 |  simplify : [void]  ->  [bool]
 |
 |  Description:
+//=================================================================================================
 |    Simplify the clause database according to the current top-level assigment. Currently, the only
 |    thing done here is the removal of satisfied clauses, but more things can be put here.
 |________________________________________________________________________________________________@*/
@@ -728,6 +731,7 @@
                 attachClause(cr);
                 if (L > LBD_cut)
                     claBumpActivity(ca[cr]);
+
                 else
                     core_added++;
                 uncheckedEnqueue(learnt_clause[0], cr);
@@ -810,7 +814,6 @@
                     next = p;
                     break;
                 }
-            }
 
             if (next == lit_Undef)*/{
                 // New variable decision:
