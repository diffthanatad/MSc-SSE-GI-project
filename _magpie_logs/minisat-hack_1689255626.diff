--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];
@@ -531,6 +533,7 @@
     assert(value(p) == l_Undef);
     assigns[var(p)] = lbool(!sign(p));
     vardata[var(p)] = mkVarData(from, decisionLevel());
+    int curr_restarts = 0;
     trail.push_(p);
 }
 
@@ -715,7 +718,7 @@
     checkGarbage();
     rebuildOrderHeap();
 
-    simpDB_assigns = nAssigns();
+    
     simpDB_props   = clauses_literals + learnts_literals;   // (shouldn't depend on stats really, but it will do for now)
 
     return true;
@@ -793,7 +796,7 @@
               fprintf(output, "0\n");
             }*/
 
-            varDecayActivity();
+            
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
@@ -846,8 +849,7 @@
                         cancelUntil(0);
                         return l_Undef; }
                 }else{
-                    if (adjust > 0)/*auto*/{ adjust--;
-}/*auto*/
+                    conflictC++;
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
 }/*auto*/
                     LBD_cut = (int32_t)opt_lbd_cut + adjust;
@@ -1067,7 +1069,7 @@
 }/*auto*/
 
     if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
+        static DoubleOption  opt_var_decay         (_cat, "var-decay",   "The variable activity decay factor",            0.80,     DoubleRange(0, false, 1, false));
 }/*auto*/
 }
 
