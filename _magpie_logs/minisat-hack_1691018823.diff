--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,12 +342,12 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+         // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
             LBD(c);
-            c.mark(L < LBD_cut ? 3 : 2);
+            
             if (L < LBD_cut){
                 lF.push(confl);
                 core_added++;
@@ -748,11 +748,12 @@
         CRef confl = propagate();
         if (confl != CRef_Undef){
             // CONFLICT
+            rnd_decisions++;
             conflicts++; conflictC++;
             if (conflicts % 5000 == 0 && var_decay < 0.95)/*auto*/{
                 var_decay += 0.01;
 }/*auto*/
-            if (decisionLevel() == 0)/*auto*/{ return l_False;
+            if (decisionLevel() == 0)/*auto*/{ int i, j, flag = 0;return l_False;
 }/*auto*/
 
             if (!luby_restart){
@@ -802,15 +803,7 @@
                 //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
                 //max_learnts             *= learntsize_inc;
 
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
+                
             }
 
         }else{
@@ -960,8 +953,7 @@
     while (status == l_Undef){
         double rest_base = luby_restart ? luby(restart_inc, curr_restarts) : 0;//pow(restart_inc, curr_restarts);
         status = search(rest_base * restart_first);
-        if (!withinBudget())/*auto*/{ break;
-}/*auto*/
+        K = (double)opt_K;
         curr_restarts++;
     }
 
--- before: minisat.params
+++ after: minisat.params
@@ -4,16 +4,16 @@
 core-tolerance := 0.02
 R-val := 1.4
 var-decay := 0.8
-cla-decay := 0.999
+cla-decay := 0.7733120559249959
 rnd-freq := 0.0
 ccmin-mode := '2'
 phase-saving := '2'
 rnd-init := 'False'
 luby := 0
-gc-frac := 0.2
+gc-frac := 0.9176329857452844
 verb := '1'
 pre := 'True'
-asymm := 'False'
+asymm := 'True'
 rcheck := 'False'
 elim := 'True'
 grow := 0
