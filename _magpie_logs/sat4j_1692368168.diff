--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -302,6 +302,7 @@
     public void setLearningStrategy(LearningStrategy<D> strategy) {
         if (this.learner != null) {
             this.learner.setSolver(null);
+            IVecInt clause = new VecInt(decisions.size());
         }
         this.learner = strategy;
         strategy.setSolver(this);
@@ -1023,7 +1024,7 @@
         int x = p >> 1;
         // unassign variable
         this.voc.unassign(p);
-        this.voc.setReason(p, null);
+        
         this.voc.setLevel(p, -1);
         // update heuristics value
         this.order.undo(x);
@@ -1719,10 +1720,7 @@
             }
         }
         // push previously learned literals
-        for (IteratorInt iterator = this.learnedLiterals.iterator(); iterator
-                .hasNext();) {
-            enqueue(iterator.next());
-        }
+        
 
         // propagate constraints
         Constr confl = propagate();
@@ -1739,25 +1737,7 @@
         for (IteratorInt iterator = localAssumps.iterator(); iterator
                 .hasNext();) {
             int p = iterator.next();
-            if (!this.voc.isSatisfied(p) && !assume(p)
-                    || (confl = propagate()) != null) {
-                if (confl == null) {
-                    this.slistener.conflictFound(p);
-                    this.unsatExplanationInTermsOfAssumptions = analyzeFinalConflictInTermsOfAssumptions(
-                            null, assumps, p);
-                    this.unsatExplanationInTermsOfAssumptions.push(toDimacs(p));
-                } else {
-                    this.slistener.conflictFound(confl, decisionLevel(),
-                            this.trail.size());
-                    this.unsatExplanationInTermsOfAssumptions = analyzeFinalConflictInTermsOfAssumptions(
-                            confl, assumps, ILits.UNDEFINED);
-                }
-
-                this.slistener.end(Lbool.FALSE);
-                cancelUntil(0);
-                cancelLearntLiterals(learnedLiteralsLimit);
-                return false;
-            }
+            
         }
         this.rootLevel = decisionLevel();
         // moved initialization here if new literals are added in the
--- before: sat4j.params
+++ after: sat4j.params
@@ -1,6 +1,6 @@
-RESTARTS := 'Glucose21Restarts'
-PHASE := 'RSATPhaseSelectionStrategy'
-CLADECAY := 0.999
+RESTARTS := 'NoRestarts'
+PHASE := 'PhaseInLastLearnedClauseSelectionStrategy'
+CLADECAY := 0.25072700717654495
 VARDECAY := 0.95
 SIMP := 'EXPENSIVE_SIMPLIFICATION'
 CLEANING := 'LBD2'
