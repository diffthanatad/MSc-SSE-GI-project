2023-07-11 13:44:53,873	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 15
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_10.sh
run_timeout = 1187
run_lengthout = 
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 
max_time = 21840
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5


2023-07-11 13:44:53,873	[INFO]	==== WARMUP ====
2023-07-11 14:00:58,867	[INFO]	WARM    SUCCESS               956.3291                
2023-07-11 14:17:03,124	[INFO]	WARM    SUCCESS               960.5414                
2023-07-11 14:33:18,366	[INFO]	WARM    SUCCESS               971.5967                
2023-07-11 14:33:18,367	[INFO]	INITIAL SUCCESS               971.5967                
2023-07-11 14:33:18,367	[INFO]	==== START: ValidRankingSimplify ====
2023-07-11 14:33:18,538	[DEBUG]	CLEAN_PATCH: StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 284)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 96)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 243), ('core/Solver.cc.xml', 'stmt', 116)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 22)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 83))
2023-07-11 14:33:18,538	[DEBUG]	CLEAN_SIZE: 9 (was 9)
2023-07-11 14:53:09,519	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 284)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 96)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 243), ('core/Solver.cc.xml', 'stmt', 116)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 22)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 83))
2023-07-11 14:53:09,519	[INFO]	1       RUN_TIMEOUT           None  [9 edit(s)]       
2023-07-11 14:53:09,519	[INFO]	-- ranking --
2023-07-11 15:09:05,628	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335))
2023-07-11 15:09:05,628	[INFO]	2       SUCCESS              *952.5921 (98.04%) [1 edit(s)] 
2023-07-11 15:09:05,638	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -797,21 +797,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT

2023-07-11 15:25:38,852	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 284))
2023-07-11 15:25:38,852	[INFO]	3       SUCCESS              +989.725 (101.87%) [1 edit(s)] 
2023-07-11 15:25:38,861	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -694,9 +694,7 @@
         return ok = false;
 }/*auto*/
 
-    if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
-        return true;
-}/*auto*/
+    
 
     #define V learnts
     for (i = j = 0; i < V.size(); i++)/*auto*/{

2023-07-11 15:41:49,285	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 96))
2023-07-11 15:41:49,285	[INFO]	4       SUCCESS              +967.0457 (99.53%) [1 edit(s)] 
2023-07-11 15:41:49,295	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -293,11 +293,7 @@
     Var next = var_Undef;
 
     // Random decision:
-    if (drand(random_seed) < random_var_freq && !order_heap.empty()){
-        next = order_heap[irand(random_seed,order_heap.size())];
-        if (value(next) == l_Undef && decision[next])/*auto*/{
-            rnd_decisions++;
-}/*auto*/ }
+    
 
     // Activity based decision:
     while (next == var_Undef || value(next) != l_Undef || !decision[next])/*auto*/{

2023-07-11 15:57:48,464	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14))
2023-07-11 15:57:48,465	[INFO]	5       SUCCESS              +955.7122 (98.37%) [1 edit(s)] 
2023-07-11 15:57:48,484	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1028,7 +1028,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 

2023-07-11 16:06:54,184	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 243), ('core/Solver.cc.xml', 'stmt', 116))
2023-07-11 16:06:54,185	[INFO]	6       RUN_CODE_ERROR        None  [1 edit(s)]       
2023-07-11 16:23:16,049	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-07-11 16:23:16,050	[INFO]	7       SUCCESS              +978.054 (100.66%) [1 edit(s)] 
2023-07-11 16:23:16,060	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -994,7 +994,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-07-11 16:39:13,490	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 453))
2023-07-11 16:39:13,490	[INFO]	8       SUCCESS              +953.819 (98.17%) [1 edit(s)] 
2023-07-11 16:39:13,507	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1066,9 +1066,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 16:56:36,715	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 22))
2023-07-11 16:56:36,716	[INFO]	9       SUCCESS              +1039.7495 (107.01%) [1 edit(s)] 
2023-07-11 16:56:36,725	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -117,7 +117,7 @@
 {
     gS = lS = tS = N = cp = 0;
     LBD_cut = (int32_t)opt_lbd_cut;
-    K = (double)opt_K;
+    
     R = (double)opt_R;
 }
 

2023-07-11 17:13:00,748	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 83))
2023-07-11 17:13:00,748	[INFO]	10      SUCCESS              +980.5376 (100.92%) [1 edit(s)] 
2023-07-11 17:13:00,757	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -261,7 +261,7 @@
 bool Solver::satisfied(const Clause& c) const {
     for (int i = 0; i < c.size(); i++)/*auto*/{
         if (value(c[i]) == l_True)/*auto*/{
-            return true;
+            
 }/*auto*/
 }/*auto*/
     return false; }

2023-07-11 17:13:00,757	[INFO]	-- rebuild --
2023-07-11 17:28:21,877	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453))
2023-07-11 17:28:21,878	[INFO]	11      SUCCESS              *917.5763 (94.44%) [2 edit(s)] 
2023-07-11 17:28:21,887	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -797,21 +797,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT
@@ -1066,9 +1052,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 17:43:07,755	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14))
2023-07-11 17:43:07,756	[INFO]	12      SUCCESS              *882.5453 (90.83%) [3 edit(s)] 
2023-07-11 17:43:07,788	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -797,21 +797,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT
@@ -1028,7 +1014,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 
@@ -1066,9 +1053,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 17:58:00,407	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 96))
2023-07-11 17:58:00,407	[INFO]	13      SUCCESS              +889.2704 (91.53%) [4 edit(s)] 
2023-07-11 17:58:00,423	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -293,11 +293,7 @@
     Var next = var_Undef;
 
     // Random decision:
-    if (drand(random_seed) < random_var_freq && !order_heap.empty()){
-        next = order_heap[irand(random_seed,order_heap.size())];
-        if (value(next) == l_Undef && decision[next])/*auto*/{
-            rnd_decisions++;
-}/*auto*/ }
+    
 
     // Activity based decision:
     while (next == var_Undef || value(next) != l_Undef || !decision[next])/*auto*/{
@@ -797,21 +793,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT
@@ -1028,7 +1010,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 
@@ -1066,9 +1049,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 18:12:54,384	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-07-11 18:12:54,384	[INFO]	14      SUCCESS              +890.6872 (91.67%) [4 edit(s)] 
2023-07-11 18:12:54,398	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -797,21 +797,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT
@@ -994,7 +980,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 
@@ -1028,7 +1014,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 
@@ -1066,9 +1053,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 18:28:27,473	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 83))
2023-07-11 18:28:27,474	[INFO]	15      SUCCESS              +929.7728 (95.7%) [4 edit(s)] 
2023-07-11 18:28:27,486	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -261,7 +261,7 @@
 bool Solver::satisfied(const Clause& c) const {
     for (int i = 0; i < c.size(); i++)/*auto*/{
         if (value(c[i]) == l_True)/*auto*/{
-            return true;
+            
 }/*auto*/
 }/*auto*/
     return false; }
@@ -797,21 +797,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT
@@ -1028,7 +1014,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 
@@ -1066,9 +1053,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 18:43:37,222	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 284))
2023-07-11 18:43:37,222	[INFO]	16      SUCCESS              +906.0113 (93.25%) [4 edit(s)] 
2023-07-11 18:43:37,235	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -694,9 +694,7 @@
         return ok = false;
 }/*auto*/
 
-    if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
-        return true;
-}/*auto*/
+    
 
     #define V learnts
     for (i = j = 0; i < V.size(); i++)/*auto*/{
@@ -797,21 +795,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT
@@ -1028,7 +1012,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 
@@ -1066,9 +1051,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 18:59:45,469	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 22))
2023-07-11 18:59:45,470	[INFO]	17      SUCCESS              +964.9351 (99.31%) [4 edit(s)] 
2023-07-11 18:59:45,483	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -117,7 +117,7 @@
 {
     gS = lS = tS = N = cp = 0;
     LBD_cut = (int32_t)opt_lbd_cut;
-    K = (double)opt_K;
+    
     R = (double)opt_R;
 }
 
@@ -797,21 +797,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-}/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT
@@ -1028,7 +1014,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 
@@ -1066,9 +1053,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 19:08:51,030	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 335)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 243), ('core/Solver.cc.xml', 'stmt', 116))
2023-07-11 19:08:51,030	[INFO]	18      RUN_CODE_ERROR        None  [4 edit(s)]       
2023-07-11 19:08:51,030	[INFO]	-- simplify --
2023-07-11 19:23:30,676	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14))
2023-07-11 19:23:30,677	[INFO]	19      SUCCESS              *876.2676 (90.19%) [2 edit(s)] 
2023-07-11 19:23:30,691	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1028,7 +1028,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 
@@ -1066,9 +1067,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 19:23:30,703	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14))
2023-07-11 19:23:30,704	[INFO]	20      SUCCESS              +955.7122 (98.37%) [1 edit(s)] 
2023-07-11 19:23:30,717	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1028,7 +1028,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 

2023-07-11 19:23:30,725	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 453))
2023-07-11 19:23:30,726	[INFO]	21      SUCCESS              +953.819 (98.17%) [1 edit(s)] 
2023-07-11 19:23:30,733	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1066,9 +1066,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

2023-07-11 19:23:30,749	[INFO]	==== END ====
2023-07-11 19:23:30,749	[INFO]	Reason: validation end
2023-07-11 19:23:30,749	[INFO]	
2023-07-11 19:23:30,749	[INFO]	==== REPORT ====
2023-07-11 19:23:30,750	[INFO]	Termination: validation end
2023-07-11 19:23:30,750	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1689079488.log
2023-07-11 19:23:30,761	[INFO]	Patch file: _magpie_logs/minisat-hack_1689079488.patch
2023-07-11 19:23:30,762	[INFO]	Diff file: _magpie_logs/minisat-hack_1689079488.diff
2023-07-11 19:23:30,762	[INFO]	Best fitness: 876.2676
2023-07-11 19:23:30,762	[INFO]	Best patch: StmtDeletion(('core/Solver.cc.xml', 'stmt', 453)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 603), ('core/Solver.cc.xml', 'stmt', 14))
2023-07-11 19:23:30,762	[INFO]	Diff:
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1028,7 +1028,8 @@
     // Handle case when solver is in contradictory state:
     if (!ok){
         fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+        return;
+        static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2)); }
 
     vec<Var> map; Var max = 0;
 
@@ -1066,9 +1067,7 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
-    if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
-}/*auto*/
+    
 }
 
 

