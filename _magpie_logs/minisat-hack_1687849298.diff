--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -229,7 +229,9 @@
         remove(watches[~c[1]], Watcher(cr, c[0]));
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
-        watches.smudge(~c[0]);
+        if (conflicts % 5000 == 0 && var_decay < 0.95)/*auto*/{
+                var_decay += 0.01;
+}/*auto*/
         watches.smudge(~c[1]);
     }
 
@@ -691,7 +693,7 @@
     assert(decisionLevel() == 0);
 
     if (!ok || propagate() != CRef_Undef)/*auto*/{
-        return ok = false;
+        
 }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
@@ -826,6 +828,7 @@
             // Simplify the set of problem clauses:
             if (decisionLevel() == 0 && !simplify())/*auto*/{
                 return l_False;
+                int pathC = 0;
 }/*auto*/
 
             if (learnts.size() > (int32_t)opt_cp_increase && cp < conflicts){
@@ -951,7 +954,7 @@
     if (verbosity >= 1){
         printf("c ============================[ Search Statistics ]==============================\n");
         printf("c | Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
-        printf("c |           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
+        
         printf("c ===============================================================================\n");
     }
 
