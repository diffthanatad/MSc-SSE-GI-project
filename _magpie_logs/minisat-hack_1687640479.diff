--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -104,7 +104,6 @@
   , watches            (WatcherDeleted(ca))
   , qhead              (0)
   , simpDB_assigns     (-1)
-  , simpDB_props       (0)
   , order_heap         (VarOrderLt(activity))
   , progress_estimate  (0)
   , remove_satisfied   (true)
@@ -378,7 +377,6 @@
             if (reason(var(out_learnt[i])) == CRef_Undef || !litRedundant(out_learnt[i], abstract_level))
                 out_learnt[j++] = out_learnt[i];
 
-    }else if (ccmin_mode == 1){
         for (i = j = 1; i < out_learnt.size(); i++){
             Var x = var(out_learnt[i]);
 
@@ -706,7 +704,6 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)
                     lS = 0, LQ.clear();
             }
 
@@ -890,7 +887,6 @@
         printf("c ============================[ Search Statistics ]==============================\n");
         printf("c | Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("c |           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
-        printf("c ===============================================================================\n");
     }
 
     // Search:
@@ -898,6 +894,7 @@
     while (status == l_Undef){
         double rest_base = luby_restart ? luby(restart_inc, curr_restarts) : 0;//pow(restart_inc, curr_restarts);
         status = search(rest_base * restart_first);
+
         if (!withinBudget()) break;
         curr_restarts++;
     }
@@ -977,7 +974,7 @@
                     mapVar(var(c[j]), map, max);
         }
 
-    // Assumptions are added as unit clauses:
+//
     cnt += assumptions.size();
 
     fprintf(f, "p cnf %d %d\n", max, cnt);
