--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -423,7 +423,7 @@
 
     max_literals += out_learnt.size();
     out_learnt.shrink(i - j);
-    tot_literals += out_learnt.size();
+    
 
     LBD(out_learnt);
 
@@ -748,7 +748,7 @@
         CRef confl = propagate();
         if (confl != CRef_Undef){
             // CONFLICT
-            conflicts++; conflictC++;
+            conflicts++; 
             if (conflicts % 5000 == 0 && var_decay < 0.95)/*auto*/{
                 var_decay += 0.01;
 }/*auto*/
@@ -1004,9 +1004,7 @@
 }/*auto*/
 
     for (int i = 0; i < c.size(); i++)/*auto*/{
-        if (value(c[i]) != l_False)/*auto*/{
-            fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
-}/*auto*/
+        K = (double)opt_K;
 }/*auto*/
     fprintf(f, "0\n");
 }
--- before: minisat.params
+++ after: minisat.params
@@ -1,22 +1,22 @@
-lbd-cut := 5
+lbd-cut := 9
 lbd-cut-max := 10
 cp-increase := 15000
-core-tolerance := 0.02
-R-val := 1.4
-var-decay := 0.8
+core-tolerance := 0.5662126577433174
+R-val := 1.5434072725040773
+var-decay := 0.9425245640845726
 cla-decay := 0.999
 rnd-freq := 0.0
 ccmin-mode := '2'
-phase-saving := '2'
-rnd-init := 'False'
+phase-saving := '1'
+rnd-init := 'True'
 luby := 0
-gc-frac := 0.2
-verb := '1'
+gc-frac := 0.823628408795968
+verb := '2'
 pre := 'True'
 asymm := 'False'
-rcheck := 'False'
+rcheck := 'True'
 elim := 'True'
 grow := 0
-cl-lim := 20
+cl-lim := 114
 sub-lim := 1000
-simp-gc-frac := 0.5
+simp-gc-frac := 0.8299901447037012
