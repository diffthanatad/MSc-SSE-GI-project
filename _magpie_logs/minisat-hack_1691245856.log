2023-08-05 15:30:58,942	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 16
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_8.sh
run_timeout = 1582
run_lengthout = 
fitness = perf_instructions

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidTest
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
	ParamSetting
warmup = 1
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5

[search.ga]
pop_size = 10
elitism_size = 2
cxpb_chrm = 0.5
cxpb_gene = 0.5
mutpb_chrm = 0.2
mutpb_gene = 0.1
gi_delete_prob = 0.5
gi_create_prob = 0.5
tournament_size = 3

[search.pso]
pop_size = 10
speed_min = -3
speed_max = 3
c1 = 1.49
c2 = 1.49


2023-08-05 15:30:58,943	[INFO]	==== WARMUP ====
2023-08-05 15:49:20,039	[INFO]	WARM    SUCCESS               1857500211697           
2023-08-05 15:49:20,039	[INFO]	INITIAL SUCCESS               1857500211697           
2023-08-05 15:49:20,040	[INFO]	==== START: ValidTest ====
2023-08-05 15:49:20,225	[DEBUG]	CLEAN_PATCH: ParamSetting(('minisat.params', 'lbd-cut-max'), 12) | ParamSetting(('minisat.params', 'cp-increase'), 5371) | ParamSetting(('minisat.params', 'var-decay'), 0.8532931483567148) | ParamSetting(('minisat.params', 'cla-decay'), 0.9462512464608139) | ParamSetting(('minisat.params', 'phase-saving'), '0') | ParamSetting(('minisat.params', 'gc-frac'), 0.9610481673582733) | ParamSetting(('minisat.params', 'grow'), 423) | ParamSetting(('minisat.params', 'cl-lim'), 5) | ParamSetting(('minisat.params', 'sub-lim'), 490) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 373), ('core/Solver.cc.xml', 'stmt', 344)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 599), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 15:49:20,226	[DEBUG]	CLEAN_SIZE: 11 (was 14)
2023-08-05 16:07:13,723	[DEBUG]	ParamSetting(('minisat.params', 'lbd-cut-max'), 12) | ParamSetting(('minisat.params', 'cp-increase'), 5371) | ParamSetting(('minisat.params', 'var-decay'), 0.8532931483567148) | ParamSetting(('minisat.params', 'cla-decay'), 0.9462512464608139) | ParamSetting(('minisat.params', 'phase-saving'), '0') | ParamSetting(('minisat.params', 'gc-frac'), 0.9610481673582733) | ParamSetting(('minisat.params', 'grow'), 423) | ParamSetting(('minisat.params', 'cl-lim'), 5) | ParamSetting(('minisat.params', 'sub-lim'), 490) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 373), ('core/Solver.cc.xml', 'stmt', 344)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 599), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 16:07:13,724	[INFO]	1       SUCCESS              *1780147378435 (95.84%) [11 edit(s)] 
2023-08-05 16:07:13,741	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -669,6 +669,7 @@
 void Solver::rebuildOrderHeap()
 {
     vec<Var> vs;
+    return l_False;
     for (Var v = 0; v < nVars(); v++)/*auto*/{
         if (decision[v] && value(v) == l_Undef)/*auto*/{
             vs.push(v);
@@ -1066,6 +1067,8 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
+    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
+
     if (verbosity > 0)/*auto*/{
         printf("Wrote %d clauses with %d variables.\n", cnt, max);
 }/*auto*/
--- before: minisat.params
+++ after: minisat.params
@@ -1,22 +1,22 @@
 lbd-cut := 5
-lbd-cut-max := 10
-cp-increase := 15000
+lbd-cut-max := 12
+cp-increase := 5371
 core-tolerance := 0.02
 R-val := 1.4
-var-decay := 0.8
-cla-decay := 0.999
+var-decay := 0.8532931483567148
+cla-decay := 0.9462512464608139
 rnd-freq := 0.0
 ccmin-mode := '2'
-phase-saving := '2'
+phase-saving := '0'
 rnd-init := 'False'
 luby := 0
-gc-frac := 0.2
+gc-frac := 0.9610481673582733
 verb := '1'
 pre := 'True'
 asymm := 'False'
 rcheck := 'False'
 elim := 'True'
-grow := 0
-cl-lim := 20
-sub-lim := 1000
+grow := 423
+cl-lim := 5
+sub-lim := 490
 simp-gc-frac := 0.5

2023-08-05 16:07:13,753	[INFO]	==== END ====
2023-08-05 16:07:13,753	[INFO]	Reason: validation end
2023-08-05 16:07:13,753	[INFO]	
2023-08-05 16:07:13,753	[INFO]	==== REPORT ====
2023-08-05 16:07:13,753	[INFO]	Termination: validation end
2023-08-05 16:07:13,754	[INFO]	Log file: /cs/student/projects1/sse/2022/tsongpet/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1691245856.log
2023-08-05 16:07:13,765	[INFO]	Patch file: _magpie_logs/minisat-hack_1691245856.patch
2023-08-05 16:07:13,766	[INFO]	Diff file: _magpie_logs/minisat-hack_1691245856.diff
2023-08-05 16:07:13,766	[INFO]	Best fitness: 1780147378435
2023-08-05 16:07:13,766	[INFO]	Best patch: ParamSetting(('minisat.params', 'lbd-cut-max'), 12) | ParamSetting(('minisat.params', 'cp-increase'), 5371) | ParamSetting(('minisat.params', 'var-decay'), 0.8532931483567148) | ParamSetting(('minisat.params', 'cla-decay'), 0.9462512464608139) | ParamSetting(('minisat.params', 'phase-saving'), '0') | ParamSetting(('minisat.params', 'gc-frac'), 0.9610481673582733) | ParamSetting(('minisat.params', 'grow'), 423) | ParamSetting(('minisat.params', 'cl-lim'), 5) | ParamSetting(('minisat.params', 'sub-lim'), 490) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 373), ('core/Solver.cc.xml', 'stmt', 344)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 599), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 16:07:13,766	[INFO]	Diff:
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -669,6 +669,7 @@
 void Solver::rebuildOrderHeap()
 {
     vec<Var> vs;
+    return l_False;
     for (Var v = 0; v < nVars(); v++)/*auto*/{
         if (decision[v] && value(v) == l_Undef)/*auto*/{
             vs.push(v);
@@ -1066,6 +1067,8 @@
         toDimacs(f, ca[clauses[i]], map, max);
 }/*auto*/
 
+    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
+
     if (verbosity > 0)/*auto*/{
         printf("Wrote %d clauses with %d variables.\n", cnt, max);
 }/*auto*/
--- before: minisat.params
+++ after: minisat.params
@@ -1,22 +1,22 @@
 lbd-cut := 5
-lbd-cut-max := 10
-cp-increase := 15000
+lbd-cut-max := 12
+cp-increase := 5371
 core-tolerance := 0.02
 R-val := 1.4
-var-decay := 0.8
-cla-decay := 0.999
+var-decay := 0.8532931483567148
+cla-decay := 0.9462512464608139
 rnd-freq := 0.0
 ccmin-mode := '2'
-phase-saving := '2'
+phase-saving := '0'
 rnd-init := 'False'
 luby := 0
-gc-frac := 0.2
+gc-frac := 0.9610481673582733
 verb := '1'
 pre := 'True'
 asymm := 'False'
 rcheck := 'False'
 elim := 'True'
-grow := 0
-cl-lim := 20
-sub-lim := 1000
+grow := 423
+cl-lim := 5
+sub-lim := 490
 simp-gc-frac := 0.5

