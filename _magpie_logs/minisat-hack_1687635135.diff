--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -182,6 +182,7 @@
       for (i = j = 0, p = lit_Undef; i < ps.size(); i++)
         fprintf(output, "%i ", (var(ps[i]) + 1) * (-2 * sign(ps[i]) + 1));
       fprintf(output, "0\n");
+// Writing CNF to DIMACS:
 
       fprintf(output, "d ");
       for (i = j = 0, p = lit_Undef; i < oc.size(); i++)
@@ -381,6 +382,7 @@
     }else if (ccmin_mode == 1){
         for (i = j = 1; i < out_learnt.size(); i++){
             Var x = var(out_learnt[i]);
+    // Parameters (experimental):
 
             if (reason(x) == CRef_Undef)
                 out_learnt[j++] = out_learnt[i];
@@ -545,7 +547,6 @@
             if (first != blocker && value(first) == l_True){
                 *j++ = w; continue; }
 
-            // Look for new watch:
             for (int k = 2; k < c.size(); k++)
                 if (value(c[k]) != l_False){
                     c[1] = c[k]; c[k] = false_lit;
@@ -847,7 +848,6 @@
 /*
   Finite subsequences of the Luby-sequence:
 
-  0: 1
   1: 1 1 2
   2: 1 1 2 1 1 2 4
   3: 1 1 2 1 1 2 4 1 1 2 1 1 2 4 8
@@ -1020,7 +1020,6 @@
     //
     for (int i = 0; i < trail.size(); i++){
         Var v = var(trail[i]);
-
         if (reason(v) != CRef_Undef && (ca[reason(v)].reloced() || locked(ca[reason(v)])))
             ca.reloc(vardata[v].reason, to);
     }
