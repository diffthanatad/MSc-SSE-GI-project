--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -115,7 +115,7 @@
   , propagation_budget (-1)
   , asynch_interrupt   (false)
 {
-    gS = lS = tS = N = cp = 0;
+    
     LBD_cut = (int32_t)opt_lbd_cut;
     K = (double)opt_K;
     R = (double)opt_R;
@@ -216,7 +216,7 @@
     watches[~c[1]].push(Watcher(cr, c[0]));
     if (c.learnt())/*auto*/{ learnts_literals += c.size();
 }/*auto*/
-    else/*auto*/{            clauses_literals += c.size();
+    else/*auto*/{            
 }/*auto*/ }
 
 
@@ -346,7 +346,10 @@
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
-            LBD(c);
+            if (L < LBD_cut){
+                lF.push(confl);
+                core_added++;
+            }
             c.mark(L < LBD_cut ? 3 : 2);
             if (L < LBD_cut){
                 lF.push(confl);
@@ -447,7 +450,7 @@
         out_btlevel       = level(var(p));
     }
 
-    for (int j = 0; j < analyze_toclear.size(); j++)/*auto*/{ seen[var(analyze_toclear[j])] = 0;
+    for (int j = 0; j < analyze_toclear.size(); j++)/*auto*/{ model.clear();seen[var(analyze_toclear[j])] = 0;
 }/*auto*/    // ('seen[]' is now cleared)
 }
 
@@ -562,7 +565,8 @@
             // Try to avoid inspecting the clause:
             Lit blocker = i->blocker;
             if (value(blocker) == l_True){
-                *j++ = *i++; continue; }
+                *j++ = *i++;
+                int i, j, flag = 0; continue; }
 
             // Make sure the false literal is data[1]:
             CRef     cr        = i->cref;
@@ -695,7 +699,7 @@
 }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
-        return true;
+        
 }/*auto*/
 
     #define V learnts
@@ -793,7 +797,7 @@
               fprintf(output, "0\n");
             }*/
 
-            varDecayActivity();
+            
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
@@ -873,8 +877,9 @@
 
             if (next == lit_Undef)*/{
                 // New variable decision:
-                decisions++;
+                
                 next = pickBranchLit();
+                static BoolOption    opt_rnd_init_act      (_cat, "rnd-init",    "Randomize the initial activity", false);
 
                 if (next == lit_Undef)/*auto*/{
                     // Model found:
@@ -1008,7 +1013,7 @@
             fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
 }/*auto*/
 }/*auto*/
-    fprintf(f, "0\n");
+    
 }
 
 
