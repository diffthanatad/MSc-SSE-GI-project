2023-07-10 20:39:22,559	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 15
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_7.sh
run_timeout = 1290
run_lengthout = 
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 
max_time = 21840
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5


2023-07-10 20:39:22,560	[INFO]	==== WARMUP ====
2023-07-10 20:56:35,020	[INFO]	WARM    SUCCESS               1023.879                
2023-07-10 21:13:38,209	[INFO]	WARM    SUCCESS               1019.2817               
2023-07-10 21:31:08,011	[INFO]	WARM    SUCCESS               1045.7811               
2023-07-10 21:31:08,012	[INFO]	INITIAL SUCCESS               1045.7811               
2023-07-10 21:31:08,012	[INFO]	==== START: ValidRankingSimplify ====
2023-07-10 21:31:08,251	[DEBUG]	CLEAN_PATCH: StmtReplacement(('core/Solver.cc.xml', 'stmt', 297), ('core/Solver.cc.xml', 'stmt', 99)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 447)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 210)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 52)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 261), ('core/Solver.cc.xml', 'stmt', 331)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 353), ('core/Solver.cc.xml', 'stmt', 465))
2023-07-10 21:31:08,251	[DEBUG]	CLEAN_SIZE: 9 (was 9)
2023-07-10 21:36:19,573	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 297), ('core/Solver.cc.xml', 'stmt', 99)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 447)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 210)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 52)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 261), ('core/Solver.cc.xml', 'stmt', 331)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 353), ('core/Solver.cc.xml', 'stmt', 465))
2023-07-10 21:36:19,574	[INFO]	1       RUN_CODE_ERROR        None  [9 edit(s)]       
2023-07-10 21:36:19,574	[INFO]	-- ranking --
2023-07-10 21:53:27,626	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 297), ('core/Solver.cc.xml', 'stmt', 99))
2023-07-10 21:53:27,626	[INFO]	2       SUCCESS              *1024.5455 (97.97%) [1 edit(s)] 
2023-07-10 21:53:27,637	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -716,7 +716,7 @@
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
-    simpDB_props   = clauses_literals + learnts_literals;   // (shouldn't depend on stats really, but it will do for now)
+    rnd_decisions++;   // (shouldn't depend on stats really, but it will do for now)
 
     return true;
 }

2023-07-10 22:10:38,945	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 447))
2023-07-10 22:10:38,945	[INFO]	3       SUCCESS              +1027.6146 (98.26%) [1 edit(s)] 
2023-07-10 22:10:38,955	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1055,7 +1055,7 @@
     // Assumptions are added as unit clauses:
     cnt += assumptions.size();
 
-    fprintf(f, "p cnf %d %d\n", max, cnt);
+    
 
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);

2023-07-10 22:27:59,514	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 350))
2023-07-10 22:27:59,515	[INFO]	4       SUCCESS              +1036.6331 (99.13%) [1 edit(s)] 
2023-07-10 22:27:59,524	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -835,9 +835,7 @@
 
                 static int adjust = 0;
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
+                    
 
                     if (!luby_restart){
                         core_added = 0;

2023-07-10 22:45:31,311	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 210))
2023-07-10 22:45:31,311	[INFO]	5       SUCCESS              +1047.264 (100.14%) [1 edit(s)] 
2023-07-10 22:45:31,321	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -528,7 +528,7 @@
 
 void Solver::uncheckedEnqueue(Lit p, CRef from)
 {
-    assert(value(p) == l_Undef);
+    
     assigns[var(p)] = lbool(!sign(p));
     vardata[var(p)] = mkVarData(from, decisionLevel());
     trail.push_(p);

2023-07-10 23:02:38,140	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-07-10 23:02:38,140	[INFO]	6       SUCCESS              *1023.2404 (97.84%) [1 edit(s)] 
2023-07-10 23:02:38,150	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.

2023-07-10 23:07:26,339	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 52))
2023-07-10 23:07:26,339	[INFO]	7       RUN_CODE_ERROR        None  [1 edit(s)]       
2023-07-10 23:25:23,306	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23))
2023-07-10 23:25:23,306	[INFO]	8       SUCCESS              +1073.3178 (102.63%) [1 edit(s)] 
2023-07-10 23:25:23,318	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -695,6 +695,7 @@
 }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
+        R = (double)opt_R;
         return true;
 }/*auto*/
 

2023-07-10 23:43:08,821	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 261), ('core/Solver.cc.xml', 'stmt', 331))
2023-07-10 23:43:08,821	[INFO]	9       SUCCESS              +1061.9339 (101.54%) [1 edit(s)] 
2023-07-10 23:43:08,833	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -506,6 +506,7 @@
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
         Var x = var(trail[i]);
+        core_added++;
         if (seen[x]){
             if (reason(x) == CRef_Undef){
                 assert(level(x) > 0);

2023-07-11 00:00:23,362	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 353), ('core/Solver.cc.xml', 'stmt', 465))
2023-07-11 00:00:23,362	[INFO]	10      SUCCESS              +1031.0679 (98.59%) [1 edit(s)] 
2023-07-11 00:00:23,375	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -840,7 +840,7 @@
 }/*auto*/
 
                     if (!luby_restart){
-                        core_added = 0;
+                        Var v = var(trail[i]);
                         K = 1;
                         lS = 0, LQ.clear();
                         cancelUntil(0);

2023-07-11 00:00:23,376	[INFO]	-- rebuild --
2023-07-11 00:17:58,068	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 297), ('core/Solver.cc.xml', 'stmt', 99))
2023-07-11 00:17:58,068	[INFO]	11      SUCCESS              +1051.11 (100.51%) [2 edit(s)] 
2023-07-11 00:17:58,089	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -716,7 +716,7 @@
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
-    simpDB_props   = clauses_literals + learnts_literals;   // (shouldn't depend on stats really, but it will do for now)
+    rnd_decisions++;   // (shouldn't depend on stats really, but it will do for now)
 
     return true;
 }

2023-07-11 00:35:31,646	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 447))
2023-07-11 00:35:31,646	[INFO]	12      SUCCESS              +1049.6756 (100.37%) [2 edit(s)] 
2023-07-11 00:35:31,666	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -1055,7 +1055,7 @@
     // Assumptions are added as unit clauses:
     cnt += assumptions.size();
 
-    fprintf(f, "p cnf %d %d\n", max, cnt);
+    
 
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);

2023-07-11 00:52:41,392	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 353), ('core/Solver.cc.xml', 'stmt', 465))
2023-07-11 00:52:41,393	[INFO]	13      SUCCESS              +1025.3689 (98.05%) [2 edit(s)] 
2023-07-11 00:52:41,404	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -840,7 +840,7 @@
 }/*auto*/
 
                     if (!luby_restart){
-                        core_added = 0;
+                        Var v = var(trail[i]);
                         K = 1;
                         lS = 0, LQ.clear();
                         cancelUntil(0);

2023-07-11 01:09:36,357	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350))
2023-07-11 01:09:36,358	[INFO]	14      SUCCESS              *1011.32 (96.7%) [2 edit(s)] 
2023-07-11 01:09:36,373	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -835,9 +835,7 @@
 
                 static int adjust = 0;
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
+                    
 
                     if (!luby_restart){
                         core_added = 0;

2023-07-11 01:27:05,993	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 210))
2023-07-11 01:27:05,993	[INFO]	15      SUCCESS              +1045.521 (99.98%) [3 edit(s)] 
2023-07-11 01:27:06,005	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -528,7 +528,7 @@
 
 void Solver::uncheckedEnqueue(Lit p, CRef from)
 {
-    assert(value(p) == l_Undef);
+    
     assigns[var(p)] = lbool(!sign(p));
     vardata[var(p)] = mkVarData(from, decisionLevel());
     trail.push_(p);
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -835,9 +835,7 @@
 
                 static int adjust = 0;
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
+                    
 
                     if (!luby_restart){
                         core_added = 0;

2023-07-11 01:44:15,415	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 261), ('core/Solver.cc.xml', 'stmt', 331))
2023-07-11 01:44:15,416	[INFO]	16      SUCCESS              +1025.926 (98.1%) [3 edit(s)] 
2023-07-11 01:44:15,429	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -506,6 +506,7 @@
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
         Var x = var(trail[i]);
+        core_added++;
         if (seen[x]){
             if (reason(x) == CRef_Undef){
                 assert(level(x) > 0);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -835,9 +836,7 @@
 
                 static int adjust = 0;
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
+                    
 
                     if (!luby_restart){
                         core_added = 0;

2023-07-11 02:01:07,410	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23))
2023-07-11 02:01:07,410	[INFO]	17      SUCCESS              *1007.9899 (96.39%) [3 edit(s)] 
2023-07-11 02:01:07,424	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -695,6 +695,7 @@
 }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
+        R = (double)opt_R;
         return true;
 }/*auto*/
 
@@ -835,9 +836,7 @@
 
                 static int adjust = 0;
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
+                    
 
                     if (!luby_restart){
                         core_added = 0;

2023-07-11 02:05:37,216	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 52))
2023-07-11 02:05:37,217	[INFO]	18      RUN_CODE_ERROR        None  [4 edit(s)]       
2023-07-11 02:05:37,217	[INFO]	-- simplify --
2023-07-11 02:22:51,498	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 350)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23))
2023-07-11 02:22:51,499	[INFO]	19      SUCCESS              +1030.677 (98.56%) [2 edit(s)] 
2023-07-11 02:22:51,512	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -695,6 +695,7 @@
 }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
+        R = (double)opt_R;
         return true;
 }/*auto*/
 
@@ -835,9 +836,7 @@
 
                 static int adjust = 0;
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
+                    
 
                     if (!luby_restart){
                         core_added = 0;

2023-07-11 02:39:42,847	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23))
2023-07-11 02:39:42,847	[INFO]	20      SUCCESS              *1007.7534 (96.36%) [2 edit(s)] 
2023-07-11 02:39:42,859	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -695,6 +695,7 @@
 }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
+        R = (double)opt_R;
         return true;
 }/*auto*/
 

2023-07-11 02:39:42,868	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-07-11 02:39:42,869	[INFO]	21      SUCCESS              +1023.2404 (97.84%) [1 edit(s)] 
2023-07-11 02:39:42,878	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.

2023-07-11 02:39:42,888	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23))
2023-07-11 02:39:42,889	[INFO]	22      SUCCESS              +1073.3178 (102.63%) [1 edit(s)] 
2023-07-11 02:39:42,898	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -695,6 +695,7 @@
 }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
+        R = (double)opt_R;
         return true;
 }/*auto*/
 

2023-07-11 02:39:42,910	[INFO]	==== END ====
2023-07-11 02:39:42,910	[INFO]	Reason: validation end
2023-07-11 02:39:42,911	[INFO]	
2023-07-11 02:39:42,911	[INFO]	==== REPORT ====
2023-07-11 02:39:42,911	[INFO]	Termination: validation end
2023-07-11 02:39:42,911	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1689017955.log
2023-07-11 02:39:42,922	[INFO]	Patch file: _magpie_logs/minisat-hack_1689017955.patch
2023-07-11 02:39:42,922	[INFO]	Diff file: _magpie_logs/minisat-hack_1689017955.diff
2023-07-11 02:39:42,922	[INFO]	Best fitness: 1007.7534
2023-07-11 02:39:42,923	[INFO]	Best patch: StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 396), ('core/Solver.cc.xml', 'stmt', 23))
2023-07-11 02:39:42,923	[INFO]	Diff:
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -695,6 +695,7 @@
 }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
+        R = (double)opt_R;
         return true;
 }/*auto*/
 

