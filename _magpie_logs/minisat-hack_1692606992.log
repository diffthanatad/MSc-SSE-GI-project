2023-08-21 09:36:39,080	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 16
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_1.sh
run_timeout = 1582
run_lengthout = 
fitness = perf_instructions

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidTest
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 1
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5

[search.ga]
pop_size = 100
elitism_size = 10
cxpb_chrm = 0.5
cxpb_gene = 0.5
mutpb_chrm = 0.2
mutpb_gene = 0.1
gi_delete_prob = 0.5
gi_create_prob = 0.5
tournament_size = 3

[search.pso]
pop_size = 10
speed_min = -3
speed_max = 3
c1 = 1.49
c2 = 1.49


2023-08-21 09:36:39,081	[INFO]	==== WARMUP ====
2023-08-21 09:53:53,882	[INFO]	WARM    SUCCESS               1852387165057           
2023-08-21 09:53:53,883	[INFO]	INITIAL SUCCESS               1852387165057           
2023-08-21 09:53:53,883	[INFO]	==== START: ValidTest ====
2023-08-21 09:53:53,966	[DEBUG]	CLEAN_PATCH: StmtDeletion(('core/Solver.cc.xml', 'stmt', 143)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 407), ('core/Solver.cc.xml', 'stmt', 341)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 464), ('core/Solver.cc.xml', 'stmt', 314)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 239), ('core/Solver.cc.xml', 'stmt', 195))
2023-08-21 09:53:53,967	[DEBUG]	CLEAN_SIZE: 4 (was 5)
2023-08-21 10:16:15,021	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 143)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 407), ('core/Solver.cc.xml', 'stmt', 341)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 464), ('core/Solver.cc.xml', 'stmt', 314)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 239), ('core/Solver.cc.xml', 'stmt', 195))
2023-08-21 10:16:15,022	[INFO]	1       SUCCESS              *2417807582663 (130.52%) [4 edit(s)] 
2023-08-21 10:16:15,037	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -392,7 +392,7 @@
     if (ccmin_mode == 2){
         uint32_t abstract_level = 0;
         for (i = 1; i < out_learnt.size(); i++)/*auto*/{
-            abstract_level |= abstractLevel(var(out_learnt[i]));
+            
 }/*auto*/ // (maintain an abstraction of levels involved in conflict)
 
         for (i = j = 1; i < out_learnt.size(); i++)/*auto*/{
@@ -469,7 +469,10 @@
                     seen[var(p)] = 1;
                     analyze_stack.push(p);
                     analyze_toclear.push(p);
-                }else{
+                }
+                if (decisionLevel() == 0)/*auto*/{
+        return;
+}/*auto*/else{
                     for (int j = top; j < analyze_toclear.size(); j++)/*auto*/{
                         seen[var(analyze_toclear[j])] = 0;
 }/*auto*/
@@ -856,6 +859,8 @@
             }
 
             Lit next = lit_Undef;
+
+            PUSH(TQ, trail.size(), 5000, tS);
             /*while (decisionLevel() < assumptions.size()){
                 // Perform user provided assumption:
                 Lit p = assumptions[decisionLevel()];
@@ -966,7 +971,7 @@
     }
 
     if (verbosity >= 1)/*auto*/{
-        printf("c ===============================================================================\n");
+        cancelUntil(0);
 }/*auto*/
 
 

2023-08-21 10:16:15,051	[INFO]	==== END ====
2023-08-21 10:16:15,051	[INFO]	Reason: validation end
2023-08-21 10:16:15,051	[INFO]	
2023-08-21 10:16:15,052	[INFO]	==== REPORT ====
2023-08-21 10:16:15,052	[INFO]	Termination: validation end
2023-08-21 10:16:15,052	[INFO]	Log file: /cs/research/crest/home0/jpetke/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1692606992.log
2023-08-21 10:16:15,066	[INFO]	Patch file: _magpie_logs/minisat-hack_1692606992.patch
2023-08-21 10:16:15,066	[INFO]	Diff file: _magpie_logs/minisat-hack_1692606992.diff
2023-08-21 10:16:15,066	[INFO]	Best fitness: 2417807582663
2023-08-21 10:16:15,067	[INFO]	Best patch: StmtDeletion(('core/Solver.cc.xml', 'stmt', 143)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 407), ('core/Solver.cc.xml', 'stmt', 341)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 464), ('core/Solver.cc.xml', 'stmt', 314)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 239), ('core/Solver.cc.xml', 'stmt', 195))
2023-08-21 10:16:15,067	[INFO]	Diff:
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -392,7 +392,7 @@
     if (ccmin_mode == 2){
         uint32_t abstract_level = 0;
         for (i = 1; i < out_learnt.size(); i++)/*auto*/{
-            abstract_level |= abstractLevel(var(out_learnt[i]));
+            
 }/*auto*/ // (maintain an abstraction of levels involved in conflict)
 
         for (i = j = 1; i < out_learnt.size(); i++)/*auto*/{
@@ -469,7 +469,10 @@
                     seen[var(p)] = 1;
                     analyze_stack.push(p);
                     analyze_toclear.push(p);
-                }else{
+                }
+                if (decisionLevel() == 0)/*auto*/{
+        return;
+}/*auto*/else{
                     for (int j = top; j < analyze_toclear.size(); j++)/*auto*/{
                         seen[var(analyze_toclear[j])] = 0;
 }/*auto*/
@@ -856,6 +859,8 @@
             }
 
             Lit next = lit_Undef;
+
+            PUSH(TQ, trail.size(), 5000, tS);
             /*while (decisionLevel() < assumptions.size()){
                 // Perform user provided assumption:
                 Lit p = assumptions[decisionLevel()];
@@ -966,7 +971,7 @@
     }
 
     if (verbosity >= 1)/*auto*/{
-        printf("c ===============================================================================\n");
+        cancelUntil(0);
 }/*auto*/
 
 

