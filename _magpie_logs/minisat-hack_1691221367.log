2023-08-05 08:42:50,593	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 16
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/train_4.sh
run_timeout = 92
run_lengthout = 
fitness = perf_instructions

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = GeneticAlgorithm
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 1
warmup_strategy = last
max_steps = 
max_time = 11270
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5

[search.ga]
pop_size = 10
elitism_size = 2
cxpb_chrm = 0.5
cxpb_gene = 0.5
mutpb_chrm = 0.2
mutpb_gene = 0.1
gi_delete_prob = 0.5
gi_create_prob = 0.5
tournament_size = 3

[search.pso]
pop_size = 10
speed_min = -3
speed_max = 3
c1 = 1.49
c2 = 1.49


2023-08-05 08:42:50,594	[INFO]	==== WARMUP ====
2023-08-05 08:44:25,202	[INFO]	WARM    SUCCESS               144649742290            
2023-08-05 08:44:25,203	[INFO]	INITIAL SUCCESS               144649742290            
2023-08-05 08:44:25,203	[INFO]	==== START: GeneticAlgorithm ====
2023-08-05 08:44:25,221	[DEBUG]	
2023-08-05 08:44:25,221	[DEBUG]	
2023-08-05 08:44:25,221	[INFO]	0-1     SUCCESS              +144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:44:25,230	[DEBUG]	
2023-08-05 08:44:25,238	[DEBUG]	
2023-08-05 08:44:25,238	[INFO]	0-2     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:44:28,468	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 142), ('core/Solver.cc.xml', 'stmt', 139))
2023-08-05 08:44:28,469	[INFO]	0-3     RUN_CODE_ERROR        None  [1 edit(s)]       
2023-08-05 08:44:28,479	[DEBUG]	
2023-08-05 08:44:28,479	[INFO]	0-4     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:44:28,883	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 285), ('core/Solver.cc.xml', 'stmt', 82))
2023-08-05 08:44:28,883	[INFO]	0-5     COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-08-05 08:44:32,028	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 86))
2023-08-05 08:44:32,029	[INFO]	0-6     RUN_CODE_ERROR        None  [1 edit(s)]       
2023-08-05 08:45:59,471	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:45:59,471	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:45:59,471	[INFO]	0-7     SUCCESS              *144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:45:59,480	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:45:59,487	[DEBUG]	
2023-08-05 08:45:59,487	[INFO]	0-8     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:45:59,899	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 296), ('core/Solver.cc.xml', 'stmt', 60))
2023-08-05 08:45:59,899	[INFO]	0-9     COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-08-05 08:46:00,303	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 588), ('core/Solver.cc.xml', 'stmt', 403))
2023-08-05 08:46:00,304	[INFO]	0-10    COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-08-05 08:46:00,323	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:46:00,323	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:46:00,323	[INFO]	1-1     SUCCESS              +144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:46:00,332	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:46:00,339	[DEBUG]	
2023-08-05 08:46:00,339	[INFO]	1-2     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:46:00,346	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 86))
2023-08-05 08:46:00,346	[INFO]	1-3     RUN_CODE_ERROR        None  [1 edit(s)]       
2023-08-05 08:46:00,355	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:46:00,355	[INFO]	1-4     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:46:00,362	[DEBUG]	
2023-08-05 08:46:00,363	[INFO]	1-5     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:46:00,371	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:46:00,371	[INFO]	1-6     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:46:00,378	[DEBUG]	
2023-08-05 08:46:00,378	[INFO]	1-7     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:46:00,384	[DEBUG]	
2023-08-05 08:46:00,384	[INFO]	1-8     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:46:00,391	[DEBUG]	
2023-08-05 08:46:00,391	[INFO]	1-9     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:46:00,397	[DEBUG]	
2023-08-05 08:46:00,397	[INFO]	1-10    SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:47:27,257	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -446,6 +446,9 @@
         out_learnt[1]     = p;
         out_btlevel       = level(var(p));
     }
+    if (verbosity >= 1)/*auto*/{
+        printf("c ===============================================================================\n");
+}/*auto*/
 
     for (int j = 0; j < analyze_toclear.size(); j++)/*auto*/{ seen[var(analyze_toclear[j])] = 0;
 }/*auto*/    // ('seen[]' is now cleared)

2023-08-05 08:47:27,258	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 142), ('core/Solver.cc.xml', 'stmt', 406))
2023-08-05 08:47:27,258	[INFO]	2-1     SUCCESS              +144732349305 (100.06%) [2 edit(s)] 
2023-08-05 08:47:27,269	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -446,6 +446,9 @@
         out_learnt[1]     = p;
         out_btlevel       = level(var(p));
     }
+    if (verbosity >= 1)/*auto*/{
+        printf("c ===============================================================================\n");
+}/*auto*/
 
     for (int j = 0; j < analyze_toclear.size(); j++)/*auto*/{ seen[var(analyze_toclear[j])] = 0;
 }/*auto*/    // ('seen[]' is now cleared)

2023-08-05 08:47:27,285	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:47:27,285	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,285	[INFO]	2-2     SUCCESS              +144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,294	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:47:27,302	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,302	[INFO]	2-3     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,311	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,311	[INFO]	2-4     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,317	[DEBUG]	
2023-08-05 08:47:27,317	[INFO]	2-5     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:47:27,326	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,326	[INFO]	2-6     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,334	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,334	[INFO]	2-7     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,341	[DEBUG]	
2023-08-05 08:47:27,341	[INFO]	2-8     SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 08:47:27,355	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,355	[INFO]	2-9     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,363	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,363	[INFO]	2-10    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,381	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:47:27,381	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,381	[INFO]	3-1     SUCCESS              +144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,389	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:47:27,397	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,397	[INFO]	3-2     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:27,406	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:27,406	[INFO]	3-3     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:30,628	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 30))
2023-08-05 08:47:30,628	[INFO]	3-4     RUN_CODE_ERROR        None  [2 edit(s)]       
2023-08-05 08:47:30,638	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:30,638	[INFO]	3-5     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:30,647	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:30,647	[INFO]	3-6     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:30,655	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:30,655	[INFO]	3-7     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:30,664	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:30,664	[INFO]	3-8     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:30,672	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:30,673	[INFO]	3-9     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:30,681	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:30,681	[INFO]	3-10    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:30,699	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:47:30,699	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:30,699	[INFO]	4-1     SUCCESS              +144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:47:30,707	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:47:30,716	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:47:30,716	[INFO]	4-2     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:56,778	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 451), ('core/Solver.cc.xml', 'stmt', 172))
2023-08-05 08:48:56,779	[INFO]	4-3     SUCCESS               145034836566 (100.27%) [2 edit(s)] 
2023-08-05 08:48:56,789	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:56,789	[INFO]	4-4     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:56,798	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:56,798	[INFO]	4-5     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:56,807	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:56,807	[INFO]	4-6     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,228	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 337), ('core/Solver.cc.xml', 'stmt', 356))
2023-08-05 08:48:57,228	[INFO]	4-7     COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 08:48:57,238	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,239	[INFO]	4-8     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,248	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,248	[INFO]	4-9     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,257	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,257	[INFO]	4-10    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,276	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:48:57,276	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,276	[INFO]	5-1     SUCCESS              +144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,285	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:48:57,294	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,294	[INFO]	5-2     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,304	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,304	[INFO]	5-3     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,313	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,313	[INFO]	5-4     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,321	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,321	[INFO]	5-5     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,329	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,329	[INFO]	5-6     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,338	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,338	[INFO]	5-7     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,346	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,346	[INFO]	5-8     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,354	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,355	[INFO]	5-9     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,363	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,363	[INFO]	5-10    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,380	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:48:57,380	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,380	[INFO]	6-1     SUCCESS              +144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,389	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:48:57,397	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,397	[INFO]	6-2     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,405	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,405	[INFO]	6-3     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,414	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,414	[INFO]	6-4     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,422	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,422	[INFO]	6-5     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:48:57,430	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:48:57,430	[INFO]	6-6     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:50:24,318	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 33), ('core/Solver.cc.xml', 'stmt', 295))
2023-08-05 08:50:24,318	[INFO]	6-7     SUCCESS               144659950720 (100.01%) [2 edit(s)] 
2023-08-05 08:50:24,328	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:50:24,328	[INFO]	6-8     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:50:24,337	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:50:24,337	[INFO]	6-9     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:50:24,345	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:50:24,346	[INFO]	6-10    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:50:24,364	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:50:24,364	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:50:24,364	[INFO]	7-1     SUCCESS              +144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:50:24,376	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){

2023-08-05 08:50:24,385	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:50:24,385	[INFO]	7-2     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:50:24,394	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:50:24,394	[INFO]	7-3     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:50:24,402	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:50:24,402	[INFO]	7-4     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:51,483	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:51:51,484	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:51,484	[INFO]	7-5     SUCCESS              *144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:51,493	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:51:51,501	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:51,501	[INFO]	7-6     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:51,509	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:51,509	[INFO]	7-7     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:51,518	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:51,518	[INFO]	7-8     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:51,526	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:51,526	[INFO]	7-9     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:51,534	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:51,534	[INFO]	7-10    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:51,558	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:51:51,558	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:51,558	[INFO]	8-1     SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:51,567	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:51:54,835	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 167))
2023-08-05 08:51:54,836	[INFO]	8-2     RUN_CODE_ERROR        None  [2 edit(s)]       
2023-08-05 08:51:54,847	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:54,847	[INFO]	8-3     SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:54,857	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:54,857	[INFO]	8-4     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:55,294	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 18), ('core/Solver.cc.xml', 'stmt', 125))
2023-08-05 08:51:55,294	[INFO]	8-5     COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 08:51:55,309	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:55,309	[INFO]	8-6     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:55,321	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,322	[INFO]	8-7     SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,333	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:55,333	[INFO]	8-8     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:55,343	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:55,343	[INFO]	8-9     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:55,354	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:55,354	[INFO]	8-10    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:55,376	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:51:55,376	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,376	[INFO]	9-1     SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,386	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:51:55,395	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,395	[INFO]	9-2     SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,404	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:55,404	[INFO]	9-3     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:55,413	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,413	[INFO]	9-4     SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,423	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,423	[INFO]	9-5     SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,432	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,432	[INFO]	9-6     SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,441	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,441	[INFO]	9-7     SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,450	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:55,450	[INFO]	9-8     SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:55,459	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,459	[INFO]	9-9     SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,469	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,469	[INFO]	9-10    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,489	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:51:55,489	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,489	[INFO]	10-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,498	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:51:55,507	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:51:55,507	[INFO]	10-2    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:51:55,516	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,516	[INFO]	10-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,525	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,525	[INFO]	10-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:51:55,534	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:51:55,534	[INFO]	10-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,139	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,140	[INFO]	10-6    SUCCESS               144612020430 (99.97%) [1 edit(s)] 
2023-08-05 08:53:21,151	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,151	[INFO]	10-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,160	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,160	[INFO]	10-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,170	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,170	[INFO]	10-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,179	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,179	[INFO]	10-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,199	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:53:21,199	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,199	[INFO]	11-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,208	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:53:21,218	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,218	[INFO]	11-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,228	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,228	[INFO]	11-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,237	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,237	[INFO]	11-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,246	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,247	[INFO]	11-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,256	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,256	[INFO]	11-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,266	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,266	[INFO]	11-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,275	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,275	[INFO]	11-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,285	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,285	[INFO]	11-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,295	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,295	[INFO]	11-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,315	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:53:21,315	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,315	[INFO]	12-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,324	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:53:21,334	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,334	[INFO]	12-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,343	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,343	[INFO]	12-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,353	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,354	[INFO]	12-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,363	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,363	[INFO]	12-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,372	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,372	[INFO]	12-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,381	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,382	[INFO]	12-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,391	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,391	[INFO]	12-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,861	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 392), ('core/Solver.cc.xml', 'stmt', 121))
2023-08-05 08:53:21,861	[INFO]	12-9    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 08:53:21,872	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,872	[INFO]	12-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,892	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:53:21,892	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,892	[INFO]	13-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,901	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:53:21,910	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,910	[INFO]	13-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,926	[INFO]	13-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:21,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:21,936	[INFO]	13-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:25,131	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 189))
2023-08-05 08:53:25,132	[INFO]	13-5    RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 08:53:25,142	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:25,142	[INFO]	13-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:25,152	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:25,152	[INFO]	13-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:25,161	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:25,161	[INFO]	13-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:25,170	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:25,170	[INFO]	13-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:25,179	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:25,179	[INFO]	13-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:25,198	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:53:25,198	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:25,199	[INFO]	14-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:53:25,208	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:53:25,216	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:53:25,217	[INFO]	14-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:52,126	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 394))
2023-08-05 08:54:52,127	[INFO]	14-3    SUCCESS               144626607024 (99.98%) [3 edit(s)] 
2023-08-05 08:54:52,138	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:52,138	[INFO]	14-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:52,147	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:52,147	[INFO]	14-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:52,157	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:52,157	[INFO]	14-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:52,166	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:52,166	[INFO]	14-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:52,176	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:52,176	[INFO]	14-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:52,185	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:52,185	[INFO]	14-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,512	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 213))
2023-08-05 08:54:55,513	[INFO]	14-10   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 08:54:55,534	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:54:55,535	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,535	[INFO]	15-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,544	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:54:55,554	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,554	[INFO]	15-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,564	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,564	[INFO]	15-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,574	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,574	[INFO]	15-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,584	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,585	[INFO]	15-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,594	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,594	[INFO]	15-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,603	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,603	[INFO]	15-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,612	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,612	[INFO]	15-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,621	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,621	[INFO]	15-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,630	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,630	[INFO]	15-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,649	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:54:55,649	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,649	[INFO]	16-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,658	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:54:55,667	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,667	[INFO]	16-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,675	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 08:54:55,675	[INFO]	16-3    SUCCESS               144630024678 (99.99%) [1 edit(s)] 
2023-08-05 08:54:55,685	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,685	[INFO]	16-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,694	[INFO]	16-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,704	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,704	[INFO]	16-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,713	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,713	[INFO]	16-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,722	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,722	[INFO]	16-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,731	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,731	[INFO]	16-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,740	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,740	[INFO]	16-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,760	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:54:55,760	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,760	[INFO]	17-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,769	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:54:55,778	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,779	[INFO]	17-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,788	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,789	[INFO]	17-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,798	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,799	[INFO]	17-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,809	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,809	[INFO]	17-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,819	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,819	[INFO]	17-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,829	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,829	[INFO]	17-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,838	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,838	[INFO]	17-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,848	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,848	[INFO]	17-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,858	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,858	[INFO]	17-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,878	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:54:55,878	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,878	[INFO]	18-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,888	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:54:55,896	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,897	[INFO]	18-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,906	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,906	[INFO]	18-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:55,915	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:55,915	[INFO]	18-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:56,313	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 67))
2023-08-05 08:54:56,313	[INFO]	18-5    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 08:54:56,325	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:56,325	[INFO]	18-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:56,336	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:56,336	[INFO]	18-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:56,349	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:56,349	[INFO]	18-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:56,358	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:56,358	[INFO]	18-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:54:56,367	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:54:56,367	[INFO]	18-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:56:21,831	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];
@@ -1067,7 +1067,7 @@
 }/*auto*/
 
     if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
+        
 }/*auto*/
 }
 

2023-08-05 08:56:21,832	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 454))
2023-08-05 08:56:21,832	[INFO]	19-1    SUCCESS              +144594247697 (99.96%) [3 edit(s)] 
2023-08-05 08:56:21,842	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];
@@ -1067,7 +1067,7 @@
 }/*auto*/
 
     if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
+        
 }/*auto*/
 }
 

2023-08-05 08:56:21,861	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:56:21,861	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:56:21,861	[INFO]	19-2    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:56:21,871	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:56:21,880	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:56:21,880	[INFO]	19-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:56:21,890	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:56:21,890	[INFO]	19-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:56:21,900	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:56:21,900	[INFO]	19-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:56:21,909	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:56:21,909	[INFO]	19-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:56:25,139	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 165))
2023-08-05 08:56:25,140	[INFO]	19-7    RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 08:56:25,152	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:56:25,152	[INFO]	19-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,558	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 253), ('core/Solver.cc.xml', 'stmt', 45))
2023-08-05 08:57:51,558	[INFO]	19-9    SUCCESS               144623724562 (99.98%) [3 edit(s)] 
2023-08-05 08:57:51,571	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,571	[INFO]	19-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,593	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:57:51,594	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,594	[INFO]	20-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,605	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:57:51,621	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,622	[INFO]	20-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,634	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,634	[INFO]	20-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,645	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,645	[INFO]	20-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,655	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,656	[INFO]	20-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,666	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,666	[INFO]	20-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,676	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,676	[INFO]	20-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,684	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,684	[INFO]	20-8    SUCCESS               144612020430 (99.97%) [1 edit(s)] 
2023-08-05 08:57:51,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,694	[INFO]	20-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:51,705	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:57:51,705	[INFO]	20-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:57:52,163	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 364), ('core/Solver.cc.xml', 'stmt', 217))
2023-08-05 08:57:52,163	[INFO]	21-1    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 08:59:18,931	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];
@@ -1008,7 +1008,7 @@
             fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
 }/*auto*/
 }/*auto*/
-    fprintf(f, "0\n");
+    printf("c ===============================================================================\n");
 }
 
 

2023-08-05 08:59:18,932	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 425), ('core/Solver.cc.xml', 'stmt', 398))
2023-08-05 08:59:18,932	[INFO]	21-2    SUCCESS              +144613727540 (99.98%) [3 edit(s)] 
2023-08-05 08:59:18,944	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];
@@ -1008,7 +1008,7 @@
             fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
 }/*auto*/
 }/*auto*/
-    fprintf(f, "0\n");
+    printf("c ===============================================================================\n");
 }
 
 

2023-08-05 08:59:18,965	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:59:18,965	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:18,965	[INFO]	21-3    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:18,976	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:59:18,986	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:18,986	[INFO]	21-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:18,997	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:18,997	[INFO]	21-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:19,006	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:19,006	[INFO]	21-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:19,015	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:19,015	[INFO]	21-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:19,024	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:19,024	[INFO]	21-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:19,033	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:19,033	[INFO]	21-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:19,042	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:19,042	[INFO]	21-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:19,061	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:59:19,061	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:19,061	[INFO]	22-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:19,070	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:59:22,637	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 91))
2023-08-05 08:59:22,637	[INFO]	22-2    RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 08:59:22,649	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,649	[INFO]	22-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,659	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,659	[INFO]	22-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,668	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,669	[INFO]	22-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,678	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,678	[INFO]	22-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,688	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,688	[INFO]	22-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,698	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,698	[INFO]	22-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,707	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,707	[INFO]	22-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,717	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,717	[INFO]	22-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,738	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:59:22,738	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,738	[INFO]	23-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,747	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 08:59:22,756	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,756	[INFO]	23-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,765	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,766	[INFO]	23-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,775	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,775	[INFO]	23-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,784	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,784	[INFO]	23-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,793	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,793	[INFO]	23-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:22,810	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 08:59:22,810	[INFO]	23-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 08:59:26,057	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 238), ('core/Solver.cc.xml', 'stmt', 80))
2023-08-05 08:59:26,057	[INFO]	23-8    RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 09:01:01,264	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 332))
2023-08-05 09:01:01,264	[INFO]	23-9    RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 09:01:01,281	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,281	[INFO]	23-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,309	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:01:01,309	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,310	[INFO]	24-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,322	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:01:01,334	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,334	[INFO]	24-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,345	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,345	[INFO]	24-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,356	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,356	[INFO]	24-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,367	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,367	[INFO]	24-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,377	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,377	[INFO]	24-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,386	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,386	[INFO]	24-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,395	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,396	[INFO]	24-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,405	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,405	[INFO]	24-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,414	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,414	[INFO]	24-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,433	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:01:01,433	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,433	[INFO]	25-1    SUCCESS              +144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,442	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:01:01,451	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,451	[INFO]	25-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,460	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,460	[INFO]	25-3    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,470	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,470	[INFO]	25-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,479	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,479	[INFO]	25-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,488	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,488	[INFO]	25-6    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,931	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 3))
2023-08-05 09:01:01,931	[INFO]	25-7    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:01:01,942	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,942	[INFO]	25-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,952	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,952	[INFO]	25-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,962	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:01,962	[INFO]	25-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:01:01,984	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:01:01,984	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 102))
2023-08-05 09:01:01,984	[INFO]	26-1    SUCCESS              +144583159278 (99.95%) [3 edit(s)] 
2023-08-05 09:01:01,994	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:01:02,003	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:01:02,003	[INFO]	26-2    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:11,972	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:02:11,973	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:02:11,973	[INFO]	26-3    SUCCESS              *118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:02:11,984	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:02:11,995	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:11,996	[INFO]	26-4    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:12,006	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:12,007	[INFO]	26-5    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:12,497	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 283), ('core/Solver.cc.xml', 'stmt', 464))
2023-08-05 09:02:12,497	[INFO]	26-6    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:02:12,508	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:12,509	[INFO]	26-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:12,518	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:12,519	[INFO]	26-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:12,528	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:12,528	[INFO]	26-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:12,538	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:12,538	[INFO]	26-10   SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:12,559	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:02:12,559	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 102))
2023-08-05 09:02:12,560	[INFO]	27-1    SUCCESS              +144583159278 (99.95%) [3 edit(s)] 
2023-08-05 09:02:12,570	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -342,7 +342,7 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        max_learnts               = nClauses() * learntsize_factor; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -991,7 +991,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:02:12,588	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:02:12,589	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:02:12,589	[INFO]	27-2    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:02:12,598	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:02:12,608	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:02:12,609	[INFO]	27-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:02:13,052	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 309), ('core/Solver.cc.xml', 'stmt', 306))
2023-08-05 09:02:13,052	[INFO]	27-4    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:02:13,062	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:02:13,062	[INFO]	27-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:02:13,072	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:02:13,072	[INFO]	27-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:02:13,081	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:13,081	[INFO]	27-7    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:13,090	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:13,090	[INFO]	27-8    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:02:13,099	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 390)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 417))
2023-08-05 09:02:13,099	[INFO]	27-9    SUCCESS               144583159278 (99.95%) [2 edit(s)] 
2023-08-05 09:03:25,854	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 81))
2023-08-05 09:03:25,855	[INFO]	27-10   SUCCESS               120287419771 (83.16%) [3 edit(s)] 
2023-08-05 09:03:25,876	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:03:25,876	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:25,876	[INFO]	28-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:25,885	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:03:25,893	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:25,893	[INFO]	28-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:25,903	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 81))
2023-08-05 09:03:25,903	[INFO]	28-3    SUCCESS               120287419771 (83.16%) [3 edit(s)] 
2023-08-05 09:03:25,912	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:25,912	[INFO]	28-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:25,921	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 81))
2023-08-05 09:03:25,921	[INFO]	28-5    SUCCESS               120287419771 (83.16%) [3 edit(s)] 
2023-08-05 09:03:25,934	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:25,935	[INFO]	28-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:26,385	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 572), ('core/Solver.cc.xml', 'stmt', 170))
2023-08-05 09:03:26,386	[INFO]	28-7    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:03:26,795	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 98), ('core/Solver.cc.xml', 'stmt', 26))
2023-08-05 09:03:26,796	[INFO]	28-8    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:03:26,810	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 81))
2023-08-05 09:03:26,810	[INFO]	28-9    SUCCESS               120287419771 (83.16%) [3 edit(s)] 
2023-08-05 09:03:26,821	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:26,821	[INFO]	28-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:26,844	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:03:26,844	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:26,844	[INFO]	29-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:26,854	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:03:26,862	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:26,863	[INFO]	29-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:26,871	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:26,871	[INFO]	29-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:26,880	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:26,880	[INFO]	29-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:26,888	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:26,888	[INFO]	29-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,292	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 113), ('core/Solver.cc.xml', 'stmt', 438))
2023-08-05 09:03:27,293	[INFO]	29-6    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:03:27,306	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,306	[INFO]	29-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,317	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,318	[INFO]	29-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,328	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,328	[INFO]	29-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,339	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,339	[INFO]	29-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,359	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:03:27,359	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,359	[INFO]	30-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,368	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:03:27,376	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,376	[INFO]	30-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,385	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,385	[INFO]	30-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,393	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,394	[INFO]	30-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,402	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,402	[INFO]	30-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,411	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,411	[INFO]	30-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,419	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,419	[INFO]	30-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,428	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,428	[INFO]	30-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,436	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,437	[INFO]	30-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:03:27,445	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:03:27,445	[INFO]	30-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,854	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];
@@ -1041,16 +1033,7 @@
 }/*auto*/
 }/*auto*/
         
-    for (int i = 0; i < clauses.size(); i++)/*auto*/{
-        if (!satisfied(ca[clauses[i]])){
-            Clause& c = ca[clauses[i]];
-            for (int j = 0; j < c.size(); j++)/*auto*/{
-                if (value(c[j]) != l_False)/*auto*/{
-                    mapVar(var(c[j]), map, max);
-}/*auto*/
-}/*auto*/
-        }
-}/*auto*/
+    
 
     // Assumptions are added as unit clauses:
     cnt += assumptions.size();

2023-08-05 09:04:39,854	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 440))
2023-08-05 09:04:39,855	[INFO]	31-1    SUCCESS              +118696986131 (82.06%) [3 edit(s)] 
2023-08-05 09:04:39,864	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];
@@ -1041,16 +1033,7 @@
 }/*auto*/
 }/*auto*/
         
-    for (int i = 0; i < clauses.size(); i++)/*auto*/{
-        if (!satisfied(ca[clauses[i]])){
-            Clause& c = ca[clauses[i]];
-            for (int j = 0; j < c.size(); j++)/*auto*/{
-                if (value(c[j]) != l_False)/*auto*/{
-                    mapVar(var(c[j]), map, max);
-}/*auto*/
-}/*auto*/
-        }
-}/*auto*/
+    
 
     // Assumptions are added as unit clauses:
     cnt += assumptions.size();

2023-08-05 09:04:39,882	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:39,882	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,882	[INFO]	31-2    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,892	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:39,901	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,901	[INFO]	31-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,910	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,910	[INFO]	31-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,919	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,919	[INFO]	31-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,928	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,928	[INFO]	31-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,939	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,939	[INFO]	31-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,949	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,949	[INFO]	31-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,958	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,959	[INFO]	31-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,967	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,967	[INFO]	31-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,985	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:39,985	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:39,985	[INFO]	32-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:39,994	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:40,006	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,006	[INFO]	32-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,017	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,017	[INFO]	32-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,032	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,032	[INFO]	32-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,041	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,041	[INFO]	32-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,050	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,050	[INFO]	32-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,059	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,059	[INFO]	32-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,068	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,068	[INFO]	32-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,076	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,076	[INFO]	32-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,085	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,085	[INFO]	32-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,103	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:40,104	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,104	[INFO]	33-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,112	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:40,121	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,121	[INFO]	33-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,130	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,130	[INFO]	33-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,139	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,139	[INFO]	33-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,147	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,147	[INFO]	33-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,156	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,156	[INFO]	33-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,165	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,165	[INFO]	33-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,173	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,173	[INFO]	33-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,190	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,190	[INFO]	33-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,199	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,199	[INFO]	33-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,217	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:40,217	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,217	[INFO]	34-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,225	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:40,234	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,234	[INFO]	34-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,246	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,246	[INFO]	34-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,262	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,262	[INFO]	34-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,273	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,273	[INFO]	34-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,282	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,282	[INFO]	34-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,291	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,291	[INFO]	34-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,299	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,300	[INFO]	34-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,308	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,308	[INFO]	34-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,317	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,317	[INFO]	34-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,335	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:40,335	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,336	[INFO]	35-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,344	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:04:40,353	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:04:40,353	[INFO]	35-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:04:40,786	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 24), ('core/Solver.cc.xml', 'stmt', 134))
2023-08-05 09:04:40,787	[INFO]	35-3    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:05:52,758	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 97), ('core/Solver.cc.xml', 'stmt', 119))
2023-08-05 09:05:52,759	[INFO]	35-4    SUCCESS               118710438438 (82.07%) [3 edit(s)] 
2023-08-05 09:05:52,770	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:52,770	[INFO]	35-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:52,779	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:52,779	[INFO]	35-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:52,788	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:52,788	[INFO]	35-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:52,797	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:52,797	[INFO]	35-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:52,806	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:52,806	[INFO]	35-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:52,814	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:52,815	[INFO]	35-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:52,834	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:05:52,834	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:52,835	[INFO]	36-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:52,844	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:05:53,339	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 388), ('core/Solver.cc.xml', 'stmt', 319))
2023-08-05 09:05:53,340	[INFO]	36-2    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:05:53,350	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,350	[INFO]	36-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,359	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,359	[INFO]	36-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,368	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,368	[INFO]	36-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,377	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,377	[INFO]	36-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,387	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,387	[INFO]	36-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,396	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,396	[INFO]	36-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,404	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,405	[INFO]	36-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,414	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,414	[INFO]	36-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,433	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:05:53,433	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,433	[INFO]	37-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,442	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:05:53,451	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,451	[INFO]	37-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,460	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,460	[INFO]	37-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,468	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,468	[INFO]	37-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,477	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,477	[INFO]	37-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,486	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,486	[INFO]	37-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,494	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,495	[INFO]	37-7    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,504	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,504	[INFO]	37-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:53,513	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:53,513	[INFO]	37-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:56,819	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 247))
2023-08-05 09:05:56,820	[INFO]	37-10   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 09:05:56,840	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:05:56,840	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:56,840	[INFO]	38-1    SUCCESS              +118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:56,849	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -991,7 +983,7 @@
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
     if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
+        
         map[x] = max++;
     }
     return map[x];

2023-08-05 09:05:56,858	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:56,858	[INFO]	38-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:56,867	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:56,867	[INFO]	38-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:56,876	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:56,876	[INFO]	38-4    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:56,884	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:56,885	[INFO]	38-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:05:56,893	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:05:56,894	[INFO]	38-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:07:08,246	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -803,13 +803,7 @@
                 //max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
+                    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
 }/*auto*/
             }
 
@@ -834,18 +828,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:07:08,246	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:07:08,246	[INFO]	38-7    SUCCESS              *118678891362 (82.05%) [2 edit(s)] 
2023-08-05 09:07:08,255	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -803,13 +803,7 @@
                 //max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
+                    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
 }/*auto*/
             }
 
@@ -834,18 +828,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:07:08,264	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:07:08,264	[INFO]	38-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:07:08,273	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:07:08,273	[INFO]	38-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:07:08,732	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 192), ('core/Solver.cc.xml', 'stmt', 165))
2023-08-05 09:07:08,733	[INFO]	38-10   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:07:08,762	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -803,13 +803,7 @@
                 //max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
+                    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
 }/*auto*/
             }
 
@@ -834,18 +828,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:07:08,762	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:07:08,762	[INFO]	39-1    SUCCESS              +118678891362 (82.05%) [2 edit(s)] 
2023-08-05 09:07:08,775	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -803,13 +803,7 @@
                 //max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
+                    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
 }/*auto*/
             }
 
@@ -834,18 +828,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:07:08,785	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:07:08,785	[INFO]	39-2    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:08:33,067	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:08:33,068	[INFO]	39-3    SUCCESS               144590263445 (99.96%) [2 edit(s)] 
2023-08-05 09:09:43,976	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:09:43,977	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:09:43,977	[INFO]	39-4    SUCCESS              *118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:09:43,986	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:09:43,994	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:09:43,994	[INFO]	39-5    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:09:44,003	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:09:44,003	[INFO]	39-6    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,204	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 303), ('core/Solver.cc.xml', 'stmt', 333))
2023-08-05 09:11:19,205	[INFO]	39-7    RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 09:11:19,217	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,217	[INFO]	39-8    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,226	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,226	[INFO]	39-9    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,235	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:11:19,235	[INFO]	39-10   SUCCESS               118678891362 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,255	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -803,13 +803,7 @@
                 //max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
+                    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
 }/*auto*/
             }
 
@@ -834,18 +828,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,255	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:11:19,255	[INFO]	40-1    SUCCESS              +118678891362 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,264	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -803,13 +803,7 @@
                 //max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)/*auto*/{
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
+                    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
 }/*auto*/
             }
 
@@ -834,18 +828,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,283	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,284	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,284	[INFO]	40-2    SUCCESS              +118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,294	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,304	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,304	[INFO]	40-3    SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,313	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,313	[INFO]	40-4    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,323	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:11:19,323	[INFO]	40-5    SUCCESS               118678891362 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,333	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:11:19,333	[INFO]	40-6    SUCCESS               118678891362 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,343	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,343	[INFO]	40-7    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,352	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:11:19,352	[INFO]	40-8    SUCCESS               144590263445 (99.96%) [2 edit(s)] 
2023-08-05 09:11:19,361	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,362	[INFO]	40-9    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,371	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 417)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,371	[INFO]	40-10   SUCCESS               118683717113 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,390	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,390	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,391	[INFO]	41-1    SUCCESS              +118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,400	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,409	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,409	[INFO]	41-2    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,418	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,418	[INFO]	41-3    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,427	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,427	[INFO]	41-4    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,436	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,436	[INFO]	41-5    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,444	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,444	[INFO]	41-6    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,453	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,453	[INFO]	41-7    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,461	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,461	[INFO]	41-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:11:19,469	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,469	[INFO]	41-9    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,478	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 337), ('core/Solver.cc.xml', 'stmt', 14))
2023-08-05 09:11:19,478	[INFO]	41-10   SUCCESS               118678891362 (82.05%) [2 edit(s)] 
2023-08-05 09:11:19,496	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,496	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,496	[INFO]	42-1    SUCCESS              +118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,504	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,513	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,513	[INFO]	42-2    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,522	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,522	[INFO]	42-3    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,530	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,531	[INFO]	42-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:11:19,539	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,539	[INFO]	42-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:11:19,548	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,548	[INFO]	42-6    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,557	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,558	[INFO]	42-7    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,566	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,567	[INFO]	42-8    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,576	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,576	[INFO]	42-9    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,584	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,584	[INFO]	42-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:11:19,603	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,604	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,604	[INFO]	43-1    SUCCESS              +118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,613	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,621	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,622	[INFO]	43-2    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,630	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,630	[INFO]	43-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:11:19,639	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,639	[INFO]	43-4    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,650	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,650	[INFO]	43-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:11:19,661	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,661	[INFO]	43-6    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,672	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,672	[INFO]	43-7    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,683	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,683	[INFO]	43-8    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,694	[INFO]	43-9    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,706	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,706	[INFO]	43-10   SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,740	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,740	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,740	[INFO]	44-1    SUCCESS              +118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:11:19,751	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:11:19,761	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:11:19,761	[INFO]	44-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:12:32,145	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 260), ('core/Solver.cc.xml', 'stmt', 312))
2023-08-05 09:12:32,146	[INFO]	44-3    SUCCESS               118703597052 (82.06%) [2 edit(s)] 
2023-08-05 09:12:32,158	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,158	[INFO]	44-4    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,167	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,167	[INFO]	44-5    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,176	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,176	[INFO]	44-6    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,185	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,185	[INFO]	44-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:12:32,194	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,194	[INFO]	44-8    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,202	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,202	[INFO]	44-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:12:32,211	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,211	[INFO]	44-10   SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,230	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:12:32,230	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,231	[INFO]	45-1    SUCCESS              +118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,239	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:12:32,248	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,248	[INFO]	45-2    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,257	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,257	[INFO]	45-3    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,266	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,266	[INFO]	45-4    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,275	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,275	[INFO]	45-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:12:32,283	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,283	[INFO]	45-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:12:32,292	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,292	[INFO]	45-7    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,301	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,301	[INFO]	45-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:12:32,309	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,309	[INFO]	45-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:12:32,318	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,318	[INFO]	45-10   SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,336	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:12:32,337	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,337	[INFO]	46-1    SUCCESS              +118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:12:32,345	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:12:32,353	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,353	[INFO]	46-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:12:32,361	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:12:32,362	[INFO]	46-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,696	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 108), ('core/Solver.cc.xml', 'stmt', 435))
2023-08-05 09:13:57,697	[INFO]	46-4    SUCCESS               144645938806 (100.0%) [1 edit(s)] 
2023-08-05 09:13:57,708	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,708	[INFO]	46-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,717	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,717	[INFO]	46-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,725	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,726	[INFO]	46-7    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:13:57,734	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,734	[INFO]	46-8    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:13:57,743	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,743	[INFO]	46-9    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:13:57,751	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,751	[INFO]	46-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,768	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:13:57,768	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,768	[INFO]	47-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,776	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:13:57,784	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,784	[INFO]	47-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,792	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,792	[INFO]	47-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,800	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,800	[INFO]	47-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,808	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,808	[INFO]	47-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:57,817	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,817	[INFO]	47-6    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:13:57,824	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:57,825	[INFO]	47-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:13:58,289	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 426), ('core/Solver.cc.xml', 'stmt', 254))
2023-08-05 09:13:58,290	[INFO]	47-8    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:13:58,302	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:13:58,303	[INFO]	47-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,443	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 265), ('core/Solver.cc.xml', 'stmt', 420))
2023-08-05 09:15:33,444	[INFO]	47-10   RUN_TIMEOUT           None  [2 edit(s)]       
2023-08-05 09:15:33,875	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 318), ('core/Solver.cc.xml', 'stmt', 198))
2023-08-05 09:15:33,876	[INFO]	48-1    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:15:33,895	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:15:33,895	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,895	[INFO]	48-2    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,903	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:15:33,912	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,912	[INFO]	48-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,920	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,920	[INFO]	48-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,928	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,929	[INFO]	48-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,937	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,937	[INFO]	48-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,945	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,945	[INFO]	48-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,954	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,954	[INFO]	48-8    SUCCESS               118661371235 (82.03%) [2 edit(s)] 
2023-08-05 09:15:33,962	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,962	[INFO]	48-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,971	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,971	[INFO]	48-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,988	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:15:33,988	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:33,988	[INFO]	49-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:33,996	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:15:34,003	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:34,004	[INFO]	49-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:34,016	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:34,016	[INFO]	49-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:34,024	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:34,024	[INFO]	49-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:15:34,032	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:15:34,032	[INFO]	49-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,450	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 108), ('core/Solver.cc.xml', 'stmt', 337))
2023-08-05 09:16:49,451	[INFO]	49-6    SUCCESS               130689930424 (90.35%) [2 edit(s)] 
2023-08-05 09:16:49,461	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,461	[INFO]	49-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,469	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,469	[INFO]	49-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,900	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 267), ('core/Solver.cc.xml', 'stmt', 25))
2023-08-05 09:16:49,900	[INFO]	49-9    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:16:49,910	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,911	[INFO]	49-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,928	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:16:49,928	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,928	[INFO]	50-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,937	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:16:49,945	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,945	[INFO]	50-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,953	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,953	[INFO]	50-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,961	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,962	[INFO]	50-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,970	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,970	[INFO]	50-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,978	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,979	[INFO]	50-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,987	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,987	[INFO]	50-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:49,996	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:49,996	[INFO]	50-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,004	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,004	[INFO]	50-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,013	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,013	[INFO]	50-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,031	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:16:50,031	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,031	[INFO]	51-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,040	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:16:50,048	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,048	[INFO]	51-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,056	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,057	[INFO]	51-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,064	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,065	[INFO]	51-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,073	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,073	[INFO]	51-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,483	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 271))
2023-08-05 09:16:50,483	[INFO]	51-6    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:16:50,493	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,494	[INFO]	51-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,502	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,502	[INFO]	51-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,510	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,510	[INFO]	51-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,518	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,518	[INFO]	51-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,535	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:16:50,535	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,535	[INFO]	52-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,543	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:16:50,952	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 167), ('core/Solver.cc.xml', 'stmt', 427))
2023-08-05 09:16:50,953	[INFO]	52-2    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:16:50,962	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,963	[INFO]	52-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,971	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,971	[INFO]	52-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:16:50,979	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:16:50,979	[INFO]	52-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:02,466	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 322), ('core/Solver.cc.xml', 'stmt', 389))
2023-08-05 09:18:02,467	[INFO]	52-6    SUCCESS               119682338157 (82.74%) [2 edit(s)] 
2023-08-05 09:18:02,482	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:02,482	[INFO]	52-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:02,494	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:02,494	[INFO]	52-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:02,505	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:02,506	[INFO]	52-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:02,517	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:02,517	[INFO]	52-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:02,539	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:02,539	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:02,539	[INFO]	53-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:02,549	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:02,995	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 301))
2023-08-05 09:18:02,995	[INFO]	53-2    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:18:03,005	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,005	[INFO]	53-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,013	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,014	[INFO]	53-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,022	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,022	[INFO]	53-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,031	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,031	[INFO]	53-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,040	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,040	[INFO]	53-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,048	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,048	[INFO]	53-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,057	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,057	[INFO]	53-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,065	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,066	[INFO]	53-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,083	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:03,083	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,083	[INFO]	54-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,092	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:03,100	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,100	[INFO]	54-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,108	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,109	[INFO]	54-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,117	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,117	[INFO]	54-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,125	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,125	[INFO]	54-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,134	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,134	[INFO]	54-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,149	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,149	[INFO]	54-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,157	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,157	[INFO]	54-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,166	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,166	[INFO]	54-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,174	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,174	[INFO]	54-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,192	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:03,192	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,192	[INFO]	55-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,200	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:03,209	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,209	[INFO]	55-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,217	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,218	[INFO]	55-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,226	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,226	[INFO]	55-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,234	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,235	[INFO]	55-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,243	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,243	[INFO]	55-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,251	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,252	[INFO]	55-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,260	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,260	[INFO]	55-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,268	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,269	[INFO]	55-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,277	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,277	[INFO]	55-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,294	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:03,295	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,295	[INFO]	56-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,304	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:03,312	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,312	[INFO]	56-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,719	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 36), ('core/Solver.cc.xml', 'stmt', 80))
2023-08-05 09:18:03,719	[INFO]	56-3    COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-08-05 09:18:03,734	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,734	[INFO]	56-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,745	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,745	[INFO]	56-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,757	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,757	[INFO]	56-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,768	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,768	[INFO]	56-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,778	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,778	[INFO]	56-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,788	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,788	[INFO]	56-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,798	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,798	[INFO]	56-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,817	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:03,817	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,817	[INFO]	57-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,825	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:03,833	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,833	[INFO]	57-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:03,841	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:03,841	[INFO]	57-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:07,198	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 279))
2023-08-05 09:18:07,198	[INFO]	57-4    RUN_CODE_ERROR        None  [2 edit(s)]       
2023-08-05 09:18:07,208	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:07,208	[INFO]	57-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:07,608	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 339), ('core/Solver.cc.xml', 'stmt', 455))
2023-08-05 09:18:07,608	[INFO]	57-6    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:18:07,618	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:07,618	[INFO]	57-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:07,627	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:07,627	[INFO]	57-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:07,635	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:07,635	[INFO]	57-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:07,644	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:07,644	[INFO]	57-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:07,662	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:07,662	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:07,662	[INFO]	58-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:07,670	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:18:07,679	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:07,679	[INFO]	58-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:18:07,687	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:18:07,688	[INFO]	58-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:42,847	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 330))
2023-08-05 09:19:42,848	[INFO]	58-4    RUN_TIMEOUT           None  [2 edit(s)]       
2023-08-05 09:19:43,341	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 48), ('core/Solver.cc.xml', 'stmt', 437))
2023-08-05 09:19:43,341	[INFO]	58-5    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:19:43,351	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,351	[INFO]	58-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,360	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,360	[INFO]	58-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,369	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,369	[INFO]	58-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,377	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,377	[INFO]	58-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,790	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 22), ('core/Solver.cc.xml', 'stmt', 122))
2023-08-05 09:19:43,790	[INFO]	58-10   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:19:43,810	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:19:43,810	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,810	[INFO]	59-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,818	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:19:43,827	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,827	[INFO]	59-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,835	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,836	[INFO]	59-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,843	[DEBUG]	
2023-08-05 09:19:43,843	[INFO]	59-4    SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 09:19:43,851	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,851	[INFO]	59-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,860	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,860	[INFO]	59-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,869	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,869	[INFO]	59-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:43,878	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:43,878	[INFO]	59-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:44,319	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 20), ('core/Solver.cc.xml', 'stmt', 381))
2023-08-05 09:19:44,320	[INFO]	59-9    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:19:44,335	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:44,335	[INFO]	59-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:47,624	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 175), ('core/Solver.cc.xml', 'stmt', 346))
2023-08-05 09:19:47,625	[INFO]	60-1    RUN_CODE_ERROR        None  [1 edit(s)]       
2023-08-05 09:19:47,643	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:19:47,643	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:47,643	[INFO]	60-2    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:47,651	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:19:47,659	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:47,660	[INFO]	60-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:47,668	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:47,668	[INFO]	60-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:47,676	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:47,676	[INFO]	60-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:47,684	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:47,685	[INFO]	60-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:47,693	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:47,693	[INFO]	60-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:19:47,701	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:19:47,701	[INFO]	60-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,066	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 532), ('core/Solver.cc.xml', 'stmt', 106))
2023-08-05 09:21:00,067	[INFO]	60-9    SUCCESS               118680199118 (82.05%) [2 edit(s)] 
2023-08-05 09:21:00,077	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,078	[INFO]	60-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,094	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:00,094	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,095	[INFO]	61-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,102	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:00,110	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,110	[INFO]	61-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,118	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,118	[INFO]	61-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,126	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,126	[INFO]	61-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,134	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,134	[INFO]	61-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,142	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,142	[INFO]	61-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,150	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,150	[INFO]	61-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,158	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,158	[INFO]	61-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,670	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 110))
2023-08-05 09:21:00,671	[INFO]	61-9    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:21:00,684	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,684	[INFO]	61-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,707	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:00,707	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,707	[INFO]	62-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,717	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:00,727	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,727	[INFO]	62-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,737	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,737	[INFO]	62-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,746	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,746	[INFO]	62-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,755	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,755	[INFO]	62-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,763	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,763	[INFO]	62-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,771	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,772	[INFO]	62-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,779	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,780	[INFO]	62-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,787	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,788	[INFO]	62-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,795	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,796	[INFO]	62-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,812	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:00,812	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,812	[INFO]	63-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,820	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:00,828	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,828	[INFO]	63-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,836	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,836	[INFO]	63-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,844	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,844	[INFO]	63-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,852	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,852	[INFO]	63-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,860	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,860	[INFO]	63-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,868	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,868	[INFO]	63-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,876	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,876	[INFO]	63-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,884	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,884	[INFO]	63-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,892	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,892	[INFO]	63-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,908	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:00,908	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,909	[INFO]	64-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:00,916	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:00,924	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:00,924	[INFO]	64-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:01,369	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 220), ('core/Solver.cc.xml', 'stmt', 322))
2023-08-05 09:21:01,369	[INFO]	64-3    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:21:01,382	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:01,382	[INFO]	64-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:01,394	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:01,394	[INFO]	64-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:01,405	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:01,405	[INFO]	64-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:01,414	[DEBUG]	
2023-08-05 09:21:01,415	[INFO]	64-7    SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 09:21:01,426	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:01,426	[INFO]	64-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:01,436	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:01,436	[INFO]	64-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:01,446	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:01,446	[INFO]	64-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:01,466	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:01,466	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:01,466	[INFO]	65-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:21:01,475	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:21:01,483	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:21:01,483	[INFO]	65-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:12,674	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 518), ('core/Solver.cc.xml', 'stmt', 17))
2023-08-05 09:22:12,675	[INFO]	65-3    SUCCESS               118732033406 (82.08%) [2 edit(s)] 
2023-08-05 09:22:12,686	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:12,686	[INFO]	65-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:12,695	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:12,695	[INFO]	65-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:12,704	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:12,704	[INFO]	65-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:13,170	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 151), ('core/Solver.cc.xml', 'stmt', 382))
2023-08-05 09:22:13,171	[INFO]	65-7    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:22:13,183	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:13,183	[INFO]	65-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:13,192	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:13,193	[INFO]	65-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:13,202	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:13,202	[INFO]	65-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:13,222	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:22:13,222	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:13,222	[INFO]	66-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:13,231	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:22:13,240	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:13,240	[INFO]	66-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:13,249	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:13,250	[INFO]	66-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:22:13,259	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:22:13,259	[INFO]	66-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:24,712	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 17), ('core/Solver.cc.xml', 'stmt', 276))
2023-08-05 09:23:24,713	[INFO]	66-5    SUCCESS               118671394301 (82.04%) [2 edit(s)] 
2023-08-05 09:23:24,722	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:24,723	[INFO]	66-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:24,731	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:24,731	[INFO]	66-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:24,739	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:24,740	[INFO]	66-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:24,748	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:24,748	[INFO]	66-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:24,756	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:24,756	[INFO]	66-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:24,774	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:23:24,774	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:24,774	[INFO]	67-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:24,783	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:23:24,791	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:24,791	[INFO]	67-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:24,799	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:24,799	[INFO]	67-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:23:28,046	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 226), ('core/Solver.cc.xml', 'stmt', 37))
2023-08-05 09:23:28,047	[INFO]	67-4    RUN_CODE_ERROR        None  [2 edit(s)]       
2023-08-05 09:23:28,057	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:23:28,057	[INFO]	67-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,269	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 238), ('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 09:24:40,270	[INFO]	67-6    SUCCESS               119986138159 (82.95%) [2 edit(s)] 
2023-08-05 09:24:40,702	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 146), ('core/Solver.cc.xml', 'stmt', 44))
2023-08-05 09:24:40,702	[INFO]	67-7    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:24:40,712	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,712	[INFO]	67-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,720	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,720	[INFO]	67-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,729	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,729	[INFO]	67-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,746	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:40,746	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,746	[INFO]	68-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,754	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:40,762	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,762	[INFO]	68-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,770	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,770	[INFO]	68-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,778	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,779	[INFO]	68-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,787	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,787	[INFO]	68-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,795	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,795	[INFO]	68-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,803	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,803	[INFO]	68-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,811	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,811	[INFO]	68-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,820	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,820	[INFO]	68-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,828	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,828	[INFO]	68-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,845	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:40,845	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,845	[INFO]	69-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,853	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:40,861	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,861	[INFO]	69-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,869	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,869	[INFO]	69-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,877	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,877	[INFO]	69-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,884	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,885	[INFO]	69-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,892	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,893	[INFO]	69-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,900	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,900	[INFO]	69-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,908	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,908	[INFO]	69-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,916	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,916	[INFO]	69-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,924	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,924	[INFO]	69-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,941	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:40,941	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,941	[INFO]	70-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,949	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:40,958	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,958	[INFO]	70-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,966	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,967	[INFO]	70-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:40,975	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:40,975	[INFO]	70-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:41,375	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 450), ('core/Solver.cc.xml', 'stmt', 272))
2023-08-05 09:24:41,375	[INFO]	70-5    COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-08-05 09:24:41,392	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:41,392	[INFO]	70-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:41,400	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:41,400	[INFO]	70-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:41,802	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 41))
2023-08-05 09:24:41,802	[INFO]	70-8    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:24:41,814	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:41,814	[INFO]	70-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,224	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 75), ('core/Solver.cc.xml', 'stmt', 34))
2023-08-05 09:24:42,224	[INFO]	70-10   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:24:42,240	[DEBUG]	
2023-08-05 09:24:42,240	[DEBUG]	
2023-08-05 09:24:42,240	[INFO]	71-1    SUCCESS              +144649742290 (100.0%) [0 edit(s)] 
2023-08-05 09:24:42,247	[DEBUG]	
2023-08-05 09:24:42,263	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:42,263	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,263	[INFO]	71-2    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,271	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:42,279	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,279	[INFO]	71-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,287	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,287	[INFO]	71-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,295	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,295	[INFO]	71-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,303	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,303	[INFO]	71-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,704	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 263))
2023-08-05 09:24:42,704	[INFO]	71-7    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:24:42,714	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,714	[INFO]	71-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,722	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,722	[INFO]	71-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,730	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,731	[INFO]	71-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,747	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:42,747	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,747	[INFO]	72-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,756	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:42,765	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,765	[INFO]	72-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,773	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,773	[INFO]	72-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,782	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,782	[INFO]	72-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,790	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,790	[INFO]	72-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,799	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,799	[INFO]	72-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,808	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,808	[INFO]	72-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,816	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,817	[INFO]	72-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,825	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,825	[INFO]	72-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,833	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,833	[INFO]	72-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,851	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:42,851	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,851	[INFO]	73-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,860	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:24:42,868	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,868	[INFO]	73-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,876	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,876	[INFO]	73-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:24:42,884	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:24:42,884	[INFO]	73-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,261	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 438), ('core/Solver.cc.xml', 'stmt', 409))
2023-08-05 09:25:53,262	[INFO]	73-5    SUCCESS               118686139393 (82.05%) [2 edit(s)] 
2023-08-05 09:25:53,273	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,273	[INFO]	73-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,281	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,281	[INFO]	73-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,289	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,289	[INFO]	73-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,297	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,297	[INFO]	73-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,305	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,305	[INFO]	73-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,322	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:25:53,322	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,322	[INFO]	74-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,330	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:25:53,339	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,339	[INFO]	74-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,347	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,347	[INFO]	74-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,356	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,356	[INFO]	74-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,365	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,365	[INFO]	74-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,373	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,374	[INFO]	74-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,382	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,382	[INFO]	74-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,390	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,390	[INFO]	74-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,398	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,399	[INFO]	74-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,407	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,407	[INFO]	74-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,424	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:25:53,425	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,425	[INFO]	75-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,433	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:25:53,441	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,441	[INFO]	75-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,857	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 234), ('core/Solver.cc.xml', 'stmt', 332))
2023-08-05 09:25:53,858	[INFO]	75-3    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:25:53,870	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,870	[INFO]	75-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,879	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,879	[INFO]	75-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,887	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,887	[INFO]	75-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,896	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,896	[INFO]	75-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,910	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,910	[INFO]	75-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,919	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,919	[INFO]	75-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,927	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,927	[INFO]	75-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,945	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:25:53,945	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,945	[INFO]	76-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,954	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:25:53,962	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,962	[INFO]	76-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,970	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,971	[INFO]	76-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:25:53,979	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:25:53,979	[INFO]	76-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,786	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 200), ('core/Solver.cc.xml', 'stmt', 155))
2023-08-05 09:27:04,786	[INFO]	76-5    SUCCESS               118665724227 (82.04%) [2 edit(s)] 
2023-08-05 09:27:04,797	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,797	[INFO]	76-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,805	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,805	[INFO]	76-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,813	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,813	[INFO]	76-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,821	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,821	[INFO]	76-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,829	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,829	[INFO]	76-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,846	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:27:04,846	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,846	[INFO]	77-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,854	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:27:04,862	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,862	[INFO]	77-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,870	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,870	[INFO]	77-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,878	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,878	[INFO]	77-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,886	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,886	[INFO]	77-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,894	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,894	[INFO]	77-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,902	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,902	[INFO]	77-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,910	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,910	[INFO]	77-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,918	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,919	[INFO]	77-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,926	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,927	[INFO]	77-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,944	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:27:04,944	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:27:04,944	[INFO]	78-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:27:04,952	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:28:15,319	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 531), ('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 09:28:15,320	[INFO]	78-2    SUCCESS               118723839926 (82.08%) [2 edit(s)] 
2023-08-05 09:28:15,329	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,330	[INFO]	78-3    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,338	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,338	[INFO]	78-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,346	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,346	[INFO]	78-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,354	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,354	[INFO]	78-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,362	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,363	[INFO]	78-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,371	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,371	[INFO]	78-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,379	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,379	[INFO]	78-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,387	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,387	[INFO]	78-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,405	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:28:15,405	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,405	[INFO]	79-1    SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,413	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:28:15,421	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,422	[INFO]	79-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,914	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 65))
2023-08-05 09:28:15,914	[INFO]	79-3    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:28:15,924	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,924	[INFO]	79-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,932	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,932	[INFO]	79-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,940	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,940	[INFO]	79-6    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:28:15,948	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:28:15,948	[INFO]	79-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:29:27,964	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:27,964	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:27,965	[INFO]	79-8    SUCCESS              *118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:27,975	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,419	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 174), ('core/Solver.cc.xml', 'stmt', 75))
2023-08-05 09:29:28,420	[INFO]	79-9    COMPILE_CODE_ERROR    None  [1 edit(s)]       
2023-08-05 09:29:28,433	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:29:28,433	[INFO]	79-10   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:29:28,461	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,461	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,461	[INFO]	80-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,474	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,484	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:29:28,484	[INFO]	80-2    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:29:28,496	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,496	[INFO]	80-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,506	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:29:28,506	[INFO]	80-4    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:29:28,515	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:29:28,515	[INFO]	80-5    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:29:28,525	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,525	[INFO]	80-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,534	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,535	[INFO]	80-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,542	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:29:28,543	[INFO]	80-8    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:29:28,550	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:29:28,551	[INFO]	80-9    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:29:28,565	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,565	[INFO]	80-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,586	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,586	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,586	[INFO]	81-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,596	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,605	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,605	[INFO]	81-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,615	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,615	[INFO]	81-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,625	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,625	[INFO]	81-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,635	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,635	[INFO]	81-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,645	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,645	[INFO]	81-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,653	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:29:28,653	[INFO]	81-7    SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:29:28,662	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,662	[INFO]	81-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,672	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,672	[INFO]	81-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,682	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,682	[INFO]	81-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,703	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,703	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,703	[INFO]	82-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,712	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,722	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,722	[INFO]	82-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,732	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,732	[INFO]	82-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,741	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,742	[INFO]	82-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,751	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,751	[INFO]	82-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,761	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,761	[INFO]	82-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,770	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,771	[INFO]	82-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,780	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,780	[INFO]	82-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,790	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,790	[INFO]	82-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,800	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,800	[INFO]	82-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,820	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,820	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,820	[INFO]	83-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,829	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,839	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,839	[INFO]	83-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,849	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,849	[INFO]	83-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,858	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,858	[INFO]	83-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,868	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,868	[INFO]	83-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,878	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,878	[INFO]	83-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,887	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,888	[INFO]	83-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,897	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,897	[INFO]	83-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,907	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,907	[INFO]	83-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,916	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,917	[INFO]	83-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,937	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:28,937	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:28,937	[INFO]	84-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:28,946	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:29:29,361	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 390), ('core/Solver.cc.xml', 'stmt', 61))
2023-08-05 09:29:29,362	[INFO]	84-2    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:29:29,373	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:29,373	[INFO]	84-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:29,383	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:29,383	[INFO]	84-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:29,393	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:29,393	[INFO]	84-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:29,402	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:29,402	[INFO]	84-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:29,412	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:29,412	[INFO]	84-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:29,422	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:29,422	[INFO]	84-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:29,432	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:29,432	[INFO]	84-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:29:29,441	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:29:29,441	[INFO]	84-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:30:41,797	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -194,7 +194,7 @@
     }*/
 
     if (ps.size() == 0)/*auto*/{
-        return ok = false;
+        
 }/*auto*/
     else if (ps.size() == 1){
         uncheckedEnqueue(ps[0]);
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:30:41,798	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 50))
2023-08-05 09:30:41,798	[INFO]	85-1    SUCCESS              +118713829987 (82.07%) [2 edit(s)] 
2023-08-05 09:30:41,807	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -194,7 +194,7 @@
     }*/
 
     if (ps.size() == 0)/*auto*/{
-        return ok = false;
+        
 }/*auto*/
     else if (ps.size() == 1){
         uncheckedEnqueue(ps[0]);
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:31:53,201	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -949,7 +941,7 @@
     lbool   status            = l_Undef;
 
     if (verbosity >= 1){
-        printf("c ============================[ Search Statistics ]==============================\n");
+        
         printf("c | Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("c |           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("c ===============================================================================\n");

2023-08-05 09:31:53,202	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 395))
2023-08-05 09:31:53,202	[INFO]	85-2    SUCCESS              +118650707223 (82.03%) [2 edit(s)] 
2023-08-05 09:31:53,211	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -949,7 +941,7 @@
     lbool   status            = l_Undef;
 
     if (verbosity >= 1){
-        printf("c ============================[ Search Statistics ]==============================\n");
+        
         printf("c | Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("c |           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("c ===============================================================================\n");

2023-08-05 09:31:53,231	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:53,231	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,231	[INFO]	85-3    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,242	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:53,253	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,253	[INFO]	85-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,263	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,263	[INFO]	85-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,273	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,273	[INFO]	85-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,283	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,283	[INFO]	85-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,296	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,296	[INFO]	85-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,307	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,307	[INFO]	85-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,738	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 10), ('core/Solver.cc.xml', 'stmt', 289))
2023-08-05 09:31:53,739	[INFO]	85-10   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:31:53,764	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:53,764	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,764	[INFO]	86-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,775	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:53,787	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,787	[INFO]	86-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,798	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,799	[INFO]	86-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,810	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,810	[INFO]	86-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,823	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,823	[INFO]	86-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,836	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,836	[INFO]	86-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,848	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,848	[INFO]	86-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,859	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,859	[INFO]	86-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,869	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,869	[INFO]	86-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:53,879	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:53,879	[INFO]	86-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,277	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 300), ('core/Solver.cc.xml', 'stmt', 104))
2023-08-05 09:31:54,277	[INFO]	87-1    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:31:54,299	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:54,299	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,299	[INFO]	87-2    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,309	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:54,319	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,319	[INFO]	87-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,329	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,329	[INFO]	87-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,339	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,340	[INFO]	87-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,350	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,350	[INFO]	87-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,360	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,360	[INFO]	87-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,370	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,370	[INFO]	87-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,379	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,379	[INFO]	87-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,389	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,389	[INFO]	87-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,409	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:54,409	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,410	[INFO]	88-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,419	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:54,429	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,429	[INFO]	88-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,438	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,439	[INFO]	88-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,448	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,448	[INFO]	88-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,458	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,459	[INFO]	88-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,468	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,469	[INFO]	88-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,478	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,478	[INFO]	88-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,488	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,488	[INFO]	88-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,498	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,498	[INFO]	88-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,508	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,508	[INFO]	88-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,529	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:54,530	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,530	[INFO]	89-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,539	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:54,549	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:54,549	[INFO]	89-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:54,986	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 9))
2023-08-05 09:31:54,986	[INFO]	89-3    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:31:55,002	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,002	[INFO]	89-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,016	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,016	[INFO]	89-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,029	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,029	[INFO]	89-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,041	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,041	[INFO]	89-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,053	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,053	[INFO]	89-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,452	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 277), ('core/Solver.cc.xml', 'stmt', 438))
2023-08-05 09:31:55,453	[INFO]	89-9    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:31:55,465	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,466	[INFO]	89-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,487	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:55,487	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,488	[INFO]	90-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,498	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:55,508	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,508	[INFO]	90-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,518	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,518	[INFO]	90-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,529	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,529	[INFO]	90-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,539	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,539	[INFO]	90-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,549	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,549	[INFO]	90-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,559	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,559	[INFO]	90-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,570	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,570	[INFO]	90-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,580	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,580	[INFO]	90-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,589	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,589	[INFO]	90-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,611	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:55,611	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,611	[INFO]	91-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,620	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:55,630	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,630	[INFO]	91-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,645	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,645	[INFO]	91-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,655	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,655	[INFO]	91-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,664	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,664	[INFO]	91-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,674	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,674	[INFO]	91-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,684	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,684	[INFO]	91-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:55,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:55,694	[INFO]	91-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,144	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 41), ('core/Solver.cc.xml', 'stmt', 446))
2023-08-05 09:31:56,145	[INFO]	91-9    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:31:56,162	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,162	[INFO]	91-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,193	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:56,193	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,193	[INFO]	92-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,206	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:56,218	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,218	[INFO]	92-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,231	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,231	[INFO]	92-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,243	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,243	[INFO]	92-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,660	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 469), ('core/Solver.cc.xml', 'stmt', 116))
2023-08-05 09:31:56,661	[INFO]	92-5    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:31:56,673	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,674	[INFO]	92-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,683	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,683	[INFO]	92-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,694	[INFO]	92-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,704	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,704	[INFO]	92-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,714	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,714	[INFO]	92-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,735	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:56,735	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,735	[INFO]	93-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,744	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:56,754	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,754	[INFO]	93-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,764	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,764	[INFO]	93-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,774	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,774	[INFO]	93-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,783	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,784	[INFO]	93-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,793	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,793	[INFO]	93-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,803	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,803	[INFO]	93-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,813	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,813	[INFO]	93-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,822	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,823	[INFO]	93-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,832	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,832	[INFO]	93-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,852	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:56,852	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,852	[INFO]	94-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,862	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:56,872	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,872	[INFO]	94-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,882	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,882	[INFO]	94-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,891	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,892	[INFO]	94-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,901	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,901	[INFO]	94-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,911	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,911	[INFO]	94-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,921	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,921	[INFO]	94-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,930	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,931	[INFO]	94-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,940	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,940	[INFO]	94-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,950	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,950	[INFO]	94-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,970	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:56,970	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,971	[INFO]	95-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,980	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:56,990	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:56,990	[INFO]	95-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:56,999	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,000	[INFO]	95-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,009	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,009	[INFO]	95-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,019	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,019	[INFO]	95-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,029	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,029	[INFO]	95-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,443	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 567), ('core/Solver.cc.xml', 'stmt', 182))
2023-08-05 09:31:57,443	[INFO]	95-7    COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:31:57,456	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,456	[INFO]	95-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,466	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,466	[INFO]	95-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,872	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 327), ('core/Solver.cc.xml', 'stmt', 425))
2023-08-05 09:31:57,873	[INFO]	95-10   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:31:57,897	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:57,897	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,897	[INFO]	96-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,907	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:57,916	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,916	[INFO]	96-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,926	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,926	[INFO]	96-3    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:57,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:57,936	[INFO]	96-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:58,370	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 376), ('core/Solver.cc.xml', 'stmt', 240))
2023-08-05 09:31:58,370	[INFO]	96-5    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:31:58,382	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:58,382	[INFO]	96-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:58,399	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:58,399	[INFO]	96-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:58,409	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:58,409	[INFO]	96-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:58,419	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:58,419	[INFO]	96-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:58,429	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:58,429	[INFO]	96-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:58,450	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:58,450	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:58,450	[INFO]	97-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:31:58,461	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:31:58,471	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:31:58,471	[INFO]	97-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,747	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 513), ('core/Solver.cc.xml', 'stmt', 377))
2023-08-05 09:33:09,748	[INFO]	97-3    SUCCESS               118690774134 (82.05%) [3 edit(s)] 
2023-08-05 09:33:09,759	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,759	[INFO]	97-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,770	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,770	[INFO]	97-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,780	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,780	[INFO]	97-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,790	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,790	[INFO]	97-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,799	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,799	[INFO]	97-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,809	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,809	[INFO]	97-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,819	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,819	[INFO]	97-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,840	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:33:09,840	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,840	[INFO]	98-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:33:09,850	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:33:09,859	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:33:09,859	[INFO]	98-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:34:36,833	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 376))
2023-08-05 09:34:36,834	[INFO]	98-3    SUCCESS               144585178699 (99.96%) [1 edit(s)] 
2023-08-05 09:34:36,846	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:34:36,847	[INFO]	98-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:34:36,856	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:34:36,857	[INFO]	98-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:34:36,867	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:34:36,867	[INFO]	98-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:34:36,877	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:34:36,877	[INFO]	98-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:34:36,889	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:34:36,889	[INFO]	98-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:34:36,900	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:34:36,900	[INFO]	98-9    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:34:37,356	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 157), ('core/Solver.cc.xml', 'stmt', 2))
2023-08-05 09:34:37,357	[INFO]	98-10   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:34:37,380	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:34:37,381	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:34:37,381	[INFO]	99-1    SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:34:37,391	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:34:37,402	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:34:37,402	[INFO]	99-2    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,275	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,275	[INFO]	99-3    SUCCESS               144609457525 (99.97%) [1 edit(s)] 
2023-08-05 09:36:05,286	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,287	[INFO]	99-4    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,297	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,297	[INFO]	99-5    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,307	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,307	[INFO]	99-6    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,316	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,317	[INFO]	99-7    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,326	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,327	[INFO]	99-8    SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,793	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 81), ('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 09:36:05,793	[INFO]	99-9    COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:36:05,807	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,807	[INFO]	99-10   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,833	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:05,834	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,834	[INFO]	100-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,845	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:05,856	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,856	[INFO]	100-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,866	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,867	[INFO]	100-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,877	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,877	[INFO]	100-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,887	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,887	[INFO]	100-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,897	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,897	[INFO]	100-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:05,906	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:05,906	[INFO]	100-7   SUCCESS               144609457525 (99.97%) [1 edit(s)] 
2023-08-05 09:36:09,099	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 327), ('core/Solver.cc.xml', 'stmt', 388))
2023-08-05 09:36:09,100	[INFO]	100-8   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 09:36:09,117	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:09,117	[INFO]	100-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:09,133	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:09,133	[INFO]	100-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:09,164	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:09,164	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:09,164	[INFO]	101-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:09,178	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:09,191	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:09,191	[INFO]	101-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:09,204	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:09,204	[INFO]	101-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:09,618	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 296), ('core/Solver.cc.xml', 'stmt', 67))
2023-08-05 09:36:09,618	[INFO]	101-4   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:36:09,631	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:09,631	[INFO]	101-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:09,641	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:09,641	[INFO]	101-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:09,652	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:09,652	[INFO]	101-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:12,886	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 61))
2023-08-05 09:36:12,887	[INFO]	101-8   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 09:36:12,904	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:12,904	[INFO]	101-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:12,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:12,925	[INFO]	101-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:12,952	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:12,952	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:12,952	[INFO]	102-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:12,964	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:12,975	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:12,975	[INFO]	102-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:12,986	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:12,986	[INFO]	102-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:12,993	[DEBUG]	
2023-08-05 09:36:12,994	[INFO]	102-4   SUCCESS               144649742290 (100.0%) [0 edit(s)] 
2023-08-05 09:36:13,005	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,005	[INFO]	102-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,014	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:36:13,014	[INFO]	102-6   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:36:13,024	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,024	[INFO]	102-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,034	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,034	[INFO]	102-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,043	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,043	[INFO]	102-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,053	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,053	[INFO]	102-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,074	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:13,074	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,074	[INFO]	103-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,083	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:13,093	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,093	[INFO]	103-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,103	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,103	[INFO]	103-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,113	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,113	[INFO]	103-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,122	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,122	[INFO]	103-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,132	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,132	[INFO]	103-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,142	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,142	[INFO]	103-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,560	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 479), ('core/Solver.cc.xml', 'stmt', 6))
2023-08-05 09:36:13,561	[INFO]	103-8   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:36:13,574	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,574	[INFO]	103-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,585	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:36:13,585	[INFO]	103-10  SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:36:13,611	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:36:13,612	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:36:13,612	[INFO]	104-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:36:13,623	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:37:48,859	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 287))
2023-08-05 09:37:48,860	[INFO]	104-2   RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 09:37:48,880	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:48,880	[INFO]	104-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:48,895	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:48,896	[INFO]	104-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:48,910	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:48,910	[INFO]	104-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:48,923	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:48,923	[INFO]	104-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:48,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:48,936	[INFO]	104-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:48,948	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:48,949	[INFO]	104-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:48,960	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:48,960	[INFO]	104-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:48,977	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:48,978	[INFO]	104-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:49,459	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 237), ('core/Solver.cc.xml', 'stmt', 140))
2023-08-05 09:37:49,459	[INFO]	105-1   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:37:49,481	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:37:49,481	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:49,481	[INFO]	105-2   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:49,492	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:37:49,502	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:49,502	[INFO]	105-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:49,513	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:49,513	[INFO]	105-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:49,523	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:49,523	[INFO]	105-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:49,534	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:49,534	[INFO]	105-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:49,544	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:49,545	[INFO]	105-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:49,554	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:49,555	[INFO]	105-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:37:49,565	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:37:49,565	[INFO]	105-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:39:01,404	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 160))
2023-08-05 09:39:01,405	[INFO]	105-10  SUCCESS               118650863581 (82.03%) [3 edit(s)] 
2023-08-05 09:39:01,429	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:39:01,429	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:39:01,429	[INFO]	106-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:39:01,439	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:39:01,853	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 465))
2023-08-05 09:39:01,853	[INFO]	106-2   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:39:01,865	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:39:01,865	[INFO]	106-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:39:02,276	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 349))
2023-08-05 09:39:02,276	[INFO]	106-4   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:40:14,838	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 656), ('core/Solver.cc.xml', 'stmt', 19))
2023-08-05 09:40:14,839	[INFO]	106-5   SUCCESS               118696607880 (82.06%) [3 edit(s)] 
2023-08-05 09:40:14,851	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:14,851	[INFO]	106-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:40:14,861	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:14,861	[INFO]	106-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:40:14,872	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:14,872	[INFO]	106-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:40:14,882	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:14,882	[INFO]	106-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:40:14,892	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:14,892	[INFO]	106-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:40:18,533	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 245))
2023-08-05 09:40:18,534	[INFO]	107-1   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 09:40:18,568	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:40:18,568	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:18,568	[INFO]	107-2   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:40:18,580	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:40:18,592	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:18,592	[INFO]	107-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:40:19,017	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 127), ('core/Solver.cc.xml', 'stmt', 145))
2023-08-05 09:40:19,018	[INFO]	107-4   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:40:19,030	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:19,030	[INFO]	107-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:40:19,040	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:40:19,041	[INFO]	107-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,335	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 625), ('core/Solver.cc.xml', 'stmt', 17))
2023-08-05 09:41:30,336	[INFO]	107-7   SUCCESS               118720146995 (82.07%) [3 edit(s)] 
2023-08-05 09:41:30,348	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,349	[INFO]	107-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,358	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,359	[INFO]	107-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,368	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,368	[INFO]	107-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,390	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:30,390	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,390	[INFO]	108-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,400	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:30,411	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,411	[INFO]	108-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,421	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,422	[INFO]	108-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,432	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,432	[INFO]	108-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,443	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,443	[INFO]	108-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:30,453	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:30,453	[INFO]	108-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,682	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 79))
2023-08-05 09:41:33,683	[INFO]	108-7   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 09:41:33,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,695	[INFO]	108-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,705	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,705	[INFO]	108-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,715	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,715	[INFO]	108-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,737	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:33,737	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,737	[INFO]	109-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,747	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:33,757	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,757	[INFO]	109-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,767	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,767	[INFO]	109-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,777	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,777	[INFO]	109-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,787	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,787	[INFO]	109-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,797	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,798	[INFO]	109-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,808	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,808	[INFO]	109-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,818	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,818	[INFO]	109-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,828	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,828	[INFO]	109-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,839	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,839	[INFO]	109-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,861	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:33,861	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,861	[INFO]	110-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,871	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:33,880	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,881	[INFO]	110-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,891	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,891	[INFO]	110-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,901	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,901	[INFO]	110-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,911	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,911	[INFO]	110-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,921	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,921	[INFO]	110-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,930	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,931	[INFO]	110-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,941	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,941	[INFO]	110-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,951	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,951	[INFO]	110-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,961	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,961	[INFO]	110-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,982	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:33,982	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:33,982	[INFO]	111-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:33,992	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:34,002	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,002	[INFO]	111-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,012	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,012	[INFO]	111-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,022	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,022	[INFO]	111-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,031	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,032	[INFO]	111-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,041	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,042	[INFO]	111-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,051	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,051	[INFO]	111-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,462	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 189), ('core/Solver.cc.xml', 'stmt', 155))
2023-08-05 09:41:34,463	[INFO]	111-8   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:41:34,474	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,474	[INFO]	111-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,485	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,485	[INFO]	111-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,506	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:34,506	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,506	[INFO]	112-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,516	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:34,526	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,527	[INFO]	112-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,537	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,537	[INFO]	112-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:34,547	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:34,547	[INFO]	112-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:35,001	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 553), ('core/Solver.cc.xml', 'stmt', 450))
2023-08-05 09:41:35,002	[INFO]	112-5   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:41:35,015	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:35,015	[INFO]	112-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:35,026	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:35,026	[INFO]	112-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:35,036	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:35,036	[INFO]	112-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:35,046	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:35,046	[INFO]	112-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:35,057	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:35,057	[INFO]	112-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:35,078	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:35,078	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:35,078	[INFO]	113-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:41:35,088	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:41:35,099	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:41:35,099	[INFO]	113-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,364	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 71))
2023-08-05 09:43:10,365	[INFO]	113-3   RUN_TIMEOUT           None  [1 edit(s)]       
2023-08-05 09:43:10,377	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,378	[INFO]	113-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,388	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,388	[INFO]	113-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,399	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,399	[INFO]	113-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,410	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,410	[INFO]	113-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,421	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,421	[INFO]	113-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,432	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,432	[INFO]	113-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,442	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,443	[INFO]	113-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,465	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:10,466	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,466	[INFO]	114-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,477	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:10,488	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,488	[INFO]	114-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,499	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,499	[INFO]	114-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,507	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:43:10,507	[INFO]	114-4   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:43:10,944	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 94), ('core/Solver.cc.xml', 'stmt', 273))
2023-08-05 09:43:10,944	[INFO]	114-5   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:43:10,956	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,956	[INFO]	114-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,966	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,966	[INFO]	114-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,977	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,977	[INFO]	114-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,987	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,987	[INFO]	114-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:10,997	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:10,998	[INFO]	114-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,015	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:43:11,015	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:43:11,015	[INFO]	115-1   SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:43:11,023	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 09:43:11,045	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:11,045	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,045	[INFO]	115-2   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,056	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:11,066	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,066	[INFO]	115-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,076	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,076	[INFO]	115-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,085	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,085	[INFO]	115-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,095	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,095	[INFO]	115-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,105	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,105	[INFO]	115-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,115	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,115	[INFO]	115-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,125	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,125	[INFO]	115-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,135	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,135	[INFO]	115-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,156	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:11,156	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,156	[INFO]	116-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,166	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:11,176	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,176	[INFO]	116-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,186	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,186	[INFO]	116-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,196	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,196	[INFO]	116-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,205	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,205	[INFO]	116-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,215	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,215	[INFO]	116-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,225	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,225	[INFO]	116-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,235	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,235	[INFO]	116-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,245	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,245	[INFO]	116-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,661	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 202), ('core/Solver.cc.xml', 'stmt', 444))
2023-08-05 09:43:11,662	[INFO]	116-10  COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:43:11,684	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:11,684	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:11,684	[INFO]	117-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:11,694	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,107	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 203), ('core/Solver.cc.xml', 'stmt', 58))
2023-08-05 09:43:12,107	[INFO]	117-2   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:43:12,120	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,120	[INFO]	117-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,131	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,132	[INFO]	117-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,143	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,143	[INFO]	117-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,154	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,154	[INFO]	117-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,172	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,172	[INFO]	117-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,183	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,183	[INFO]	117-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,194	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,194	[INFO]	117-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,205	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,205	[INFO]	117-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,228	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,228	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,228	[INFO]	118-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,238	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,248	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,248	[INFO]	118-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,258	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,258	[INFO]	118-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,268	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,268	[INFO]	118-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,278	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,278	[INFO]	118-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,288	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,288	[INFO]	118-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,298	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,298	[INFO]	118-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,308	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,308	[INFO]	118-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,317	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,317	[INFO]	118-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,327	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,327	[INFO]	118-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,347	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,347	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,348	[INFO]	119-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,357	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,367	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,367	[INFO]	119-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,376	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,377	[INFO]	119-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,386	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,386	[INFO]	119-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,396	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,396	[INFO]	119-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,406	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,406	[INFO]	119-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,415	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,415	[INFO]	119-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,425	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,425	[INFO]	119-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,435	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,435	[INFO]	119-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,444	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,445	[INFO]	119-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,465	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,465	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,465	[INFO]	120-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,475	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,485	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,485	[INFO]	120-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,495	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,495	[INFO]	120-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,505	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,505	[INFO]	120-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,515	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,515	[INFO]	120-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,525	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,525	[INFO]	120-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,535	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,535	[INFO]	120-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,545	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,545	[INFO]	120-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,555	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,555	[INFO]	120-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,565	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,565	[INFO]	120-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,586	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,586	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,586	[INFO]	121-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,596	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:12,606	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,606	[INFO]	121-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,615	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,615	[INFO]	121-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,625	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,625	[INFO]	121-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:12,635	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:12,635	[INFO]	121-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,045	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 384), ('core/Solver.cc.xml', 'stmt', 30))
2023-08-05 09:43:13,045	[INFO]	121-6   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:43:13,057	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:13,057	[INFO]	121-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,068	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:13,068	[INFO]	121-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,079	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:13,079	[INFO]	121-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,090	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:13,091	[INFO]	121-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,115	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:13,115	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:13,115	[INFO]	122-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,126	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:43:13,137	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:13,137	[INFO]	122-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,148	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:13,148	[INFO]	122-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,158	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:43:13,158	[INFO]	122-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:43:13,166	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:43:13,166	[INFO]	122-5   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:44:41,087	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 160))
2023-08-05 09:44:41,087	[INFO]	122-6   SUCCESS               144617968747 (99.98%) [2 edit(s)] 
2023-08-05 09:44:41,099	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:44:41,100	[INFO]	122-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:44:41,111	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:44:41,111	[INFO]	122-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:44:41,121	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:44:41,122	[INFO]	122-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:16,292	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 120))
2023-08-05 09:46:16,292	[INFO]	122-10  RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 09:46:16,333	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:16,333	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:16,333	[INFO]	123-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:16,347	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:16,360	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:16,361	[INFO]	123-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:16,374	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:16,374	[INFO]	123-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:16,386	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:16,386	[INFO]	123-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:16,398	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:16,398	[INFO]	123-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:16,838	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 63), ('core/Solver.cc.xml', 'stmt', 177))
2023-08-05 09:46:16,838	[INFO]	123-6   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:46:17,251	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 105), ('core/Solver.cc.xml', 'stmt', 458))
2023-08-05 09:46:17,251	[INFO]	123-7   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:46:17,263	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,263	[INFO]	123-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,273	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,273	[INFO]	123-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,283	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,284	[INFO]	123-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,305	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:17,305	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,305	[INFO]	124-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,315	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:17,326	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,326	[INFO]	124-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,336	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,337	[INFO]	124-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,347	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,347	[INFO]	124-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,357	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,357	[INFO]	124-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,367	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:17,368	[INFO]	124-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:17,776	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 295), ('core/Solver.cc.xml', 'stmt', 273))
2023-08-05 09:46:17,777	[INFO]	124-7   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:46:18,191	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 17), ('core/Solver.cc.xml', 'stmt', 366))
2023-08-05 09:46:18,191	[INFO]	124-8   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:46:18,203	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,203	[INFO]	124-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,213	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,214	[INFO]	124-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,235	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:18,235	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,235	[INFO]	125-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,245	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:18,255	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,255	[INFO]	125-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,265	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,265	[INFO]	125-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,275	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,275	[INFO]	125-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,287	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,287	[INFO]	125-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,297	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,297	[INFO]	125-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,308	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,308	[INFO]	125-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,318	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,318	[INFO]	125-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,328	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,329	[INFO]	125-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,339	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,339	[INFO]	125-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,361	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:18,361	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,361	[INFO]	126-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,371	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:18,381	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,381	[INFO]	126-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,391	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,391	[INFO]	126-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,401	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,401	[INFO]	126-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,411	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,411	[INFO]	126-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,419	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,420	[INFO]	126-6   SUCCESS               144609457525 (99.97%) [1 edit(s)] 
2023-08-05 09:46:18,430	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,430	[INFO]	126-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,440	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,440	[INFO]	126-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,450	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,450	[INFO]	126-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,460	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,460	[INFO]	126-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,481	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:46:18,481	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:46:18,481	[INFO]	127-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:46:18,491	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:47:48,833	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 333))
2023-08-05 09:47:48,834	[INFO]	127-2   SUCCESS               166792777648 (115.31%) [3 edit(s)] 
2023-08-05 09:47:48,845	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,846	[INFO]	127-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,854	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:47:48,854	[INFO]	127-4   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:47:48,864	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,864	[INFO]	127-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,874	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,874	[INFO]	127-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,884	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,884	[INFO]	127-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,894	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,894	[INFO]	127-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,904	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,904	[INFO]	127-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,914	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,914	[INFO]	127-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,935	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:47:48,935	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,935	[INFO]	128-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,945	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:47:48,955	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,955	[INFO]	128-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,965	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,965	[INFO]	128-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,979	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,979	[INFO]	128-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,989	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,989	[INFO]	128-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:48,999	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:48,999	[INFO]	128-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:49,008	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:49,008	[INFO]	128-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:47:49,018	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:47:49,018	[INFO]	128-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:49:03,241	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 182), ('core/Solver.cc.xml', 'stmt', 347))
2023-08-05 09:49:03,241	[INFO]	128-9   SUCCESS               125559005380 (86.8%) [3 edit(s)] 
2023-08-05 09:49:03,254	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:49:03,254	[INFO]	128-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:49:03,275	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:49:03,275	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:49:03,275	[INFO]	129-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:49:03,285	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:49:03,294	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:49:03,294	[INFO]	129-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:49:03,305	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:49:03,305	[INFO]	129-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:49:03,315	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:49:03,316	[INFO]	129-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:49:03,325	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:49:03,326	[INFO]	129-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:49:03,335	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:49:03,335	[INFO]	129-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:50:23,421	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:50:23,421	[INFO]	129-7   SUCCESS               136018588661 (94.03%) [3 edit(s)] 
2023-08-05 09:50:23,433	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:50:23,433	[INFO]	129-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:50:23,442	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:50:23,442	[INFO]	129-9   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:50:23,452	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:50:23,452	[INFO]	129-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:50:23,473	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:50:23,473	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:50:23,473	[INFO]	130-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:50:23,483	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:50:23,493	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:50:23,493	[INFO]	130-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:50:23,502	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:50:23,503	[INFO]	130-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:50:23,512	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:50:23,513	[INFO]	130-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:51:35,717	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 154))
2023-08-05 09:51:35,718	[INFO]	130-5   SUCCESS               118683824269 (82.05%) [3 edit(s)] 
2023-08-05 09:51:35,729	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:51:35,729	[INFO]	130-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:51:35,740	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:51:35,740	[INFO]	130-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:51:35,751	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:51:35,751	[INFO]	130-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:51:35,761	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:51:35,761	[INFO]	130-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,634	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 81))
2023-08-05 09:53:02,635	[INFO]	130-10  SUCCESS               145207786983 (100.39%) [2 edit(s)] 
2023-08-05 09:53:02,659	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:53:02,659	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,659	[INFO]	131-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,669	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:53:02,680	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,680	[INFO]	131-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,690	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,690	[INFO]	131-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,700	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,701	[INFO]	131-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,711	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,711	[INFO]	131-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,721	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,722	[INFO]	131-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,732	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,732	[INFO]	131-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,742	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,742	[INFO]	131-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,752	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,753	[INFO]	131-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,763	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,763	[INFO]	131-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,784	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:53:02,784	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,784	[INFO]	132-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,794	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:53:02,804	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,804	[INFO]	132-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,813	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,814	[INFO]	132-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,823	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,823	[INFO]	132-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,833	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,833	[INFO]	132-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:02,843	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:02,843	[INFO]	132-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,305	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 275), ('core/Solver.cc.xml', 'stmt', 288))
2023-08-05 09:53:03,306	[INFO]	132-7   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:53:03,323	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,323	[INFO]	132-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,337	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,337	[INFO]	132-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,350	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,350	[INFO]	132-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,379	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:53:03,379	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,379	[INFO]	133-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,392	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:53:03,841	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 450), ('core/Solver.cc.xml', 'stmt', 136))
2023-08-05 09:53:03,842	[INFO]	133-2   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:53:03,854	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,855	[INFO]	133-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,865	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,866	[INFO]	133-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,876	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,877	[INFO]	133-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,887	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,888	[INFO]	133-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,899	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,899	[INFO]	133-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,916	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,916	[INFO]	133-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,927	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,927	[INFO]	133-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,938	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,938	[INFO]	133-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,960	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:53:03,960	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,960	[INFO]	134-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,970	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:53:03,980	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,981	[INFO]	134-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:03,991	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:03,991	[INFO]	134-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:04,003	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:04,003	[INFO]	134-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:04,016	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:04,016	[INFO]	134-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:04,030	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:04,030	[INFO]	134-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:53:04,046	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:53:04,046	[INFO]	134-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,581	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 145), ('core/Solver.cc.xml', 'stmt', 149))
2023-08-05 09:54:30,581	[INFO]	134-8   SUCCESS               144592891665 (99.96%) [2 edit(s)] 
2023-08-05 09:54:30,593	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,593	[INFO]	134-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,603	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,604	[INFO]	134-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,625	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:54:30,625	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,626	[INFO]	135-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,636	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:54:30,646	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,646	[INFO]	135-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,656	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,656	[INFO]	135-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,667	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,667	[INFO]	135-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,677	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,677	[INFO]	135-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,688	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,688	[INFO]	135-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,699	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,699	[INFO]	135-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,709	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,709	[INFO]	135-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:30,719	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:30,719	[INFO]	135-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:31,156	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 425), ('core/Solver.cc.xml', 'stmt', 376))
2023-08-05 09:54:31,156	[INFO]	135-10  COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:54:31,181	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:54:31,181	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:31,181	[INFO]	136-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:31,192	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:54:31,203	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:31,203	[INFO]	136-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:31,213	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:31,213	[INFO]	136-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:31,223	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:31,223	[INFO]	136-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:31,628	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 194), ('core/Solver.cc.xml', 'stmt', 274))
2023-08-05 09:54:31,629	[INFO]	136-5   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:54:31,641	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:31,641	[INFO]	136-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:54:31,651	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:54:31,651	[INFO]	136-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:44,753	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 270), ('core/Solver.cc.xml', 'stmt', 19))
2023-08-05 09:55:44,753	[INFO]	136-8   SUCCESS               118689539399 (82.05%) [3 edit(s)] 
2023-08-05 09:55:44,765	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:44,765	[INFO]	136-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:45,181	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 160), ('core/Solver.cc.xml', 'stmt', 88))
2023-08-05 09:55:45,182	[INFO]	136-10  COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:55:45,205	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:45,205	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:45,206	[INFO]	137-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:45,216	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:45,226	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:45,226	[INFO]	137-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:45,236	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:45,236	[INFO]	137-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:45,246	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:45,246	[INFO]	137-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:45,256	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:45,257	[INFO]	137-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:45,267	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:45,267	[INFO]	137-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:45,277	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:45,277	[INFO]	137-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:45,287	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:45,287	[INFO]	137-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,809	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 84))
2023-08-05 09:55:49,810	[INFO]	137-9   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 09:55:49,823	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,823	[INFO]	137-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,848	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:49,848	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,848	[INFO]	138-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,860	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:49,871	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,871	[INFO]	138-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,882	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,882	[INFO]	138-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,892	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,893	[INFO]	138-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,903	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,903	[INFO]	138-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,914	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,915	[INFO]	138-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,925	[INFO]	138-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,936	[INFO]	138-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,946	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,946	[INFO]	138-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,955	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 09:55:49,955	[INFO]	138-10  SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 09:55:49,982	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:49,982	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:49,982	[INFO]	139-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:49,992	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:50,001	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,002	[INFO]	139-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,011	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,011	[INFO]	139-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,021	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,021	[INFO]	139-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,031	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,031	[INFO]	139-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,041	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,041	[INFO]	139-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,051	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,051	[INFO]	139-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,061	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,061	[INFO]	139-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,072	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,072	[INFO]	139-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,082	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,082	[INFO]	139-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,102	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:50,103	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,103	[INFO]	140-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,112	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:50,122	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,122	[INFO]	140-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,132	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,132	[INFO]	140-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,141	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,141	[INFO]	140-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,151	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,151	[INFO]	140-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,161	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,161	[INFO]	140-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,171	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,171	[INFO]	140-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,181	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,181	[INFO]	140-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,191	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,191	[INFO]	140-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,200	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,201	[INFO]	140-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,224	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:50,225	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,225	[INFO]	141-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,235	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:50,244	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,244	[INFO]	141-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,254	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,254	[INFO]	141-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,264	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,264	[INFO]	141-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,274	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,274	[INFO]	141-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,284	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,284	[INFO]	141-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,294	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,294	[INFO]	141-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,304	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,304	[INFO]	141-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,314	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,314	[INFO]	141-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,324	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,324	[INFO]	141-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,345	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:50,345	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,345	[INFO]	142-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,354	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:55:50,364	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,364	[INFO]	142-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,373	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,374	[INFO]	142-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,383	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,383	[INFO]	142-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,393	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,393	[INFO]	142-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,403	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,403	[INFO]	142-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,412	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,412	[INFO]	142-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:55:50,422	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:55:50,422	[INFO]	142-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:01,914	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 381), ('core/Solver.cc.xml', 'stmt', 17))
2023-08-05 09:57:01,914	[INFO]	142-9   SUCCESS               118657920056 (82.03%) [3 edit(s)] 
2023-08-05 09:57:01,927	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:01,927	[INFO]	142-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:01,951	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:01,951	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:01,951	[INFO]	143-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:01,962	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:01,973	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:01,973	[INFO]	143-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:01,984	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:01,984	[INFO]	143-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:01,995	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:01,995	[INFO]	143-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,006	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,006	[INFO]	143-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,456	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 229))
2023-08-05 09:57:02,457	[INFO]	143-6   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 09:57:02,470	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,470	[INFO]	143-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,482	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,482	[INFO]	143-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,492	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,492	[INFO]	143-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,503	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,503	[INFO]	143-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,524	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:02,524	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,524	[INFO]	144-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,534	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:02,544	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,544	[INFO]	144-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,552	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,552	[INFO]	144-3   SUCCESS               144609457525 (99.97%) [1 edit(s)] 
2023-08-05 09:57:02,563	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,563	[INFO]	144-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,579	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,579	[INFO]	144-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,589	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,589	[INFO]	144-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,600	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,600	[INFO]	144-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,610	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,610	[INFO]	144-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,620	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,620	[INFO]	144-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,630	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,630	[INFO]	144-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,649	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1060,6 +1060,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:02,649	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,649	[INFO]	145-1   SUCCESS              +144609457525 (99.97%) [1 edit(s)] 
2023-08-05 09:57:02,658	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1060,6 +1060,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:02,683	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:02,683	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,683	[INFO]	145-2   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,694	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:02,704	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,704	[INFO]	145-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,715	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,715	[INFO]	145-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,725	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,726	[INFO]	145-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,736	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,736	[INFO]	145-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:02,747	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:02,747	[INFO]	145-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,007	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 32))
2023-08-05 09:57:06,008	[INFO]	145-8   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 09:57:06,020	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,021	[INFO]	145-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,436	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 113), ('core/Solver.cc.xml', 'stmt', 459))
2023-08-05 09:57:06,436	[INFO]	145-10  COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:57:06,467	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:06,467	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,467	[INFO]	146-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,480	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:06,492	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,492	[INFO]	146-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,926	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 10))
2023-08-05 09:57:06,927	[INFO]	146-3   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 09:57:06,941	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,941	[INFO]	146-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,953	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,953	[INFO]	146-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,964	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,964	[INFO]	146-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,976	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,976	[INFO]	146-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,986	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,986	[INFO]	146-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:06,995	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:06,995	[INFO]	146-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:07,005	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:07,005	[INFO]	146-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:07,025	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:07,026	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:07,026	[INFO]	147-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:07,035	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 09:57:07,045	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:07,045	[INFO]	147-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:07,055	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:07,055	[INFO]	147-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:07,064	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:07,064	[INFO]	147-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:57:07,074	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:57:07,074	[INFO]	147-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 09:58:42,229	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 142))
2023-08-05 09:58:42,230	[INFO]	147-6   RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 09:58:42,243	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 09:58:42,243	[INFO]	147-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,531	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 332), ('core/Solver.cc.xml', 'stmt', 397))
2023-08-05 10:00:17,531	[INFO]	147-8   RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 10:00:17,549	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,549	[INFO]	147-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,564	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,564	[INFO]	147-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,595	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:17,595	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,595	[INFO]	148-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,608	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:17,620	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,620	[INFO]	148-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,632	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,632	[INFO]	148-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,643	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,643	[INFO]	148-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,654	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,654	[INFO]	148-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,664	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,664	[INFO]	148-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,674	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,674	[INFO]	148-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,684	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,684	[INFO]	148-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,694	[INFO]	148-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,703	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,703	[INFO]	148-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,724	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:17,724	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,724	[INFO]	149-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,734	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:17,744	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,744	[INFO]	149-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,753	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,753	[INFO]	149-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,763	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,763	[INFO]	149-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,773	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,773	[INFO]	149-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,783	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,783	[INFO]	149-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,798	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,798	[INFO]	149-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,807	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,808	[INFO]	149-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,817	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,817	[INFO]	149-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,827	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,827	[INFO]	149-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,847	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:17,847	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,847	[INFO]	150-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,857	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:17,867	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,867	[INFO]	150-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,876	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,877	[INFO]	150-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,886	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,886	[INFO]	150-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,894	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 10:00:17,894	[INFO]	150-5   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 10:00:17,904	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,904	[INFO]	150-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,914	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,914	[INFO]	150-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,923	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,923	[INFO]	150-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,933	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,933	[INFO]	150-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,943	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,943	[INFO]	150-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,959	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:00:17,959	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 10:00:17,960	[INFO]	151-1   SUCCESS              +118661371235 (82.03%) [1 edit(s)] 
2023-08-05 10:00:17,967	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:00:17,986	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:17,986	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:17,987	[INFO]	151-2   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:17,996	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,006	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,006	[INFO]	151-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,015	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,015	[INFO]	151-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,025	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,025	[INFO]	151-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,035	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,035	[INFO]	151-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,043	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 10:00:18,043	[INFO]	151-7   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 10:00:18,052	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,052	[INFO]	151-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,062	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,062	[INFO]	151-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,072	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,072	[INFO]	151-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,092	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,092	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,092	[INFO]	152-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,102	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,111	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,111	[INFO]	152-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,121	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,121	[INFO]	152-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,131	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,131	[INFO]	152-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,140	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,141	[INFO]	152-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,150	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,150	[INFO]	152-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,160	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,160	[INFO]	152-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,169	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,170	[INFO]	152-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,179	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,179	[INFO]	152-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,189	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,189	[INFO]	152-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,209	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,209	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,209	[INFO]	153-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,219	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,645	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 20), ('core/Solver.cc.xml', 'stmt', 326))
2023-08-05 10:00:18,645	[INFO]	153-2   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 10:00:18,657	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,657	[INFO]	153-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,667	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,667	[INFO]	153-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,677	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,677	[INFO]	153-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,687	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,687	[INFO]	153-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,697	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,697	[INFO]	153-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,707	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,707	[INFO]	153-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,717	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,717	[INFO]	153-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,727	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,727	[INFO]	153-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,748	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,748	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,749	[INFO]	154-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,759	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,768	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,769	[INFO]	154-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,779	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,779	[INFO]	154-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,789	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,789	[INFO]	154-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,799	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,799	[INFO]	154-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,809	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,809	[INFO]	154-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,819	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,819	[INFO]	154-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,830	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,830	[INFO]	154-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,841	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,841	[INFO]	154-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,851	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,851	[INFO]	154-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,882	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,882	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,882	[INFO]	155-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,892	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:18,903	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,904	[INFO]	155-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:18,912	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 10:00:18,912	[INFO]	155-3   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 10:00:18,922	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:18,922	[INFO]	155-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,325	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 112), ('core/Solver.cc.xml', 'stmt', 130))
2023-08-05 10:00:19,325	[INFO]	155-5   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 10:00:19,337	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,337	[INFO]	155-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,347	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,347	[INFO]	155-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,357	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,357	[INFO]	155-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,368	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,368	[INFO]	155-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,378	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,378	[INFO]	155-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,400	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:19,400	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,400	[INFO]	156-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,412	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:19,423	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,423	[INFO]	156-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,435	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,435	[INFO]	156-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,445	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,445	[INFO]	156-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,454	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,454	[INFO]	156-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,464	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,464	[INFO]	156-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,474	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,474	[INFO]	156-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,483	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,483	[INFO]	156-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,493	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,493	[INFO]	156-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,503	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,503	[INFO]	156-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,523	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:19,524	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,524	[INFO]	157-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,533	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:19,543	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,543	[INFO]	157-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,553	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,553	[INFO]	157-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,562	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,562	[INFO]	157-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,572	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,572	[INFO]	157-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,582	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,582	[INFO]	157-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,592	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,592	[INFO]	157-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,602	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,602	[INFO]	157-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,612	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,612	[INFO]	157-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,621	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,622	[INFO]	157-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,642	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:19,642	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,642	[INFO]	158-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,652	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:19,662	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,662	[INFO]	158-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,672	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,672	[INFO]	158-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,682	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,682	[INFO]	158-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,691	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,692	[INFO]	158-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,701	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,701	[INFO]	158-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,711	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,711	[INFO]	158-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:19,721	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:19,721	[INFO]	158-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:20,120	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 403), ('core/Solver.cc.xml', 'stmt', 187))
2023-08-05 10:00:20,121	[INFO]	158-9   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 10:00:23,343	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 319))
2023-08-05 10:00:23,344	[INFO]	158-10  RUN_CODE_ERROR        None  [2 edit(s)]       
2023-08-05 10:00:23,368	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:23,368	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,368	[INFO]	159-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,377	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:23,387	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,387	[INFO]	159-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,397	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,397	[INFO]	159-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,407	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,407	[INFO]	159-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,417	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,417	[INFO]	159-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,426	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,426	[INFO]	159-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,436	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,436	[INFO]	159-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,446	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,446	[INFO]	159-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,456	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,456	[INFO]	159-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,465	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,466	[INFO]	159-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,486	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:23,486	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,486	[INFO]	160-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,496	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:23,903	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 422), ('core/Solver.cc.xml', 'stmt', 243))
2023-08-05 10:00:23,903	[INFO]	160-2   COMPILE_CODE_ERROR    None  [2 edit(s)]       
2023-08-05 10:00:23,922	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,922	[INFO]	160-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,933	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,933	[INFO]	160-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,943	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,943	[INFO]	160-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,953	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,953	[INFO]	160-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,964	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,964	[INFO]	160-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,974	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,975	[INFO]	160-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,985	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,985	[INFO]	160-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:23,994	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:23,994	[INFO]	160-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,015	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:24,015	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,015	[INFO]	161-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,024	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:24,034	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,034	[INFO]	161-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,044	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,044	[INFO]	161-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,054	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,054	[INFO]	161-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,063	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,063	[INFO]	161-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,073	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,073	[INFO]	161-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,083	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,083	[INFO]	161-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,092	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,093	[INFO]	161-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,102	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,102	[INFO]	161-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,112	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,112	[INFO]	161-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,132	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:24,132	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,132	[INFO]	162-1   SUCCESS              +118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,142	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:00:24,151	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,152	[INFO]	162-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,161	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,161	[INFO]	162-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,171	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,171	[INFO]	162-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,181	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,181	[INFO]	162-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,190	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,190	[INFO]	162-6   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,200	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,200	[INFO]	162-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,210	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,210	[INFO]	162-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,220	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,220	[INFO]	162-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:00:24,229	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:00:24,229	[INFO]	162-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:37,628	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:37,628	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:37,628	[INFO]	163-1   SUCCESS              *118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:37,640	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:37,650	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:37,650	[INFO]	163-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:37,661	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:37,661	[INFO]	163-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:37,671	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:37,671	[INFO]	163-4   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:37,681	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:37,682	[INFO]	163-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,098	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 452), ('core/Solver.cc.xml', 'stmt', 36))
2023-08-05 10:01:38,099	[INFO]	163-6   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 10:01:38,110	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,111	[INFO]	163-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,121	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,122	[INFO]	163-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,132	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,132	[INFO]	163-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,142	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,142	[INFO]	163-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,166	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:38,166	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,166	[INFO]	164-1   SUCCESS              +118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,177	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:38,187	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,188	[INFO]	164-2   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,198	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,198	[INFO]	164-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,209	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,209	[INFO]	164-4   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,220	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,220	[INFO]	164-5   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,231	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,231	[INFO]	164-6   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,241	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,241	[INFO]	164-7   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,252	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,252	[INFO]	164-8   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,262	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,263	[INFO]	164-9   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,273	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,273	[INFO]	164-10  SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,296	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:38,296	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,296	[INFO]	165-1   SUCCESS              +118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,307	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:38,317	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,318	[INFO]	165-2   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,327	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,328	[INFO]	165-3   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,339	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,339	[INFO]	165-4   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,350	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,350	[INFO]	165-5   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,361	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,361	[INFO]	165-6   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,372	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,372	[INFO]	165-7   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,383	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53))
2023-08-05 10:01:38,383	[INFO]	165-8   SUCCESS               118638572579 (82.02%) [2 edit(s)] 
2023-08-05 10:01:38,399	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,399	[INFO]	165-9   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,410	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,410	[INFO]	165-10  SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,433	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:38,433	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,433	[INFO]	166-1   SUCCESS              +118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,444	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:38,853	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 140), ('core/Solver.cc.xml', 'stmt', 291))
2023-08-05 10:01:38,854	[INFO]	166-2   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:01:38,868	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,868	[INFO]	166-3   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,878	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,879	[INFO]	166-4   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,889	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,889	[INFO]	166-5   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,900	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,900	[INFO]	166-6   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,911	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,911	[INFO]	166-7   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,922	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,922	[INFO]	166-8   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,932	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,932	[INFO]	166-9   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,943	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,943	[INFO]	166-10  SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,966	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:38,966	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,966	[INFO]	167-1   SUCCESS              +118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:38,977	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:01:38,988	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:38,989	[INFO]	167-2   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:39,000	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:01:39,000	[INFO]	167-3   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:01:39,009	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 10:01:39,009	[INFO]	167-4   SUCCESS               118661371235 (82.03%) [1 edit(s)] 
2023-08-05 10:02:53,083	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,083	[INFO]	167-5   SUCCESS               118662006385 (82.03%) [2 edit(s)] 
2023-08-05 10:02:53,096	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,096	[INFO]	167-6   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,107	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,107	[INFO]	167-7   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,118	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,118	[INFO]	167-8   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,130	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,130	[INFO]	167-9   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,141	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,141	[INFO]	167-10  SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,170	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:02:53,171	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,171	[INFO]	168-1   SUCCESS              +118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,183	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:02:53,193	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,194	[INFO]	168-2   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,628	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 17))
2023-08-05 10:02:53,628	[INFO]	168-3   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:02:53,641	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,642	[INFO]	168-4   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,652	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,653	[INFO]	168-5   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,664	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,664	[INFO]	168-6   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,675	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,675	[INFO]	168-7   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,686	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,686	[INFO]	168-8   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,697	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,697	[INFO]	168-9   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,709	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,710	[INFO]	168-10  SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,733	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:02:53,733	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,733	[INFO]	169-1   SUCCESS              +118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:02:53,744	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +834,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -1060,6 +1052,7 @@
     for (int i = 0; i < assumptions.size(); i++){
         assert(value(assumptions[i]) != l_False);
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
+        return ok = (propagate() == CRef_Undef);
     }
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{

2023-08-05 10:02:53,755	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:02:53,755	[INFO]	169-2   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:03:20,916	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 368))
2023-08-05 10:03:20,917	[INFO]	169-3   RUN_CODE_ERROR        None  [4 edit(s)]       
2023-08-05 10:03:20,932	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:03:20,932	[INFO]	169-4   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:03:20,945	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:03:20,945	[INFO]	169-5   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:03:20,957	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:03:20,957	[INFO]	169-6   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:03:20,968	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:03:20,968	[INFO]	169-7   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:04:33,016	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 458), ('core/Solver.cc.xml', 'stmt', 394))
2023-08-05 10:04:33,017	[INFO]	169-8   SUCCESS               118639423658 (82.02%) [4 edit(s)] 
2023-08-05 10:04:33,030	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:04:33,030	[INFO]	169-9   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:05:45,349	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:05:45,350	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:05:45,350	[INFO]	169-10  SUCCESS              *118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:05:45,362	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:05:45,386	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:05:45,386	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:05:45,386	[INFO]	170-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:05:45,398	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:05:45,408	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:05:45,408	[INFO]	170-2   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:06:58,134	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 206))
2023-08-05 10:06:58,135	[INFO]	170-3   SUCCESS               118624920346 (82.01%) [4 edit(s)] 
2023-08-05 10:06:58,147	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:06:58,147	[INFO]	170-4   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:06:58,158	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:06:58,158	[INFO]	170-5   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:06:58,169	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:06:58,169	[INFO]	170-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:06:58,179	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:06:58,180	[INFO]	170-7   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:06:58,190	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:06:58,190	[INFO]	170-8   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:06:58,201	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:06:58,201	[INFO]	170-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:06:58,218	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:06:58,218	[INFO]	170-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:06:58,242	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:06:58,242	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:06:58,242	[INFO]	171-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:06:58,253	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:06:58,265	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:06:58,265	[INFO]	171-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:06:58,275	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 619), ('core/Solver.cc.xml', 'stmt', 53)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:06:58,276	[INFO]	171-3   SUCCESS               118626725592 (82.01%) [3 edit(s)] 
2023-08-05 10:08:10,099	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 206))
2023-08-05 10:08:10,100	[INFO]	171-4   SUCCESS               118635117415 (82.02%) [4 edit(s)] 
2023-08-05 10:08:10,117	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:08:10,117	[INFO]	171-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:08:10,133	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:08:10,133	[INFO]	171-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:08:10,147	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:08:10,147	[INFO]	171-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:08:10,161	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:08:10,161	[INFO]	171-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:08:10,174	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:08:10,174	[INFO]	171-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:08:10,187	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:08:10,188	[INFO]	171-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:08:10,212	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:08:10,212	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:08:10,212	[INFO]	172-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:08:10,223	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:09:22,092	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 404))
2023-08-05 10:09:22,093	[INFO]	172-2   SUCCESS               118638976391 (82.02%) [4 edit(s)] 
2023-08-05 10:09:22,106	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:22,106	[INFO]	172-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:22,117	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:22,117	[INFO]	172-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:22,129	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:22,129	[INFO]	172-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:22,140	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:22,140	[INFO]	172-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:22,151	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:22,151	[INFO]	172-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:22,162	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:22,163	[INFO]	172-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:22,174	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:22,174	[INFO]	172-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:22,185	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:22,185	[INFO]	172-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,363	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 164), ('core/Solver.cc.xml', 'stmt', 39))
2023-08-05 10:09:25,364	[INFO]	173-1   RUN_CODE_ERROR        None  [4 edit(s)]       
2023-08-05 10:09:25,398	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:09:25,398	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,398	[INFO]	173-2   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,413	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:09:25,427	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,427	[INFO]	173-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,441	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,441	[INFO]	173-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,454	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,454	[INFO]	173-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,465	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,465	[INFO]	173-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,476	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,476	[INFO]	173-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,487	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,487	[INFO]	173-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,498	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,498	[INFO]	173-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,509	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,509	[INFO]	173-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,533	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:09:25,533	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,533	[INFO]	174-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,544	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:09:25,555	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,555	[INFO]	174-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:25,566	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:25,566	[INFO]	174-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,810	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 69))
2023-08-05 10:09:28,811	[INFO]	174-4   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 10:09:28,824	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,824	[INFO]	174-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,836	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,836	[INFO]	174-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,848	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,848	[INFO]	174-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,860	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,860	[INFO]	174-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,875	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,875	[INFO]	174-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,889	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,889	[INFO]	174-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,917	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:09:28,918	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,918	[INFO]	175-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,929	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:09:28,940	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,940	[INFO]	175-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:09:28,952	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:09:28,952	[INFO]	175-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:10:30,150	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 456))
2023-08-05 10:10:30,151	[INFO]	175-4   RUN_CODE_ERROR        None  [4 edit(s)]       
2023-08-05 10:11:41,875	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 427))
2023-08-05 10:11:41,876	[INFO]	175-5   SUCCESS               118635212940 (82.02%) [4 edit(s)] 
2023-08-05 10:11:41,891	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:11:41,891	[INFO]	175-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:11:41,905	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:11:41,906	[INFO]	175-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:11:41,919	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:11:41,919	[INFO]	175-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:11:41,931	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:11:41,931	[INFO]	175-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:11:41,944	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:11:41,944	[INFO]	175-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:11:41,970	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:11:41,970	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:11:41,970	[INFO]	176-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:11:41,988	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:11:42,000	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:11:42,000	[INFO]	176-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:13:08,264	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:13:08,265	[INFO]	176-3   SUCCESS               144580224839 (99.95%) [1 edit(s)] 
2023-08-05 10:14:43,548	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 308), ('core/Solver.cc.xml', 'stmt', 338))
2023-08-05 10:14:43,549	[INFO]	176-4   RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 10:14:43,989	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 0), ('core/Solver.cc.xml', 'stmt', 88))
2023-08-05 10:14:43,989	[INFO]	176-5   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:14:44,004	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:14:44,004	[INFO]	176-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:55,807	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 365), ('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:15:55,808	[INFO]	176-7   SUCCESS               118667380541 (82.04%) [4 edit(s)] 
2023-08-05 10:15:55,822	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:55,822	[INFO]	176-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:55,835	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:55,836	[INFO]	176-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:55,849	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:55,849	[INFO]	176-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:55,876	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:15:55,876	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:55,876	[INFO]	177-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:55,887	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:15:55,898	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:55,898	[INFO]	177-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:55,909	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:55,910	[INFO]	177-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:55,921	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:55,921	[INFO]	177-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:55,932	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:55,932	[INFO]	177-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:56,363	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 380), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:15:56,363	[INFO]	177-6   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 10:15:56,376	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:56,377	[INFO]	177-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:56,389	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:56,389	[INFO]	177-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:56,402	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 365), ('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:15:56,402	[INFO]	177-9   SUCCESS               118667380541 (82.04%) [4 edit(s)] 
2023-08-05 10:15:56,413	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:56,413	[INFO]	177-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:56,437	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:15:56,437	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:56,437	[INFO]	178-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:56,448	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:15:56,459	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:56,459	[INFO]	178-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:56,470	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:56,470	[INFO]	178-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:56,481	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:56,481	[INFO]	178-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:15:56,492	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:15:56,493	[INFO]	178-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,756	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,757	[INFO]	178-6   SUCCESS               144561314976 (99.94%) [2 edit(s)] 
2023-08-05 10:17:21,772	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,772	[INFO]	178-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,785	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,785	[INFO]	178-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,798	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,798	[INFO]	178-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,811	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,812	[INFO]	178-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,839	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:17:21,839	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,839	[INFO]	179-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,851	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:17:21,863	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,863	[INFO]	179-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,875	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,875	[INFO]	179-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,888	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,888	[INFO]	179-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,900	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,900	[INFO]	179-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,913	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,913	[INFO]	179-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,925	[INFO]	179-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,937	[INFO]	179-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:17:21,948	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:17:21,948	[INFO]	179-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,051	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:18:34,052	[INFO]	179-10  SUCCESS               118634412549 (82.01%) [2 edit(s)] 
2023-08-05 10:18:34,078	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:34,078	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,078	[INFO]	180-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,089	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:34,101	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,101	[INFO]	180-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,113	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,113	[INFO]	180-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,124	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,125	[INFO]	180-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,137	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,137	[INFO]	180-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,149	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,149	[INFO]	180-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,158	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:18:34,158	[INFO]	180-7   SUCCESS               118634412549 (82.01%) [2 edit(s)] 
2023-08-05 10:18:34,169	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,169	[INFO]	180-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,180	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,181	[INFO]	180-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,192	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,192	[INFO]	180-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,216	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:34,216	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,216	[INFO]	181-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,227	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:34,238	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,238	[INFO]	181-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,249	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,250	[INFO]	181-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,270	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,270	[INFO]	181-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,707	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 547), ('core/Solver.cc.xml', 'stmt', 447))
2023-08-05 10:18:34,708	[INFO]	181-5   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:18:34,724	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,724	[INFO]	181-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,738	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,738	[INFO]	181-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:34,751	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:34,751	[INFO]	181-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,160	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 420), ('core/Solver.cc.xml', 'stmt', 202))
2023-08-05 10:18:35,160	[INFO]	181-9   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:18:35,177	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,177	[INFO]	181-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,206	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:35,206	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,206	[INFO]	182-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,218	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:35,229	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,229	[INFO]	182-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,240	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,240	[INFO]	182-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,251	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,252	[INFO]	182-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,263	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,263	[INFO]	182-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,275	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,275	[INFO]	182-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,286	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,287	[INFO]	182-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,298	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,298	[INFO]	182-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,310	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,310	[INFO]	182-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,321	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,322	[INFO]	182-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,346	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:35,346	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,346	[INFO]	183-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,357	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:35,368	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,368	[INFO]	183-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,379	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,379	[INFO]	183-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,820	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 122), ('core/Solver.cc.xml', 'stmt', 274))
2023-08-05 10:18:35,821	[INFO]	183-4   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:18:35,838	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,838	[INFO]	183-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,852	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,852	[INFO]	183-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,866	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,866	[INFO]	183-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,878	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,878	[INFO]	183-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,890	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,890	[INFO]	183-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,901	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,901	[INFO]	183-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,925	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:35,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:35,926	[INFO]	184-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:35,937	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,195	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 277), ('core/Solver.cc.xml', 'stmt', 335))
2023-08-05 10:18:39,196	[INFO]	184-2   RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 10:18:39,209	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,209	[INFO]	184-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,220	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,220	[INFO]	184-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,232	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,232	[INFO]	184-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,243	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,244	[INFO]	184-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,255	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,255	[INFO]	184-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,267	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,267	[INFO]	184-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,278	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,278	[INFO]	184-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,292	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,292	[INFO]	184-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,319	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,319	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,319	[INFO]	185-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,330	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,341	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,341	[INFO]	185-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,352	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,352	[INFO]	185-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,361	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:18:39,361	[INFO]	185-4   SUCCESS               118634412549 (82.01%) [2 edit(s)] 
2023-08-05 10:18:39,372	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,372	[INFO]	185-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,383	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,383	[INFO]	185-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,394	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,395	[INFO]	185-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,406	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,406	[INFO]	185-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,417	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,417	[INFO]	185-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,428	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,428	[INFO]	185-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,452	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,452	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,452	[INFO]	186-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,463	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,474	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,474	[INFO]	186-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,485	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,485	[INFO]	186-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,496	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,497	[INFO]	186-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,508	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,508	[INFO]	186-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,519	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,519	[INFO]	186-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,530	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,530	[INFO]	186-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,542	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,542	[INFO]	186-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,558	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,559	[INFO]	186-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,570	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,570	[INFO]	186-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,594	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,594	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,594	[INFO]	187-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,605	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,616	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,616	[INFO]	187-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,627	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,627	[INFO]	187-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,638	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,638	[INFO]	187-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,650	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,650	[INFO]	187-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,661	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,661	[INFO]	187-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,672	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,672	[INFO]	187-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,683	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,683	[INFO]	187-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,694	[INFO]	187-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,705	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,705	[INFO]	187-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,729	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,729	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,729	[INFO]	188-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,740	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:18:39,751	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,751	[INFO]	188-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,762	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,762	[INFO]	188-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,773	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,773	[INFO]	188-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,780	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:18:39,780	[INFO]	188-5   SUCCESS               144580224839 (99.95%) [1 edit(s)] 
2023-08-05 10:18:39,791	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,791	[INFO]	188-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,803	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,803	[INFO]	188-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,814	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,814	[INFO]	188-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:18:39,825	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:18:39,825	[INFO]	188-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:51,931	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:51,932	[INFO]	188-10  SUCCESS               118685524759 (82.05%) [2 edit(s)] 
2023-08-05 10:19:51,967	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:19:51,967	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:51,968	[INFO]	189-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:51,982	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:19:51,996	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:51,996	[INFO]	189-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,009	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,009	[INFO]	189-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,021	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,021	[INFO]	189-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,032	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,032	[INFO]	189-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,044	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,044	[INFO]	189-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,055	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,055	[INFO]	189-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,067	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,067	[INFO]	189-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,078	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,078	[INFO]	189-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,090	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,090	[INFO]	189-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,114	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:19:52,114	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,114	[INFO]	190-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,125	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:19:52,137	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,137	[INFO]	190-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,148	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,148	[INFO]	190-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,160	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,160	[INFO]	190-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,171	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,171	[INFO]	190-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,182	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,182	[INFO]	190-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,630	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 54))
2023-08-05 10:19:52,631	[INFO]	190-7   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:19:52,644	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,644	[INFO]	190-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,656	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,656	[INFO]	190-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,667	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,668	[INFO]	190-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,693	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:19:52,693	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,693	[INFO]	191-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,704	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:19:52,716	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,716	[INFO]	191-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,727	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,727	[INFO]	191-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,738	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,738	[INFO]	191-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:52,749	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:52,749	[INFO]	191-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:53,146	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 614), ('core/Solver.cc.xml', 'stmt', 279))
2023-08-05 10:19:53,147	[INFO]	191-6   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:19:53,554	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 349), ('core/Solver.cc.xml', 'stmt', 252))
2023-08-05 10:19:53,554	[INFO]	191-7   COMPILE_CODE_ERROR    None  [3 edit(s)]       
2023-08-05 10:19:53,568	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:53,568	[INFO]	191-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:53,580	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:53,580	[INFO]	191-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:53,591	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:53,591	[INFO]	191-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:53,616	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:19:53,616	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:53,616	[INFO]	192-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:19:53,633	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:19:53,645	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:19:53,645	[INFO]	192-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:05,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 434), ('core/Solver.cc.xml', 'stmt', 465))
2023-08-05 10:21:05,926	[INFO]	192-3   SUCCESS               118660247441 (82.03%) [4 edit(s)] 
2023-08-05 10:21:05,939	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:05,939	[INFO]	192-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:05,951	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:05,951	[INFO]	192-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:05,963	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:05,963	[INFO]	192-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:05,975	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:05,975	[INFO]	192-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:05,987	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:05,987	[INFO]	192-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:05,999	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:05,999	[INFO]	192-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:06,011	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:06,011	[INFO]	192-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:06,037	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:21:06,037	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:06,037	[INFO]	193-1   SUCCESS              +118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:06,048	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -502,6 +502,8 @@
         return;
 }/*auto*/
 
+    K = (double)opt_K;
+
     seen[var(p)] = 1;
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
@@ -712,7 +714,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -834,18 +836,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:21:06,057	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:21:06,057	[INFO]	193-2   SUCCESS               118634412549 (82.01%) [2 edit(s)] 
2023-08-05 10:21:06,068	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:06,068	[INFO]	193-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:06,080	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:06,080	[INFO]	193-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:06,091	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:06,091	[INFO]	193-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:06,102	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:06,102	[INFO]	193-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:06,116	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:06,116	[INFO]	193-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:58,119	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:21:58,119	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:21:58,119	[INFO]	193-8   SUCCESS              *83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:21:58,131	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:21:58,145	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:58,145	[INFO]	193-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:58,159	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:58,160	[INFO]	193-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:58,181	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:21:58,181	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:21:58,181	[INFO]	194-1   SUCCESS              +83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:21:58,190	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:21:58,201	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:58,201	[INFO]	194-2   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:58,212	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:58,213	[INFO]	194-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:21:58,224	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:21:58,224	[INFO]	194-4   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,052	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 395))
2023-08-05 10:23:12,053	[INFO]	194-5   SUCCESS               118663391885 (82.03%) [4 edit(s)] 
2023-08-05 10:23:12,066	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,066	[INFO]	194-6   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,075	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,076	[INFO]	194-7   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,087	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,087	[INFO]	194-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,097	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,097	[INFO]	194-9   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,108	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,108	[INFO]	194-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,128	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:23:12,128	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,128	[INFO]	195-1   SUCCESS              +83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,138	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:23:12,147	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,147	[INFO]	195-2   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,158	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,159	[INFO]	195-3   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,168	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,168	[INFO]	195-4   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,179	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,180	[INFO]	195-5   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,189	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,189	[INFO]	195-6   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,200	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,200	[INFO]	195-7   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,210	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,210	[INFO]	195-8   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,221	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,221	[INFO]	195-9   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,232	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,232	[INFO]	195-10  SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,255	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:23:12,255	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,255	[INFO]	196-1   SUCCESS              +83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,265	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:23:12,276	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,276	[INFO]	196-2   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,287	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,287	[INFO]	196-3   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,297	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,297	[INFO]	196-4   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,308	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,308	[INFO]	196-5   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,318	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,318	[INFO]	196-6   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,329	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,329	[INFO]	196-7   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,341	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 254), ('core/Solver.cc.xml', 'stmt', 361))
2023-08-05 10:23:12,341	[INFO]	196-8   SUCCESS               118618331661 (82.0%) [3 edit(s)] 
2023-08-05 10:23:12,352	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,352	[INFO]	196-9   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,362	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,362	[INFO]	196-10  SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,385	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:23:12,385	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,385	[INFO]	197-1   SUCCESS              +83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,395	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:23:12,405	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,405	[INFO]	197-2   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,415	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,415	[INFO]	197-3   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,435	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,436	[INFO]	197-4   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,446	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,446	[INFO]	197-5   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,456	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,457	[INFO]	197-6   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,467	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,467	[INFO]	197-7   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,477	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,477	[INFO]	197-8   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,486	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,486	[INFO]	197-9   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,496	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,496	[INFO]	197-10  SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,517	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:23:12,517	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:23:12,517	[INFO]	198-1   SUCCESS              +83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:23:12,527	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:23:12,535	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294))
2023-08-05 10:23:12,536	[INFO]	198-2   SUCCESS               118634412549 (82.01%) [2 edit(s)] 
2023-08-05 10:24:06,895	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 390))
2023-08-05 10:24:06,896	[INFO]	198-3   SUCCESS               83641933424 (57.82%) [4 edit(s)] 
2023-08-05 10:24:06,909	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:24:06,909	[INFO]	198-4   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:24:06,919	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:24:06,919	[INFO]	198-5   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:24:06,930	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:24:06,930	[INFO]	198-6   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:24:06,940	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:24:06,940	[INFO]	198-7   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:25:42,166	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 284), ('core/Solver.cc.xml', 'stmt', 22))
2023-08-05 10:25:42,167	[INFO]	198-8   RUN_TIMEOUT           None  [4 edit(s)]       
2023-08-05 10:25:42,180	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:25:42,180	[INFO]	198-9   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:26:34,358	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:26:34,359	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:26:34,359	[INFO]	198-10  SUCCESS              *83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:26:34,372	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:26:34,397	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:26:34,397	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:26:34,397	[INFO]	199-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:26:34,409	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:26:34,420	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:26:34,420	[INFO]	199-2   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:26:34,865	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 538), ('core/Solver.cc.xml', 'stmt', 222))
2023-08-05 10:26:34,865	[INFO]	199-3   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:27:45,800	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:45,801	[INFO]	199-4   SUCCESS               118637592386 (82.02%) [3 edit(s)] 
2023-08-05 10:27:45,814	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:45,814	[INFO]	199-5   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:45,830	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:45,831	[INFO]	199-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:45,844	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:45,845	[INFO]	199-7   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:45,858	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:45,858	[INFO]	199-8   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:45,870	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:45,871	[INFO]	199-9   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:45,884	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:45,884	[INFO]	199-10  SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:45,918	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:45,918	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:45,918	[INFO]	200-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:45,929	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:45,939	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:45,939	[INFO]	200-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:45,949	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:45,949	[INFO]	200-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:45,959	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:45,959	[INFO]	200-4   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:45,969	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:45,969	[INFO]	200-5   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:45,978	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:45,978	[INFO]	200-6   SUCCESS               118637592386 (82.02%) [3 edit(s)] 
2023-08-05 10:27:45,988	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:45,989	[INFO]	200-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:45,998	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:45,998	[INFO]	200-8   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:46,519	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 570), ('core/Solver.cc.xml', 'stmt', 327))
2023-08-05 10:27:46,519	[INFO]	200-9   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:27:46,931	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 97), ('core/Solver.cc.xml', 'stmt', 456))
2023-08-05 10:27:46,931	[INFO]	200-10  COMPILE_CODE_ERROR    None  [5 edit(s)]       
2023-08-05 10:27:46,955	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:46,955	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:46,955	[INFO]	201-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:46,965	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:46,975	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:46,975	[INFO]	201-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:46,985	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:46,986	[INFO]	201-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:46,995	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:46,995	[INFO]	201-4   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:47,005	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,006	[INFO]	201-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,016	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,016	[INFO]	201-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,026	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,026	[INFO]	201-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,036	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,036	[INFO]	201-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,047	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315))
2023-08-05 10:27:47,047	[INFO]	201-9   SUCCESS               83633133066 (57.82%) [3 edit(s)] 
2023-08-05 10:27:47,058	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,058	[INFO]	201-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,080	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:47,081	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,081	[INFO]	202-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,091	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:47,101	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,101	[INFO]	202-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,112	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,112	[INFO]	202-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,122	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,122	[INFO]	202-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,139	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,139	[INFO]	202-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,150	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,150	[INFO]	202-6   SUCCESS               118637592386 (82.02%) [3 edit(s)] 
2023-08-05 10:27:47,160	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,160	[INFO]	202-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,171	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,171	[INFO]	202-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,181	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,181	[INFO]	202-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,191	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,191	[INFO]	202-10  SUCCESS               118637592386 (82.02%) [3 edit(s)] 
2023-08-05 10:27:47,213	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:47,213	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,214	[INFO]	203-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,224	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:47,234	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,234	[INFO]	203-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,244	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,244	[INFO]	203-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,255	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,255	[INFO]	203-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,265	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,265	[INFO]	203-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,275	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,275	[INFO]	203-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,285	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,285	[INFO]	203-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,295	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,295	[INFO]	203-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,305	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,305	[INFO]	203-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,315	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,315	[INFO]	203-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,337	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:47,337	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,337	[INFO]	204-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:27:47,347	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:27:47,356	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:27:47,357	[INFO]	204-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,563	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 225))
2023-08-05 10:29:22,564	[INFO]	204-3   RUN_TIMEOUT           None  [5 edit(s)]       
2023-08-05 10:29:22,579	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,579	[INFO]	204-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,592	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,592	[INFO]	204-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,604	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,604	[INFO]	204-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,614	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,614	[INFO]	204-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,625	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,625	[INFO]	204-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,636	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,636	[INFO]	204-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,647	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,647	[INFO]	204-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,673	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:29:22,673	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,673	[INFO]	205-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,683	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:29:22,693	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,693	[INFO]	205-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,703	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,703	[INFO]	205-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,713	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,713	[INFO]	205-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,723	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,723	[INFO]	205-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,733	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,733	[INFO]	205-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,744	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,744	[INFO]	205-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,754	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,754	[INFO]	205-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,764	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,764	[INFO]	205-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,775	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,775	[INFO]	205-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,797	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:29:22,797	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,798	[INFO]	206-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,808	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:29:22,818	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,819	[INFO]	206-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:22,829	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:22,829	[INFO]	206-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:29:23,259	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 306))
2023-08-05 10:29:23,259	[INFO]	206-4   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:29:23,272	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:29:23,272	[INFO]	206-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:30:16,884	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 451))
2023-08-05 10:30:16,885	[INFO]	206-6   SUCCESS               83646246087 (57.83%) [5 edit(s)] 
2023-08-05 10:30:16,896	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:30:16,896	[INFO]	206-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:30:16,907	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:30:16,907	[INFO]	206-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:30:16,917	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:30:16,917	[INFO]	206-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:30:16,927	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:30:16,927	[INFO]	206-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:30:16,949	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:30:16,949	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:30:16,949	[INFO]	207-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:30:16,959	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:31:52,253	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:31:52,254	[INFO]	207-2   RUN_TIMEOUT           None  [2 edit(s)]       
2023-08-05 10:31:52,267	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:31:52,267	[INFO]	207-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:31:52,278	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:31:52,278	[INFO]	207-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:31:52,287	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:31:52,287	[INFO]	207-5   RUN_TIMEOUT           None  [2 edit(s)]       
2023-08-05 10:31:52,297	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:31:52,298	[INFO]	207-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:31:52,308	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:31:52,308	[INFO]	207-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:31:52,319	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:31:52,319	[INFO]	207-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:31:52,330	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:31:52,330	[INFO]	207-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:33:27,544	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 160), ('core/Solver.cc.xml', 'stmt', 158))
2023-08-05 10:33:27,545	[INFO]	207-10  RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 10:33:27,568	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:33:27,569	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:33:27,569	[INFO]	208-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:33:27,579	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:33:28,041	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 179), ('core/Solver.cc.xml', 'stmt', 65))
2023-08-05 10:33:28,041	[INFO]	208-2   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:35:03,381	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 318), ('core/Solver.cc.xml', 'stmt', 333))
2023-08-05 10:35:03,382	[INFO]	208-3   RUN_TIMEOUT           None  [5 edit(s)]       
2023-08-05 10:35:03,399	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:35:03,399	[INFO]	208-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,603	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,603	[INFO]	208-5   RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 10:36:38,617	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,617	[INFO]	208-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,628	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,628	[INFO]	208-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,639	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,639	[INFO]	208-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,650	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,650	[INFO]	208-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,661	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,661	[INFO]	208-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,685	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:36:38,685	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,685	[INFO]	209-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,696	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:36:38,706	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,707	[INFO]	209-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,717	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,717	[INFO]	209-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,728	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,728	[INFO]	209-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,739	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,739	[INFO]	209-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,750	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,750	[INFO]	209-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,761	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,761	[INFO]	209-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,772	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,772	[INFO]	209-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,783	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,783	[INFO]	209-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,793	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,793	[INFO]	209-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,815	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:36:38,816	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,816	[INFO]	210-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,826	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:36:38,838	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,838	[INFO]	210-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,849	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,849	[INFO]	210-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,859	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,860	[INFO]	210-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,870	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,870	[INFO]	210-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,880	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,880	[INFO]	210-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,891	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,891	[INFO]	210-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,902	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,902	[INFO]	210-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,913	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,913	[INFO]	210-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,924	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,924	[INFO]	210-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,947	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:36:38,947	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,948	[INFO]	211-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,958	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:36:38,970	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,970	[INFO]	211-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,981	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,981	[INFO]	211-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:38,992	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:38,992	[INFO]	211-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,003	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,003	[INFO]	211-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,016	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,016	[INFO]	211-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,028	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,028	[INFO]	211-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,039	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,039	[INFO]	211-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,050	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,050	[INFO]	211-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,060	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,060	[INFO]	211-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,083	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:36:39,083	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,083	[INFO]	212-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,094	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:36:39,104	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,104	[INFO]	212-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:36:39,114	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:36:39,115	[INFO]	212-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,051	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 308))
2023-08-05 10:37:32,052	[INFO]	212-4   SUCCESS               83635983790 (57.82%) [5 edit(s)] 
2023-08-05 10:37:32,065	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,065	[INFO]	212-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,075	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,076	[INFO]	212-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,086	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,087	[INFO]	212-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,097	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,097	[INFO]	212-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,108	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,108	[INFO]	212-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,118	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,118	[INFO]	212-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,129	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,130	[INFO]	213-1   RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 10:37:32,150	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:37:32,151	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,151	[INFO]	213-2   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,169	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:37:32,179	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,180	[INFO]	213-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,190	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,190	[INFO]	213-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,200	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,200	[INFO]	213-5   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,211	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,211	[INFO]	213-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,221	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,221	[INFO]	213-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,231	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,231	[INFO]	213-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,242	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,242	[INFO]	213-9   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,252	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,252	[INFO]	213-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,274	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:37:32,274	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,274	[INFO]	214-1   SUCCESS              +83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,284	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:37:32,294	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,294	[INFO]	214-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,304	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,304	[INFO]	214-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,314	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,314	[INFO]	214-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,752	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 256))
2023-08-05 10:37:32,752	[INFO]	214-5   COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:37:32,764	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,764	[INFO]	214-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,775	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,775	[INFO]	214-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:37:32,785	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:37:32,786	[INFO]	214-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,013	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:38:24,014	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,014	[INFO]	214-9   SUCCESS              *82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,027	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:38:24,039	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:38:24,040	[INFO]	214-10  SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,068	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:38:24,069	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,069	[INFO]	215-1   SUCCESS              +82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,081	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:38:24,092	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:38:24,092	[INFO]	215-2   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,103	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:38:24,103	[INFO]	215-3   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,114	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:38:24,114	[INFO]	215-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,126	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,126	[INFO]	215-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,137	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:38:24,137	[INFO]	215-6   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,147	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:38:24,148	[INFO]	215-7   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,158	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:38:24,158	[INFO]	215-8   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,171	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 486), ('core/Solver.cc.xml', 'stmt', 114))
2023-08-05 10:38:24,171	[INFO]	215-9   SUCCESS               83630806639 (57.82%) [5 edit(s)] 
2023-08-05 10:38:24,182	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,182	[INFO]	215-10  SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,206	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:38:24,206	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,206	[INFO]	216-1   SUCCESS              +82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,217	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:38:24,228	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,228	[INFO]	216-2   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,239	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,239	[INFO]	216-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,250	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:38:24,250	[INFO]	216-4   SUCCESS               83630806639 (57.82%) [4 edit(s)] 
2023-08-05 10:38:24,261	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,261	[INFO]	216-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,272	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,272	[INFO]	216-6   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,283	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,283	[INFO]	216-7   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:38:24,294	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:38:24,294	[INFO]	216-8   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:39:59,507	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:39:59,508	[INFO]	216-9   RUN_TIMEOUT           None  [4 edit(s)]       
2023-08-05 10:40:02,611	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 279), ('core/Solver.cc.xml', 'stmt', 261))
2023-08-05 10:40:02,612	[INFO]	216-10  RUN_CODE_ERROR        None  [3 edit(s)]       
2023-08-05 10:40:02,646	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:40:02,646	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:40:02,646	[INFO]	217-1   SUCCESS              +82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:40:02,661	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:40:02,676	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:40:02,676	[INFO]	217-2   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:40:02,691	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:40:02,692	[INFO]	217-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:40:02,707	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:40:02,708	[INFO]	217-4   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:40:02,723	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:40:02,723	[INFO]	217-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:40:02,739	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:40:02,739	[INFO]	217-6   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:41:37,970	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:41:37,971	[INFO]	217-7   RUN_TIMEOUT           None  [3 edit(s)]       
2023-08-05 10:41:37,986	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:41:37,986	[INFO]	217-8   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:41:37,998	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:41:37,999	[INFO]	217-9   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:41:38,009	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:41:38,010	[INFO]	217-10  SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:41:38,033	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:41:38,033	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:41:38,033	[INFO]	218-1   SUCCESS              +82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:41:38,044	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:41:38,055	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:41:38,055	[INFO]	218-2   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:41:38,066	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:41:38,066	[INFO]	218-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:48,881	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:48,881	[INFO]	218-4   SUCCESS               117096952728 (80.95%) [4 edit(s)] 
2023-08-05 10:42:48,895	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:48,896	[INFO]	218-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:48,909	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:48,909	[INFO]	218-6   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:48,922	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:48,922	[INFO]	218-7   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:48,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:48,936	[INFO]	218-8   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:48,950	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:48,950	[INFO]	218-9   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:48,961	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:48,961	[INFO]	218-10  SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:48,986	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:42:48,986	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:48,986	[INFO]	219-1   SUCCESS              +82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:48,997	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:42:49,008	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:49,008	[INFO]	219-2   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:49,019	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:49,019	[INFO]	219-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:49,030	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:49,031	[INFO]	219-4   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:49,042	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:49,042	[INFO]	219-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:49,053	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:42:49,053	[INFO]	219-6   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:42:49,063	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77))
2023-08-05 10:42:49,063	[INFO]	219-7   SUCCESS               118637592386 (82.02%) [3 edit(s)] 
2023-08-05 10:43:40,274	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 186), ('core/Solver.cc.xml', 'stmt', 199))
2023-08-05 10:43:40,275	[INFO]	219-8   SUCCESS               82522698669 (57.05%) [6 edit(s)] 
2023-08-05 10:43:40,291	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:43:40,291	[INFO]	219-9   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:43:40,303	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:43:40,303	[INFO]	219-10  SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:43:40,327	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:43:40,327	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:43:40,327	[INFO]	220-1   SUCCESS              +82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:43:40,338	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:44:50,765	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 652), ('core/Solver.cc.xml', 'stmt', 449))
2023-08-05 10:44:50,766	[INFO]	220-2   SUCCESS               117092711875 (80.95%) [5 edit(s)] 
2023-08-05 10:44:50,785	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,785	[INFO]	220-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,798	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,798	[INFO]	220-4   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,810	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,810	[INFO]	220-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,822	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,822	[INFO]	220-6   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,834	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,834	[INFO]	220-7   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,845	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,845	[INFO]	220-8   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,857	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,857	[INFO]	220-9   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,869	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,869	[INFO]	220-10  SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,882	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,882	[INFO]	221-1   RUN_TIMEOUT           None  [4 edit(s)]       
2023-08-05 10:44:50,905	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:44:50,905	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,905	[INFO]	221-2   SUCCESS              +82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,917	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;

2023-08-05 10:44:50,929	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,929	[INFO]	221-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,940	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,941	[INFO]	221-4   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:44:50,953	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:44:50,954	[INFO]	221-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:43,880	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:45:43,881	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:45:43,881	[INFO]	221-6   SUCCESS              *82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:45:43,894	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:45:43,905	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:43,906	[INFO]	221-7   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:43,917	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:43,918	[INFO]	221-8   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:43,929	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:43,929	[INFO]	221-9   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:43,941	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:43,942	[INFO]	221-10  SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:43,971	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:45:43,971	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:45:43,971	[INFO]	222-1   SUCCESS              +82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:45:43,984	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:45:43,997	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:43,997	[INFO]	222-2   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:44,009	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:44,009	[INFO]	222-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:44,027	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:44,027	[INFO]	222-4   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:44,040	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:44,040	[INFO]	222-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:44,458	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 317), ('core/Solver.cc.xml', 'stmt', 359))
2023-08-05 10:45:44,459	[INFO]	222-6   COMPILE_CODE_ERROR    None  [5 edit(s)]       
2023-08-05 10:45:44,472	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:44,472	[INFO]	222-7   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:45:44,484	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:45:44,484	[INFO]	222-8   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:46:56,849	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:46:56,849	[INFO]	222-9   SUCCESS               117095724531 (80.95%) [5 edit(s)] 
2023-08-05 10:46:56,865	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:46:56,865	[INFO]	222-10  SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:46:56,894	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:46:56,895	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:46:56,895	[INFO]	223-1   SUCCESS              +82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:46:56,908	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:46:56,921	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:46:56,921	[INFO]	223-2   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:46:56,933	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:46:56,933	[INFO]	223-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:47:00,208	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 463))
2023-08-05 10:47:00,209	[INFO]	223-4   RUN_CODE_ERROR        None  [6 edit(s)]       
2023-08-05 10:47:00,232	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:47:00,233	[INFO]	223-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:47:00,245	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:47:00,245	[INFO]	223-6   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:47:00,257	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:47:00,257	[INFO]	223-7   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:48:35,340	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 175), ('core/Solver.cc.xml', 'stmt', 39))
2023-08-05 10:48:35,340	[INFO]	223-8   RUN_TIMEOUT           None  [5 edit(s)]       
2023-08-05 10:48:35,354	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:48:35,354	[INFO]	223-9   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:48:35,818	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 371))
2023-08-05 10:48:35,819	[INFO]	223-10  COMPILE_CODE_ERROR    None  [4 edit(s)]       
2023-08-05 10:48:35,849	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:48:35,849	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:48:35,849	[INFO]	224-1   SUCCESS              +82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:48:35,861	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:48:35,874	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:48:35,874	[INFO]	224-2   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:48:35,886	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:48:35,886	[INFO]	224-3   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:48:35,898	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:48:35,899	[INFO]	224-4   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:48:35,911	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:48:35,912	[INFO]	224-5   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:48:35,924	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:48:35,924	[INFO]	224-6   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:48:35,935	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:48:35,935	[INFO]	224-7   SUCCESS               82520479654 (57.05%) [5 edit(s)] 
2023-08-05 10:48:35,947	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:48:35,947	[INFO]	224-8   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:48:36,381	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 392), ('core/Solver.cc.xml', 'stmt', 46))
2023-08-05 10:48:36,381	[INFO]	224-9   COMPILE_CODE_ERROR    None  [6 edit(s)]       
2023-08-05 10:48:36,397	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:48:36,397	[INFO]	224-10  SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:48:36,424	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:48:36,424	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:48:36,424	[INFO]	225-1   SUCCESS              +82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:48:36,436	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:48:36,448	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:48:36,449	[INFO]	225-2   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:49:29,342	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 398))
2023-08-05 10:49:29,342	[INFO]	225-3   SUCCESS               82530849902 (57.06%) [7 edit(s)] 
2023-08-05 10:49:29,356	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:49:29,357	[INFO]	225-4   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:49:29,370	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:49:29,370	[INFO]	225-5   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:49:29,383	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:49:29,383	[INFO]	225-6   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:49:29,793	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 434))
2023-08-05 10:49:29,794	[INFO]	225-7   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 10:49:29,810	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:49:29,810	[INFO]	225-8   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:49:29,823	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:49:29,824	[INFO]	225-9   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:49:29,836	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:49:29,837	[INFO]	225-10  SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:49:29,865	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:49:29,865	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:49:29,865	[INFO]	226-1   SUCCESS              +82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:49:29,878	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -571,7 +570,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:49:29,891	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:49:29,891	[INFO]	226-2   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:50:22,802	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +963,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +983,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:50:22,802	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:50:22,803	[INFO]	226-3   SUCCESS              *82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:50:22,815	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +963,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +983,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:50:22,827	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:50:22,827	[INFO]	226-4   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:50:22,840	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:50:22,840	[INFO]	226-5   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:50:22,855	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:50:22,855	[INFO]	226-6   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:50:22,871	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:50:22,871	[INFO]	226-7   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:50:22,885	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:50:22,885	[INFO]	226-8   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:50:22,899	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:50:22,899	[INFO]	226-9   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:51:13,293	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 486), ('core/Solver.cc.xml', 'stmt', 473))
2023-08-05 10:51:13,294	[INFO]	226-10  SUCCESS               82528983552 (57.05%) [5 edit(s)] 
2023-08-05 10:52:06,051	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +982,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:52:06,051	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:52:06,052	[INFO]	227-1   SUCCESS              +83612837453 (57.8%) [6 edit(s)] 
2023-08-05 10:52:06,065	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -251,8 +251,7 @@
 
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c))/*auto*/{ vardata[var(c[0])].reason = CRef_Undef;
-}/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -712,7 +711,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +756,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +831,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +962,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +982,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:52:57,808	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +963,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:52:57,809	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:52:57,809	[INFO]	227-2   SUCCESS              +82530038228 (57.06%) [6 edit(s)] 
2023-08-05 10:52:57,821	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +963,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 10:52:57,846	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +963,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +983,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:52:57,846	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:52:57,846	[INFO]	227-3   SUCCESS              +82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:52:57,858	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +963,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +983,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:52:57,871	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:52:57,871	[INFO]	227-4   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:52:57,883	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:52:57,883	[INFO]	227-5   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:52:57,896	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:52:57,896	[INFO]	227-6   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:52:57,908	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:52:57,908	[INFO]	227-7   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:52:57,921	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:52:57,921	[INFO]	227-8   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:52:57,933	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:52:57,933	[INFO]	227-9   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:53:01,076	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 139))
2023-08-05 10:53:01,077	[INFO]	227-10  RUN_CODE_ERROR        None  [7 edit(s)]       
2023-08-05 10:53:01,106	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +963,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +983,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:53:01,107	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:53:01,107	[INFO]	228-1   SUCCESS              +82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:53:01,129	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +963,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +983,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:53:01,141	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:53:01,141	[INFO]	228-2   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:53:01,154	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:53:01,154	[INFO]	228-3   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:53:01,166	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:53:01,166	[INFO]	228-4   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:53:01,178	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:53:01,179	[INFO]	228-5   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:53:01,191	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:53:01,191	[INFO]	228-6   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:53:01,204	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:53:01,204	[INFO]	228-7   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:53:01,217	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:53:01,217	[INFO]	228-8   SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:53:53,425	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 459), ('core/Solver.cc.xml', 'stmt', 323))
2023-08-05 10:53:53,426	[INFO]	228-9   SUCCESS               82533038589 (57.06%) [7 edit(s)] 
2023-08-05 10:53:53,441	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:53:53,442	[INFO]	228-10  SUCCESS               82506804500 (57.04%) [6 edit(s)] 
2023-08-05 10:54:45,261	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:54:45,262	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:54:45,262	[INFO]	229-1   SUCCESS              *82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:54:45,276	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:54:45,288	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:54:45,288	[INFO]	229-2   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:54:45,301	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:54:45,301	[INFO]	229-3   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:54:45,313	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:54:45,313	[INFO]	229-4   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:55:37,824	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:55:37,825	[INFO]	229-5   SUCCESS               82579550426 (57.09%) [5 edit(s)] 
2023-08-05 10:55:38,279	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 379), ('core/Solver.cc.xml', 'stmt', 418))
2023-08-05 10:55:38,279	[INFO]	229-6   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 10:55:38,294	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:55:38,294	[INFO]	229-7   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:57:05,357	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:57:05,358	[INFO]	229-8   SUCCESS               142656465973 (98.62%) [3 edit(s)] 
2023-08-05 10:57:05,373	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:57:05,373	[INFO]	229-9   SUCCESS               82530038228 (57.06%) [6 edit(s)] 
2023-08-05 10:57:56,609	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:57:56,610	[INFO]	229-10  SUCCESS               82522605615 (57.05%) [6 edit(s)] 
2023-08-05 10:57:56,646	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:57:56,647	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:57:56,647	[INFO]	230-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:57:56,663	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:57:56,677	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:57:56,677	[INFO]	230-2   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:57:56,690	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:57:56,690	[INFO]	230-3   SUCCESS               82495987162 (57.03%) [6 edit(s)] 
2023-08-05 10:57:56,706	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:57:56,706	[INFO]	230-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:57:56,719	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:57:56,719	[INFO]	230-5   SUCCESS               82530038228 (57.06%) [6 edit(s)] 
2023-08-05 10:57:56,733	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:57:56,733	[INFO]	230-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:48,868	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 10:58:48,869	[INFO]	230-7   SUCCESS               82558193687 (57.07%) [6 edit(s)] 
2023-08-05 10:58:48,883	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 77)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 10:58:48,883	[INFO]	230-8   SUCCESS               117095724531 (80.95%) [5 edit(s)] 
2023-08-05 10:58:48,898	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:48,898	[INFO]	230-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:48,912	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:48,912	[INFO]	230-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:48,944	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:58:48,944	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:48,944	[INFO]	231-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:48,958	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:58:48,972	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:48,973	[INFO]	231-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:48,987	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:48,987	[INFO]	231-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:49,002	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:49,002	[INFO]	231-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:49,016	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:49,016	[INFO]	231-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:49,031	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:49,031	[INFO]	231-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:52,198	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 36))
2023-08-05 10:58:52,199	[INFO]	231-7   RUN_CODE_ERROR        None  [7 edit(s)]       
2023-08-05 10:58:52,215	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:52,216	[INFO]	231-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:52,231	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:52,231	[INFO]	231-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:52,246	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:52,246	[INFO]	231-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:52,278	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:58:52,279	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:52,279	[INFO]	232-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:52,294	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 10:58:52,309	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:52,310	[INFO]	232-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:52,324	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:52,325	[INFO]	232-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:52,339	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:52,340	[INFO]	232-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 10:58:52,767	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 456), ('core/Solver.cc.xml', 'stmt', 232))
2023-08-05 10:58:52,768	[INFO]	232-5   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 10:58:52,784	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 10:58:52,784	[INFO]	232-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:02,901	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:02,901	[INFO]	232-7   SUCCESS               117119276467 (80.97%) [5 edit(s)] 
2023-08-05 11:00:02,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:02,925	[INFO]	232-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:02,944	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:02,945	[INFO]	232-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:02,963	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:02,963	[INFO]	232-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,008	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:00:03,009	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,009	[INFO]	233-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,031	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:00:03,065	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,066	[INFO]	233-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,091	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,091	[INFO]	233-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,111	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,111	[INFO]	233-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,576	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 569), ('core/Solver.cc.xml', 'stmt', 75))
2023-08-05 11:00:03,576	[INFO]	233-5   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:00:03,592	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,592	[INFO]	233-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,607	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,607	[INFO]	233-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,622	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,622	[INFO]	233-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,636	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,636	[INFO]	233-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,650	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,651	[INFO]	233-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,682	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:00:03,682	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:03,683	[INFO]	234-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:00:03,696	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:00:57,278	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 381), ('core/Solver.cc.xml', 'stmt', 472))
2023-08-05 11:00:57,279	[INFO]	234-2   SUCCESS               82512014696 (57.04%) [8 edit(s)] 
2023-08-05 11:00:57,299	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:00:57,299	[INFO]	234-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:02:32,557	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 11:02:32,558	[INFO]	234-4   RUN_TIMEOUT           None  [4 edit(s)]       
2023-08-05 11:02:32,574	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:02:32,574	[INFO]	234-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:02:32,589	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:02:32,589	[INFO]	234-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:02:32,604	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:02:32,604	[INFO]	234-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:02:32,618	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:02:32,619	[INFO]	234-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:02:32,633	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:02:32,633	[INFO]	234-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:02:32,648	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:02:32,648	[INFO]	234-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:02:32,680	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:02:32,680	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:02:32,680	[INFO]	235-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:02:32,694	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:02:33,195	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 275), ('core/Solver.cc.xml', 'stmt', 100))
2023-08-05 11:02:33,195	[INFO]	235-2   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:02:33,217	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:02:33,217	[INFO]	235-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,699	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,700	[INFO]	235-4   SUCCESS               117130480460 (80.98%) [5 edit(s)] 
2023-08-05 11:03:44,717	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,717	[INFO]	235-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,732	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,732	[INFO]	235-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,746	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,746	[INFO]	235-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,761	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,761	[INFO]	235-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,775	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,775	[INFO]	235-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,790	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,790	[INFO]	235-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,822	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:03:44,823	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,823	[INFO]	236-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,837	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:03:44,850	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,851	[INFO]	236-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,865	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,865	[INFO]	236-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,879	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,879	[INFO]	236-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,893	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,893	[INFO]	236-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,907	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,907	[INFO]	236-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,921	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,921	[INFO]	236-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:03:44,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:03:44,936	[INFO]	236-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:04:37,625	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:04:37,626	[INFO]	236-9   SUCCESS               82530401347 (57.06%) [6 edit(s)] 
2023-08-05 11:04:37,648	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:04:37,648	[INFO]	236-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:04:37,680	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:04:37,681	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:04:37,681	[INFO]	237-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:04:37,695	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:04:37,709	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:04:37,709	[INFO]	237-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:04:40,849	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 97), ('core/Solver.cc.xml', 'stmt', 84))
2023-08-05 11:04:40,850	[INFO]	237-3   RUN_CODE_ERROR        None  [8 edit(s)]       
2023-08-05 11:04:40,866	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:04:40,866	[INFO]	237-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:04:40,880	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:04:40,880	[INFO]	237-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,100	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,100	[INFO]	237-6   SUCCESS               117111591929 (80.96%) [6 edit(s)] 
2023-08-05 11:05:52,124	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,124	[INFO]	237-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,145	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,145	[INFO]	237-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,165	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,165	[INFO]	237-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,183	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,183	[INFO]	237-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,217	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:05:52,217	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,217	[INFO]	238-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,232	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:05:52,703	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 252), ('core/Solver.cc.xml', 'stmt', 96))
2023-08-05 11:05:52,703	[INFO]	238-2   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:05:52,725	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,725	[INFO]	238-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,751	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,751	[INFO]	238-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,767	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,768	[INFO]	238-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:52,782	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:52,782	[INFO]	238-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:53,207	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 32), ('core/Solver.cc.xml', 'stmt', 271))
2023-08-05 11:05:53,207	[INFO]	238-7   COMPILE_CODE_ERROR    None  [5 edit(s)]       
2023-08-05 11:05:53,231	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:53,231	[INFO]	238-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:05:53,251	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:05:53,252	[INFO]	238-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:45,871	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 269), ('core/Solver.cc.xml', 'stmt', 22))
2023-08-05 11:06:45,871	[INFO]	238-10  SUCCESS               82525237283 (57.05%) [8 edit(s)] 
2023-08-05 11:06:45,905	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:06:45,905	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:45,906	[INFO]	239-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:45,921	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:06:45,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:45,936	[INFO]	239-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:45,951	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:45,951	[INFO]	239-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:45,966	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:45,966	[INFO]	239-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:45,980	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:45,981	[INFO]	239-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:45,995	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:45,995	[INFO]	239-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:46,010	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:46,010	[INFO]	239-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:46,024	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:46,025	[INFO]	239-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:46,039	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:46,040	[INFO]	239-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:46,054	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:46,055	[INFO]	239-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:46,478	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 643), ('core/Solver.cc.xml', 'stmt', 319))
2023-08-05 11:06:46,479	[INFO]	240-1   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:06:46,509	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:06:46,509	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:46,510	[INFO]	240-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:46,524	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:06:46,539	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:46,539	[INFO]	240-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:46,553	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:46,554	[INFO]	240-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,000	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 114), ('core/Solver.cc.xml', 'stmt', 328))
2023-08-05 11:06:47,000	[INFO]	240-5   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:06:47,018	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,018	[INFO]	240-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,033	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,033	[INFO]	240-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,048	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,048	[INFO]	240-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,062	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,063	[INFO]	240-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,077	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,077	[INFO]	240-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,110	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:06:47,110	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,111	[INFO]	241-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,124	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:06:47,572	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 156), ('core/Solver.cc.xml', 'stmt', 277))
2023-08-05 11:06:47,573	[INFO]	241-2   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:06:47,590	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,590	[INFO]	241-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,605	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,605	[INFO]	241-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,620	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,620	[INFO]	241-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:06:47,634	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:06:47,634	[INFO]	241-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,584	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 158), ('core/Solver.cc.xml', 'stmt', 299))
2023-08-05 11:07:40,585	[INFO]	241-7   SUCCESS               83663936252 (57.84%) [7 edit(s)] 
2023-08-05 11:07:40,602	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,602	[INFO]	241-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,616	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,616	[INFO]	241-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,630	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,630	[INFO]	241-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,663	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:40,663	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,663	[INFO]	242-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,677	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:40,691	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,691	[INFO]	242-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,705	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,705	[INFO]	242-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,719	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,720	[INFO]	242-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,735	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,735	[INFO]	242-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,750	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,750	[INFO]	242-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,765	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,765	[INFO]	242-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,780	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,780	[INFO]	242-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,795	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,795	[INFO]	242-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:40,810	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:40,810	[INFO]	242-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,248	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 377), ('core/Solver.cc.xml', 'stmt', 88))
2023-08-05 11:07:41,248	[INFO]	243-1   COMPILE_CODE_ERROR    None  [6 edit(s)]       
2023-08-05 11:07:41,279	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:41,279	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,280	[INFO]	243-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,293	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:41,307	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,307	[INFO]	243-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,322	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,322	[INFO]	243-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,337	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,338	[INFO]	243-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,353	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,353	[INFO]	243-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,374	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,375	[INFO]	243-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,389	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,389	[INFO]	243-8   SUCCESS               117111591929 (80.96%) [6 edit(s)] 
2023-08-05 11:07:41,404	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,404	[INFO]	243-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,419	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,419	[INFO]	243-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,453	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:41,453	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,453	[INFO]	244-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,468	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:41,482	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,482	[INFO]	244-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,497	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,497	[INFO]	244-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,511	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,511	[INFO]	244-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,525	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,525	[INFO]	244-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:41,539	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:41,539	[INFO]	244-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:44,633	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 318), ('core/Solver.cc.xml', 'stmt', 320))
2023-08-05 11:07:44,634	[INFO]	244-7   RUN_CODE_ERROR        None  [6 edit(s)]       
2023-08-05 11:07:44,650	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:44,650	[INFO]	244-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:44,664	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:44,664	[INFO]	244-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:44,679	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:44,679	[INFO]	244-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:44,711	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:44,711	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:44,711	[INFO]	245-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:44,725	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:44,739	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350))
2023-08-05 11:07:44,739	[INFO]	245-2   SUCCESS               82491620049 (57.03%) [8 edit(s)] 
2023-08-05 11:07:45,177	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 181), ('core/Solver.cc.xml', 'stmt', 55))
2023-08-05 11:07:45,178	[INFO]	245-3   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:07:45,200	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,201	[INFO]	245-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:45,219	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,219	[INFO]	245-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:45,237	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,237	[INFO]	245-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:45,253	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,253	[INFO]	245-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:45,267	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,267	[INFO]	245-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:45,281	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,281	[INFO]	245-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:45,295	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,295	[INFO]	245-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:45,327	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:45,327	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,327	[INFO]	246-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:07:45,341	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:07:45,356	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:07:45,356	[INFO]	246-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:37,971	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:37,972	[INFO]	246-3   SUCCESS               83629390622 (57.82%) [6 edit(s)] 
2023-08-05 11:08:37,989	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:37,989	[INFO]	246-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:38,004	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:38,004	[INFO]	246-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:38,019	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350))
2023-08-05 11:08:38,019	[INFO]	246-6   SUCCESS               82491620049 (57.03%) [8 edit(s)] 
2023-08-05 11:08:38,033	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:38,033	[INFO]	246-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:38,048	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:38,048	[INFO]	246-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:38,063	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:38,063	[INFO]	246-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:38,078	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:38,078	[INFO]	246-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:38,109	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:08:38,109	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:38,110	[INFO]	247-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:38,124	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:08:38,138	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:38,138	[INFO]	247-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:08:38,153	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:08:38,153	[INFO]	247-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,231	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 350)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 646), ('core/Solver.cc.xml', 'stmt', 29))
2023-08-05 11:10:13,232	[INFO]	247-4   RUN_TIMEOUT           None  [8 edit(s)]       
2023-08-05 11:10:13,252	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,252	[INFO]	247-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,266	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,266	[INFO]	247-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,280	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,280	[INFO]	247-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,294	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,294	[INFO]	247-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,307	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,308	[INFO]	247-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,321	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,322	[INFO]	247-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,353	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:13,353	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,353	[INFO]	248-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,367	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:13,381	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,381	[INFO]	248-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,395	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,395	[INFO]	248-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,409	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,409	[INFO]	248-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,423	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,424	[INFO]	248-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,438	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,438	[INFO]	248-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,452	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,452	[INFO]	248-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,466	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,466	[INFO]	248-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,480	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,480	[INFO]	248-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,494	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,495	[INFO]	248-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,532	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:13,532	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,532	[INFO]	249-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,546	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:13,560	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,560	[INFO]	249-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,574	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,575	[INFO]	249-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:13,589	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:13,589	[INFO]	249-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,807	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 166))
2023-08-05 11:10:16,807	[INFO]	249-5   RUN_CODE_ERROR        None  [8 edit(s)]       
2023-08-05 11:10:16,824	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,824	[INFO]	249-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,839	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,839	[INFO]	249-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,853	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,854	[INFO]	249-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,869	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,869	[INFO]	249-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,884	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,884	[INFO]	249-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,916	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:16,916	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,916	[INFO]	250-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,930	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:16,944	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,945	[INFO]	250-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,959	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,959	[INFO]	250-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:16,973	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:16,973	[INFO]	250-4   SUCCESS               83629390622 (57.82%) [6 edit(s)] 
2023-08-05 11:10:17,381	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 220), ('core/Solver.cc.xml', 'stmt', 447))
2023-08-05 11:10:17,382	[INFO]	250-5   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:10:17,400	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:17,401	[INFO]	250-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:17,416	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:17,416	[INFO]	250-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:17,432	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:17,432	[INFO]	250-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:17,446	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:17,447	[INFO]	250-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:17,461	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:17,461	[INFO]	250-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:20,609	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 79))
2023-08-05 11:10:20,610	[INFO]	251-1   RUN_CODE_ERROR        None  [7 edit(s)]       
2023-08-05 11:10:20,641	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:20,641	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:20,641	[INFO]	251-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:20,656	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:20,670	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:20,670	[INFO]	251-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:20,685	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:20,685	[INFO]	251-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:20,700	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:20,700	[INFO]	251-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:20,714	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:20,715	[INFO]	251-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:20,729	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:20,729	[INFO]	251-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:20,744	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:20,744	[INFO]	251-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:21,157	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 349), ('core/Solver.cc.xml', 'stmt', 326))
2023-08-05 11:10:21,157	[INFO]	251-9   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:10:21,175	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:21,175	[INFO]	251-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:21,210	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:21,210	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:21,210	[INFO]	252-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:10:21,225	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:10:21,240	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:10:21,240	[INFO]	252-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,780	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 208), ('core/Solver.cc.xml', 'stmt', 365))
2023-08-05 11:11:13,781	[INFO]	252-3   SUCCESS               82495165520 (57.03%) [8 edit(s)] 
2023-08-05 11:11:13,799	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,799	[INFO]	252-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,816	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,816	[INFO]	252-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,832	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,832	[INFO]	252-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,848	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,849	[INFO]	252-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,864	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,864	[INFO]	252-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,879	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,879	[INFO]	252-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,894	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,894	[INFO]	252-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,926	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:11:13,927	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,927	[INFO]	253-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,941	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:11:13,955	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,955	[INFO]	253-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,969	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,969	[INFO]	253-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,983	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,984	[INFO]	253-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:13,999	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:13,999	[INFO]	253-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:11:14,013	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:11:14,014	[INFO]	253-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:12:05,718	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 59))
2023-08-05 11:12:05,718	[INFO]	253-7   SUCCESS               82539121034 (57.06%) [8 edit(s)] 
2023-08-05 11:13:37,414	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 326))
2023-08-05 11:13:37,415	[INFO]	253-8   SUCCESS               149681852232 (103.48%) [6 edit(s)] 
2023-08-05 11:13:37,873	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 37), ('core/Solver.cc.xml', 'stmt', 187))
2023-08-05 11:13:37,873	[INFO]	253-9   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:13:37,887	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 11:13:37,888	[INFO]	253-10  SUCCESS               82530038228 (57.06%) [5 edit(s)] 
2023-08-05 11:15:13,040	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:15:13,041	[INFO]	254-1   RUN_TIMEOUT           None  [6 edit(s)]       
2023-08-05 11:15:13,083	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:15:13,083	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:15:13,083	[INFO]	254-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:15:13,099	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:16:04,663	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 160), ('core/Solver.cc.xml', 'stmt', 403))
2023-08-05 11:16:04,664	[INFO]	254-3   SUCCESS               82561453241 (57.08%) [8 edit(s)] 
2023-08-05 11:16:04,680	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:16:04,680	[INFO]	254-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:16:04,695	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:16:04,695	[INFO]	254-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:16:04,709	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:16:04,709	[INFO]	254-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:16:04,724	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:16:04,724	[INFO]	254-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:16:04,738	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:16:04,738	[INFO]	254-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:16:04,752	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:16:04,752	[INFO]	254-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:16:04,766	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:16:04,767	[INFO]	254-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:16:57,367	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -943,6 +933,8 @@
 
     solves++;
 
+    lS = 0, LQ.clear();
+
     max_learnts               = nClauses() * learntsize_factor;
     learntsize_adjust_confl   = learntsize_adjust_start_confl;
     learntsize_adjust_cnt     = (int)learntsize_adjust_confl;
@@ -973,8 +965,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 11:16:57,367	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 530), ('core/Solver.cc.xml', 'stmt', 355))
2023-08-05 11:16:57,368	[INFO]	255-1   SUCCESS              +82515514029 (57.05%) [6 edit(s)] 
2023-08-05 11:16:57,381	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -571,7 +571,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +712,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +757,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +832,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -943,6 +933,8 @@
 
     solves++;
 
+    lS = 0, LQ.clear();
+
     max_learnts               = nClauses() * learntsize_factor;
     learntsize_adjust_confl   = learntsize_adjust_start_confl;
     learntsize_adjust_cnt     = (int)learntsize_adjust_confl;
@@ -973,8 +965,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/

2023-08-05 11:17:49,206	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 11:17:49,207	[INFO]	255-2   SUCCESS               82595030113 (57.1%) [5 edit(s)] 
2023-08-05 11:17:49,238	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:17:49,238	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:49,239	[INFO]	255-3   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:17:49,254	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:17:52,713	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 136))
2023-08-05 11:17:52,714	[INFO]	255-4   RUN_CODE_ERROR        None  [8 edit(s)]       
2023-08-05 11:17:52,737	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,738	[INFO]	255-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:17:52,757	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,758	[INFO]	255-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:17:52,774	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,775	[INFO]	255-7   RUN_TIMEOUT           None  [6 edit(s)]       
2023-08-05 11:17:52,792	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,793	[INFO]	255-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:17:52,809	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,810	[INFO]	255-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:17:52,825	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,825	[INFO]	255-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:17:52,856	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:17:52,856	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,856	[INFO]	256-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:17:52,871	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:17:52,885	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,885	[INFO]	256-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:17:52,900	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:17:52,900	[INFO]	256-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,017	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 124))
2023-08-05 11:19:28,018	[INFO]	256-4   RUN_TIMEOUT           None  [7 edit(s)]       
2023-08-05 11:19:28,040	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,040	[INFO]	256-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,062	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,062	[INFO]	256-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,082	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,082	[INFO]	256-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,101	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,101	[INFO]	256-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,118	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,118	[INFO]	256-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,135	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,135	[INFO]	256-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,180	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:19:28,180	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,181	[INFO]	257-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,196	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:19:28,219	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,220	[INFO]	257-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,236	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,236	[INFO]	257-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,690	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 155), ('core/Solver.cc.xml', 'stmt', 40))
2023-08-05 11:19:28,690	[INFO]	257-4   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:19:28,714	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,714	[INFO]	257-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,734	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,735	[INFO]	257-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,753	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,753	[INFO]	257-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,771	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,771	[INFO]	257-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,788	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,788	[INFO]	257-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,803	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,803	[INFO]	257-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,835	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:19:28,835	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:19:28,835	[INFO]	258-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:19:28,849	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:20:22,717	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 392))
2023-08-05 11:20:22,717	[INFO]	258-2   SUCCESS               82560006886 (57.08%) [8 edit(s)] 
2023-08-05 11:20:22,734	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:22,734	[INFO]	258-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:22,750	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:22,750	[INFO]	258-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,171	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 606), ('core/Solver.cc.xml', 'stmt', 462))
2023-08-05 11:20:23,172	[INFO]	258-5   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:20:23,189	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,189	[INFO]	258-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,204	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,204	[INFO]	258-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,219	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,219	[INFO]	258-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,234	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,234	[INFO]	258-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,250	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,250	[INFO]	258-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,284	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:20:23,284	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,284	[INFO]	259-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,309	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:20:23,324	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,324	[INFO]	259-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,340	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,340	[INFO]	259-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:20:23,354	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:20:23,354	[INFO]	259-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:21:15,832	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 302), ('core/Solver.cc.xml', 'stmt', 2))
2023-08-05 11:21:15,833	[INFO]	259-5   SUCCESS               82524105958 (57.05%) [8 edit(s)] 
2023-08-05 11:21:15,849	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:21:15,849	[INFO]	259-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:21:16,286	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 261))
2023-08-05 11:21:16,286	[INFO]	259-7   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:21:16,303	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:21:16,303	[INFO]	259-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:21:16,318	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:21:16,318	[INFO]	259-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:21:16,333	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:21:16,333	[INFO]	259-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:21:16,366	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:21:16,366	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:21:16,366	[INFO]	260-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:21:16,381	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:21:16,395	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:21:16,396	[INFO]	260-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:21:16,409	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:21:16,409	[INFO]	260-3   SUCCESS               117111591929 (80.96%) [6 edit(s)] 
2023-08-05 11:22:51,574	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 280))
2023-08-05 11:22:51,575	[INFO]	260-4   RUN_TIMEOUT           None  [8 edit(s)]       
2023-08-05 11:22:51,594	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:22:51,594	[INFO]	260-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:22:51,609	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:22:51,609	[INFO]	260-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:44,367	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 489), ('core/Solver.cc.xml', 'stmt', 382))
2023-08-05 11:23:44,368	[INFO]	260-7   SUCCESS               83634719825 (57.82%) [6 edit(s)] 
2023-08-05 11:23:44,384	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:44,384	[INFO]	260-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:44,399	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:44,399	[INFO]	260-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:44,414	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:44,414	[INFO]	260-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:44,450	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:23:44,450	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:44,450	[INFO]	261-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:44,464	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:23:44,478	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:44,478	[INFO]	261-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:44,934	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 223), ('core/Solver.cc.xml', 'stmt', 95))
2023-08-05 11:23:44,934	[INFO]	261-3   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:23:44,955	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:44,956	[INFO]	261-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:44,976	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:44,976	[INFO]	261-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:44,994	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:44,995	[INFO]	261-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:45,420	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 192), ('core/Solver.cc.xml', 'stmt', 323))
2023-08-05 11:23:45,421	[INFO]	261-7   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:23:45,437	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:45,438	[INFO]	261-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:45,452	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:45,453	[INFO]	261-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:23:45,468	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:23:45,468	[INFO]	261-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:24:38,072	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -261,7 +262,7 @@
 bool Solver::satisfied(const Clause& c) const {
     for (int i = 0; i < c.size(); i++)/*auto*/{
         if (value(c[i]) == l_True)/*auto*/{
-            return true;
+            
 }/*auto*/
 }/*auto*/
     return false; }
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:24:38,073	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 83))
2023-08-05 11:24:38,073	[INFO]	262-1   SUCCESS              +83466817288 (57.7%) [8 edit(s)] 
2023-08-05 11:24:38,089	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -261,7 +262,7 @@
 bool Solver::satisfied(const Clause& c) const {
     for (int i = 0; i < c.size(); i++)/*auto*/{
         if (value(c[i]) == l_True)/*auto*/{
-            return true;
+            
 }/*auto*/
 }/*auto*/
     return false; }
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:24:38,119	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:24:38,119	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:24:38,119	[INFO]	262-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:24:38,134	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:24:38,149	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:24:38,149	[INFO]	262-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:26:13,246	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 287))
2023-08-05 11:26:13,247	[INFO]	262-4   RUN_TIMEOUT           None  [7 edit(s)]       
2023-08-05 11:27:06,919	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:06,920	[INFO]	262-5   SUCCESS               82519186284 (57.05%) [6 edit(s)] 
2023-08-05 11:27:06,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:06,937	[INFO]	262-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:06,951	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:06,951	[INFO]	262-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:06,965	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:06,965	[INFO]	262-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:06,980	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:06,980	[INFO]	262-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:06,995	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:06,995	[INFO]	262-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,027	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:27:07,027	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,027	[INFO]	263-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,042	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:27:07,496	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 537), ('core/Solver.cc.xml', 'stmt', 460))
2023-08-05 11:27:07,497	[INFO]	263-2   COMPILE_CODE_ERROR    None  [6 edit(s)]       
2023-08-05 11:27:07,516	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,516	[INFO]	263-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,530	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,531	[INFO]	263-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,544	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,545	[INFO]	263-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,559	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,559	[INFO]	263-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,573	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,573	[INFO]	263-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,587	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,587	[INFO]	263-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,601	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,601	[INFO]	263-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,616	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,616	[INFO]	263-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,648	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:27:07,648	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,648	[INFO]	264-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,672	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:27:07,686	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,686	[INFO]	264-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,701	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,702	[INFO]	264-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:27:07,716	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:27:07,716	[INFO]	264-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:26,942	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 284), ('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 11:28:26,943	[INFO]	264-5   SUCCESS               134342383739 (92.87%) [8 edit(s)] 
2023-08-05 11:28:26,960	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:26,960	[INFO]	264-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:26,974	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:26,974	[INFO]	264-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:26,988	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:26,988	[INFO]	264-8   SUCCESS               117111591929 (80.96%) [6 edit(s)] 
2023-08-05 11:28:27,002	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,002	[INFO]	264-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,016	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,017	[INFO]	264-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,049	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:28:27,049	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,049	[INFO]	265-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,063	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:28:27,076	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,077	[INFO]	265-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,091	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,091	[INFO]	265-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,105	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,105	[INFO]	265-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,546	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 187), ('core/Solver.cc.xml', 'stmt', 379))
2023-08-05 11:28:27,547	[INFO]	265-5   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:28:27,562	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,563	[INFO]	265-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,577	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,577	[INFO]	265-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,591	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,591	[INFO]	265-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,605	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,605	[INFO]	265-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,619	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,619	[INFO]	265-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,652	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:28:27,652	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,652	[INFO]	266-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,666	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:28:27,680	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,680	[INFO]	266-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:28:27,694	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:28:27,694	[INFO]	266-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:29:19,340	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 440))
2023-08-05 11:29:19,340	[INFO]	266-4   SUCCESS               82502777481 (57.04%) [8 edit(s)] 
2023-08-05 11:29:19,358	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:29:19,358	[INFO]	266-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:29:19,372	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:29:19,372	[INFO]	266-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:29:19,386	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:29:19,387	[INFO]	266-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:29:19,401	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:29:19,401	[INFO]	266-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:54,621	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:54,622	[INFO]	266-9   RUN_TIMEOUT           None  [5 edit(s)]       
2023-08-05 11:30:57,855	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 27))
2023-08-05 11:30:57,856	[INFO]	266-10  RUN_CODE_ERROR        None  [8 edit(s)]       
2023-08-05 11:30:57,890	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:30:57,890	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:57,890	[INFO]	267-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:57,904	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:30:58,319	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 541), ('core/Solver.cc.xml', 'stmt', 60))
2023-08-05 11:30:58,319	[INFO]	267-2   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:30:58,335	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:58,335	[INFO]	267-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:58,350	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:58,351	[INFO]	267-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:58,762	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 113))
2023-08-05 11:30:58,763	[INFO]	267-5   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:30:58,780	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:58,780	[INFO]	267-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:58,795	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:58,795	[INFO]	267-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:58,810	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:58,810	[INFO]	267-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:58,825	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:58,825	[INFO]	267-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:58,840	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:58,840	[INFO]	267-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:58,873	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:30:58,874	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:58,874	[INFO]	268-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:30:58,888	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:30:59,303	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 225), ('core/Solver.cc.xml', 'stmt', 262))
2023-08-05 11:30:59,303	[INFO]	268-2   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:30:59,320	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:30:59,320	[INFO]	268-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:31:50,827	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 11:31:50,827	[INFO]	268-4   SUCCESS               82530530016 (57.06%) [6 edit(s)] 
2023-08-05 11:31:50,846	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:31:50,846	[INFO]	268-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:31:50,862	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:31:50,863	[INFO]	268-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:33:25,925	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:33:25,926	[INFO]	268-7   RUN_TIMEOUT           None  [5 edit(s)]       
2023-08-05 11:33:25,944	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:33:25,944	[INFO]	268-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:33:25,958	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:33:25,958	[INFO]	268-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:33:25,973	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:33:25,973	[INFO]	268-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:33:26,005	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:33:26,005	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:33:26,006	[INFO]	269-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:33:26,020	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:33:26,463	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 382), ('core/Solver.cc.xml', 'stmt', 438))
2023-08-05 11:33:26,463	[INFO]	269-2   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:34:18,427	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 348), ('core/Solver.cc.xml', 'stmt', 8))
2023-08-05 11:34:18,428	[INFO]	269-3   SUCCESS               82513700011 (57.04%) [8 edit(s)] 
2023-08-05 11:34:18,446	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:18,446	[INFO]	269-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:18,461	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:18,461	[INFO]	269-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:18,475	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:18,476	[INFO]	269-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:18,490	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:18,491	[INFO]	269-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:18,505	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:18,505	[INFO]	269-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:18,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 250), ('core/Solver.cc.xml', 'stmt', 288))
2023-08-05 11:34:18,925	[INFO]	269-9   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:34:18,941	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:18,941	[INFO]	269-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:18,971	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:18,971	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:18,971	[INFO]	270-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:18,986	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:19,000	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,000	[INFO]	270-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,014	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,014	[INFO]	270-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,424	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 371))
2023-08-05 11:34:19,424	[INFO]	270-4   COMPILE_CODE_ERROR    None  [6 edit(s)]       
2023-08-05 11:34:19,440	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,441	[INFO]	270-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,456	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,456	[INFO]	270-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,471	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,471	[INFO]	270-7   SUCCESS               82519186284 (57.05%) [6 edit(s)] 
2023-08-05 11:34:19,486	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,486	[INFO]	270-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,501	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,501	[INFO]	270-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,516	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,516	[INFO]	270-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,547	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:19,548	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,548	[INFO]	271-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,562	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:19,576	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,576	[INFO]	271-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,590	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,590	[INFO]	271-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,605	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,605	[INFO]	271-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,619	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,619	[INFO]	271-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,633	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,633	[INFO]	271-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,647	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,647	[INFO]	271-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:19,661	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:19,661	[INFO]	271-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,098	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 509), ('core/Solver.cc.xml', 'stmt', 144))
2023-08-05 11:34:20,098	[INFO]	271-9   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:34:20,120	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,120	[INFO]	271-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,571	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 307), ('core/Solver.cc.xml', 'stmt', 437))
2023-08-05 11:34:20,571	[INFO]	272-1   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:34:20,602	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:20,602	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,602	[INFO]	272-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,617	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:20,631	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,631	[INFO]	272-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,646	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,646	[INFO]	272-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,662	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,662	[INFO]	272-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,677	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,678	[INFO]	272-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,693	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,693	[INFO]	272-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,708	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,708	[INFO]	272-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,723	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,724	[INFO]	272-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,739	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,739	[INFO]	272-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,771	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:20,771	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,771	[INFO]	273-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,785	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:20,800	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,800	[INFO]	273-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,814	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,814	[INFO]	273-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,828	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,829	[INFO]	273-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,843	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,843	[INFO]	273-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,857	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,857	[INFO]	273-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,871	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,872	[INFO]	273-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,886	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,886	[INFO]	273-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,901	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,901	[INFO]	273-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,916	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,916	[INFO]	273-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,949	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:20,949	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:20,950	[INFO]	274-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:20,964	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:21,383	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 375))
2023-08-05 11:34:21,383	[INFO]	274-2   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:34:21,399	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,400	[INFO]	274-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,416	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,416	[INFO]	274-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,431	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,432	[INFO]	274-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,453	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,453	[INFO]	274-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,468	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,469	[INFO]	274-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,484	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,484	[INFO]	274-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,499	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,499	[INFO]	274-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,514	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,514	[INFO]	274-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,546	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:21,546	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,546	[INFO]	275-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:34:21,560	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:34:21,973	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 614), ('core/Solver.cc.xml', 'stmt', 48))
2023-08-05 11:34:21,974	[INFO]	275-2   COMPILE_CODE_ERROR    None  [6 edit(s)]       
2023-08-05 11:34:21,990	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:34:21,990	[INFO]	275-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:35:13,157	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:35:13,158	[INFO]	275-4   SUCCESS               82583319441 (57.09%) [6 edit(s)] 
2023-08-05 11:36:05,546	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 11:36:05,547	[INFO]	275-5   SUCCESS               82535225632 (57.06%) [6 edit(s)] 
2023-08-05 11:36:05,563	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,563	[INFO]	275-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,578	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,578	[INFO]	275-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,592	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,593	[INFO]	275-8   SUCCESS               82519186284 (57.05%) [6 edit(s)] 
2023-08-05 11:36:05,607	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,607	[INFO]	275-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,622	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,622	[INFO]	275-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,655	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:36:05,655	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,656	[INFO]	276-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,670	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:36:05,684	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,684	[INFO]	276-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,699	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,699	[INFO]	276-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,714	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,714	[INFO]	276-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,728	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,728	[INFO]	276-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,742	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,743	[INFO]	276-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,757	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,757	[INFO]	276-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,771	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,772	[INFO]	276-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,787	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,787	[INFO]	276-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,801	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,801	[INFO]	276-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,832	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:36:05,833	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,833	[INFO]	277-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,847	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:36:05,861	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,861	[INFO]	277-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,876	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,876	[INFO]	277-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,891	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,892	[INFO]	277-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,906	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,907	[INFO]	277-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,921	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,921	[INFO]	277-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,936	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,936	[INFO]	277-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,951	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,952	[INFO]	277-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,967	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,967	[INFO]	277-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:05,982	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:05,982	[INFO]	277-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,015	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:36:06,015	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,015	[INFO]	278-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,030	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:36:06,045	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,046	[INFO]	278-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,060	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,061	[INFO]	278-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,075	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,076	[INFO]	278-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,091	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,091	[INFO]	278-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,106	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,107	[INFO]	278-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,121	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,121	[INFO]	278-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,137	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,137	[INFO]	278-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,152	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,152	[INFO]	278-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:36:06,167	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:36:06,167	[INFO]	278-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:41,831	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,832	[INFO]	279-1   RUN_TIMEOUT           None  [5 edit(s)]       
2023-08-05 11:37:41,864	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:37:41,864	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,864	[INFO]	279-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:41,880	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:37:41,895	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,895	[INFO]	279-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:41,910	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,910	[INFO]	279-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:41,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,925	[INFO]	279-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:41,940	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,940	[INFO]	279-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:41,954	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,954	[INFO]	279-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:41,967	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,968	[INFO]	279-8   SUCCESS               82583319441 (57.09%) [6 edit(s)] 
2023-08-05 11:37:41,982	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:41,982	[INFO]	279-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,002	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,002	[INFO]	279-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,033	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:37:42,033	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,034	[INFO]	280-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,047	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:37:42,061	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,062	[INFO]	280-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,076	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,076	[INFO]	280-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,090	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,090	[INFO]	280-4   SUCCESS               82519186284 (57.05%) [6 edit(s)] 
2023-08-05 11:37:42,105	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,106	[INFO]	280-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,121	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,121	[INFO]	280-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,136	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,136	[INFO]	280-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,151	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,151	[INFO]	280-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,165	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,165	[INFO]	280-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,180	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,180	[INFO]	280-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,620	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 209), ('core/Solver.cc.xml', 'stmt', 181))
2023-08-05 11:37:42,620	[INFO]	281-1   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:37:42,658	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:37:42,658	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,658	[INFO]	281-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:37:42,675	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:37:42,692	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:37:42,692	[INFO]	281-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:36,139	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 173), ('core/Solver.cc.xml', 'stmt', 409))
2023-08-05 11:38:36,140	[INFO]	281-4   SUCCESS               82621564986 (57.12%) [8 edit(s)] 
2023-08-05 11:38:39,444	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 100))
2023-08-05 11:38:39,445	[INFO]	281-5   RUN_CODE_ERROR        None  [8 edit(s)]       
2023-08-05 11:38:39,460	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,461	[INFO]	281-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,475	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,475	[INFO]	281-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,490	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,490	[INFO]	281-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,506	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,506	[INFO]	281-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,523	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,523	[INFO]	281-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,555	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:38:39,555	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,556	[INFO]	282-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,569	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:38:39,583	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,584	[INFO]	282-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,598	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,598	[INFO]	282-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,613	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,613	[INFO]	282-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,628	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,628	[INFO]	282-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,642	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,642	[INFO]	282-6   SUCCESS               117111591929 (80.96%) [6 edit(s)] 
2023-08-05 11:38:39,657	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,657	[INFO]	282-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,671	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,671	[INFO]	282-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,686	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,686	[INFO]	282-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,701	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,701	[INFO]	282-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,732	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:38:39,732	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,732	[INFO]	283-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,746	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:38:39,760	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,761	[INFO]	283-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:38:39,775	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:38:39,775	[INFO]	283-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:40:05,015	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:40:05,016	[INFO]	283-4   SUCCESS               142730936129 (98.67%) [5 edit(s)] 
2023-08-05 11:40:05,032	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:40:05,033	[INFO]	283-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:40:05,047	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:40:05,047	[INFO]	283-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:40:05,060	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 11:40:05,060	[INFO]	283-7   SUCCESS               82535225632 (57.06%) [6 edit(s)] 
2023-08-05 11:40:05,075	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:40:05,075	[INFO]	283-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:40:05,089	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:40:05,089	[INFO]	283-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:40:05,103	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:40:05,103	[INFO]	283-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:40:05,139	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:40:05,139	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:40:05,139	[INFO]	284-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:40:05,156	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:40:05,172	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:40:05,172	[INFO]	284-2   SUCCESS               82519186284 (57.05%) [6 edit(s)] 
2023-08-05 11:41:40,265	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 588), ('core/Solver.cc.xml', 'stmt', 119))
2023-08-05 11:41:40,266	[INFO]	284-3   RUN_TIMEOUT           None  [7 edit(s)]       
2023-08-05 11:43:15,407	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 374), ('core/Solver.cc.xml', 'stmt', 397))
2023-08-05 11:43:15,408	[INFO]	284-4   RUN_TIMEOUT           None  [7 edit(s)]       
2023-08-05 11:43:15,425	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:15,425	[INFO]	284-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:15,860	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 435))
2023-08-05 11:43:15,861	[INFO]	284-6   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:43:15,877	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:15,877	[INFO]	284-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:15,892	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:15,892	[INFO]	284-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:15,907	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:15,907	[INFO]	284-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:15,922	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:15,922	[INFO]	284-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:15,956	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:43:15,956	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:15,956	[INFO]	285-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:15,975	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:43:15,989	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:15,989	[INFO]	285-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:16,003	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:16,003	[INFO]	285-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:16,018	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:16,018	[INFO]	285-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:16,031	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:16,031	[INFO]	285-5   SUCCESS               82519186284 (57.05%) [6 edit(s)] 
2023-08-05 11:43:16,045	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 11:43:16,045	[INFO]	285-6   SUCCESS               82535225632 (57.06%) [6 edit(s)] 
2023-08-05 11:43:16,060	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:16,061	[INFO]	285-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,224	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 27), ('core/Solver.cc.xml', 'stmt', 179))
2023-08-05 11:43:19,225	[INFO]	285-8   RUN_CODE_ERROR        None  [8 edit(s)]       
2023-08-05 11:43:19,242	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,242	[INFO]	285-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,257	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,257	[INFO]	285-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,674	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 37), ('core/Solver.cc.xml', 'stmt', 458))
2023-08-05 11:43:19,674	[INFO]	286-1   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:43:19,705	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:43:19,705	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,705	[INFO]	286-2   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,719	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:43:19,733	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,733	[INFO]	286-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,747	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,747	[INFO]	286-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,762	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,762	[INFO]	286-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,776	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,776	[INFO]	286-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,790	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,790	[INFO]	286-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,804	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,804	[INFO]	286-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,818	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,818	[INFO]	286-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,831	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,831	[INFO]	286-10  SUCCESS               82519186284 (57.05%) [6 edit(s)] 
2023-08-05 11:43:19,862	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:43:19,862	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,863	[INFO]	287-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:19,876	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:43:19,890	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:19,890	[INFO]	287-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,328	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 358), ('core/Solver.cc.xml', 'stmt', 92))
2023-08-05 11:43:20,328	[INFO]	287-3   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:43:20,344	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,344	[INFO]	287-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,359	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,359	[INFO]	287-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,373	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,373	[INFO]	287-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,789	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 299), ('core/Solver.cc.xml', 'stmt', 26))
2023-08-05 11:43:20,790	[INFO]	287-7   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:43:20,806	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,807	[INFO]	287-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,822	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,822	[INFO]	287-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,836	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,836	[INFO]	287-10  SUCCESS               82583319441 (57.09%) [6 edit(s)] 
2023-08-05 11:43:20,869	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:43:20,869	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,869	[INFO]	288-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,883	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:43:20,897	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,897	[INFO]	288-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,911	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,911	[INFO]	288-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,925	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,925	[INFO]	288-4   SUCCESS               117111591929 (80.96%) [6 edit(s)] 
2023-08-05 11:43:20,939	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,939	[INFO]	288-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,955	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,955	[INFO]	288-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:43:20,970	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:43:20,970	[INFO]	288-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,122	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 11:44:31,123	[INFO]	288-8   SUCCESS               117102981745 (80.96%) [5 edit(s)] 
2023-08-05 11:44:31,139	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,139	[INFO]	288-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,153	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,154	[INFO]	288-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,185	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:44:31,185	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,185	[INFO]	289-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,199	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:44:31,213	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,213	[INFO]	289-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,228	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,228	[INFO]	289-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,243	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,243	[INFO]	289-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,257	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,257	[INFO]	289-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,273	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,274	[INFO]	289-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,288	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,289	[INFO]	289-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,302	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,302	[INFO]	289-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,316	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,317	[INFO]	289-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,331	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,331	[INFO]	289-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,363	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:44:31,363	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,363	[INFO]	290-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,377	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:44:31,391	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,391	[INFO]	290-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,405	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,405	[INFO]	290-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,428	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,428	[INFO]	290-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,443	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,443	[INFO]	290-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,457	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,457	[INFO]	290-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,472	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,472	[INFO]	290-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:44:31,486	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:44:31,486	[INFO]	290-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:45:22,907	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 63), ('core/Solver.cc.xml', 'stmt', 265))
2023-08-05 11:45:22,908	[INFO]	290-9   SUCCESS               82492522984 (57.03%) [7 edit(s)] 
2023-08-05 11:45:22,926	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:45:22,927	[INFO]	290-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:45:22,964	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:45:22,964	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:45:22,965	[INFO]	291-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:45:22,980	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:45:22,996	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:45:22,997	[INFO]	291-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:45:23,012	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:45:23,012	[INFO]	291-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:46:14,057	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:46:14,058	[INFO]	291-4   SUCCESS               82544338697 (57.06%) [6 edit(s)] 
2023-08-05 11:46:14,074	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:46:14,074	[INFO]	291-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:46:14,088	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:46:14,089	[INFO]	291-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:46:14,103	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:46:14,103	[INFO]	291-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:47:32,475	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 338))
2023-08-05 11:47:32,476	[INFO]	291-8   SUCCESS               134277683792 (92.83%) [7 edit(s)] 
2023-08-05 11:47:32,493	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:47:32,494	[INFO]	291-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:47:32,508	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:47:32,509	[INFO]	291-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:48:25,242	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 
@@ -1037,6 +1027,7 @@
     int cnt = 0;
     for (int i = 0; i < clauses.size(); i++)/*auto*/{
         if (!satisfied(ca[clauses[i]]))/*auto*/{
+            learnts.shrink(i - j);
             cnt++;
 }/*auto*/
 }/*auto*/

2023-08-05 11:48:25,242	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 606), ('core/Solver.cc.xml', 'stmt', 267))
2023-08-05 11:48:25,243	[INFO]	292-1   SUCCESS              +82504110896 (57.04%) [8 edit(s)] 
2023-08-05 11:48:25,259	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 
@@ -1037,6 +1027,7 @@
     int cnt = 0;
     for (int i = 0; i < clauses.size(); i++)/*auto*/{
         if (!satisfied(ca[clauses[i]]))/*auto*/{
+            learnts.shrink(i - j);
             cnt++;
 }/*auto*/
 }/*auto*/

2023-08-05 11:49:16,841	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 387))
2023-08-05 11:49:16,842	[INFO]	292-2   SUCCESS               82544541357 (57.07%) [8 edit(s)] 
2023-08-05 11:49:16,883	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:49:16,884	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:49:16,884	[INFO]	292-3   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:49:16,902	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:49:16,917	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:49:16,917	[INFO]	292-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:49:16,932	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:49:16,932	[INFO]	292-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:09,857	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419))
2023-08-05 11:50:09,858	[INFO]	292-6   SUCCESS               82496831060 (57.03%) [5 edit(s)] 
2023-08-05 11:50:09,874	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:09,874	[INFO]	292-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:09,888	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:09,888	[INFO]	292-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:09,903	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:09,903	[INFO]	292-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:09,917	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:09,917	[INFO]	292-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:09,949	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:09,949	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:09,949	[INFO]	293-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:09,963	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:10,376	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 546), ('core/Solver.cc.xml', 'stmt', 167))
2023-08-05 11:50:10,377	[INFO]	293-2   COMPILE_CODE_ERROR    None  [6 edit(s)]       
2023-08-05 11:50:10,393	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,393	[INFO]	293-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,407	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,407	[INFO]	293-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,421	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,422	[INFO]	293-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,436	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,436	[INFO]	293-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,451	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,451	[INFO]	293-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,467	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,467	[INFO]	293-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,482	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,482	[INFO]	293-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,496	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,496	[INFO]	293-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,526	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:10,526	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,526	[INFO]	294-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,540	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:10,554	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,554	[INFO]	294-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,568	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,569	[INFO]	294-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,583	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,583	[INFO]	294-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,597	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,597	[INFO]	294-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:10,611	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:10,611	[INFO]	294-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,029	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 420), ('core/Solver.cc.xml', 'stmt', 155))
2023-08-05 11:50:11,029	[INFO]	294-7   COMPILE_CODE_ERROR    None  [7 edit(s)]       
2023-08-05 11:50:11,046	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,046	[INFO]	294-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,060	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,060	[INFO]	294-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,075	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,075	[INFO]	294-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,106	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:11,106	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,107	[INFO]	295-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,121	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:11,135	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,135	[INFO]	295-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,147	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,148	[INFO]	295-3   SUCCESS               82544338697 (57.06%) [6 edit(s)] 
2023-08-05 11:50:11,162	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,162	[INFO]	295-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,180	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,180	[INFO]	295-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,194	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,194	[INFO]	295-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,208	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,208	[INFO]	295-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,222	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,222	[INFO]	295-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,236	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,236	[INFO]	295-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,250	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,250	[INFO]	295-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,281	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:11,281	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,282	[INFO]	296-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,295	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:11,309	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,310	[INFO]	296-2   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,324	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,324	[INFO]	296-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,338	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,338	[INFO]	296-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,352	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,352	[INFO]	296-5   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,777	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 379), ('core/Solver.cc.xml', 'stmt', 306))
2023-08-05 11:50:11,777	[INFO]	296-6   COMPILE_CODE_ERROR    None  [8 edit(s)]       
2023-08-05 11:50:11,793	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,793	[INFO]	296-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,807	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,808	[INFO]	296-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,822	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,822	[INFO]	296-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,837	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,837	[INFO]	296-10  SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,870	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:50:11,870	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:50:11,870	[INFO]	297-1   SUCCESS              +82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:50:11,886	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

2023-08-05 11:51:47,068	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 321))
2023-08-05 11:51:47,069	[INFO]	297-2   RUN_TIMEOUT           None  [7 edit(s)]       
2023-08-05 11:51:47,086	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:51:47,086	[INFO]	297-3   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:51:47,102	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:51:47,102	[INFO]	297-4   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:51:47,122	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:51:47,123	[INFO]	297-5   SUCCESS               117111591929 (80.96%) [6 edit(s)] 
2023-08-05 11:51:47,141	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:51:47,141	[INFO]	297-6   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:51:47,156	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:51:47,156	[INFO]	297-7   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:51:47,171	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:51:47,171	[INFO]	297-8   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:51:47,185	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:51:47,185	[INFO]	297-9   SUCCESS               82491620049 (57.03%) [7 edit(s)] 
2023-08-05 11:51:47,635	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 470), ('core/Solver.cc.xml', 'stmt', 209))
2023-08-05 11:51:47,635	[INFO]	297-10  COMPILE_CODE_ERROR    None  [6 edit(s)]       
2023-08-05 11:53:22,882	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:53:22,883	[INFO]	298-1   RUN_TIMEOUT           None  [5 edit(s)]       
2023-08-05 11:53:22,906	[INFO]	==== END ====
2023-08-05 11:53:22,907	[INFO]	Reason: time budget
2023-08-05 11:53:22,907	[INFO]	
2023-08-05 11:53:22,907	[INFO]	==== REPORT ====
2023-08-05 11:53:22,907	[INFO]	Termination: time budget
2023-08-05 11:53:22,907	[INFO]	Log file: /cs/student/projects1/sse/2022/tsongpet/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1691221367.log
2023-08-05 11:53:22,927	[INFO]	Patch file: _magpie_logs/minisat-hack_1691221367.patch
2023-08-05 11:53:22,928	[INFO]	Diff file: _magpie_logs/minisat-hack_1691221367.diff
2023-08-05 11:53:22,928	[INFO]	Best fitness: 82491620049
2023-08-05 11:53:22,928	[INFO]	Best patch: StmtReplacement(('core/Solver.cc.xml', 'stmt', 349), ('core/Solver.cc.xml', 'stmt', 320)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 294)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 232)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 410), ('core/Solver.cc.xml', 'stmt', 321)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 419)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 70), ('core/Solver.cc.xml', 'stmt', 20))
2023-08-05 11:53:22,928	[INFO]	Diff:
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -227,6 +227,7 @@
     if (strict){
         remove(watches[~c[0]], Watcher(cr, c[1]));
         remove(watches[~c[1]], Watcher(cr, c[0]));
+        gS = lS = tS = N = cp = 0;
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
@@ -571,7 +572,7 @@
             if (c[0] == false_lit)/*auto*/{
                 c[0] = c[1], c[1] = false_lit;
 }/*auto*/
-            assert(c[1] == false_lit);
+            
             i++;
 
             // If 0th watch is true, then clause is already satisfied.
@@ -712,7 +713,7 @@
     if (remove_satisfied)/*auto*/{        // Can be turned off.
         removeSatisfied(clauses);
 }/*auto*/
-    checkGarbage();
+    
     rebuildOrderHeap();
 
     simpDB_assigns = nAssigns();
@@ -757,9 +758,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    lS = 0, LQ.clear();
-}/*auto*/
+                
             }
 
             learnt_clause.clear();
@@ -834,18 +833,10 @@
                 reduceDB();
 
                 static int adjust = 0;
-                if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-}/*auto*/
-
-                    if (!luby_restart){
-                        core_added = 0;
-                        K = 1;
-                        lS = 0, LQ.clear();
-                        cancelUntil(0);
-                        return l_Undef; }
-                }else{
+                if (!luby_restart){
+                gS += L;
+                PUSH(LQ, L, 50, lS);
+            }else{
                     if (adjust > 0)/*auto*/{ adjust--;
 }/*auto*/
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
@@ -973,8 +964,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++)/*auto*/{ model[i] = value(i);
-}/*auto*/
+        gS += L;
     }else if (status == l_False && conflict.size() == 0)/*auto*/{
         ok = false;
 }/*auto*/
@@ -994,7 +984,7 @@
         map.growTo(x+1, -1);
         map[x] = max++;
     }
-    return map[x];
+    
 }
 
 

