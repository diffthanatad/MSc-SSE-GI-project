2023-07-15 06:32:58,924	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/minisat-hack
target_files = 
	core/Solver.cc.xml
	minisat.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 15
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_4.sh
run_timeout = 1240
run_lengthout = 
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5


2023-07-15 06:32:58,925	[INFO]	==== WARMUP ====
2023-07-15 06:49:22,793	[INFO]	WARM    SUCCESS               974.3346                
2023-07-15 07:05:48,962	[INFO]	WARM    SUCCESS               982.5684                
2023-07-15 07:22:17,529	[INFO]	WARM    SUCCESS               984.6956                
2023-07-15 07:22:17,530	[INFO]	INITIAL SUCCESS               984.6956                
2023-07-15 07:22:17,530	[INFO]	==== START: ValidRankingSimplify ====
2023-07-15 07:22:17,645	[DEBUG]	CLEAN_PATCH: StmtDeletion(('core/Solver.cc.xml', 'stmt', 296)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 454), ('core/Solver.cc.xml', 'stmt', 9)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 280), ('core/Solver.cc.xml', 'stmt', 399)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 358), ('core/Solver.cc.xml', 'stmt', 308)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 333))
2023-07-15 07:22:17,645	[DEBUG]	CLEAN_SIZE: 6 (was 6)
2023-07-15 07:39:38,372	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 296)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 454), ('core/Solver.cc.xml', 'stmt', 9)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 280), ('core/Solver.cc.xml', 'stmt', 399)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 358), ('core/Solver.cc.xml', 'stmt', 308)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 333))
2023-07-15 07:39:38,372	[INFO]	1       SUCCESS              *1036.1238 (105.22%) [6 edit(s)] 
2023-07-15 07:39:38,390	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];
@@ -531,6 +533,7 @@
     assert(value(p) == l_Undef);
     assigns[var(p)] = lbool(!sign(p));
     vardata[var(p)] = mkVarData(from, decisionLevel());
+    int curr_restarts = 0;
     trail.push_(p);
 }
 
@@ -715,7 +718,7 @@
     checkGarbage();
     rebuildOrderHeap();
 
-    simpDB_assigns = nAssigns();
+    
     simpDB_props   = clauses_literals + learnts_literals;   // (shouldn't depend on stats really, but it will do for now)
 
     return true;
@@ -793,7 +796,7 @@
               fprintf(output, "0\n");
             }*/
 
-            varDecayActivity();
+            
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
@@ -846,8 +849,7 @@
                         cancelUntil(0);
                         return l_Undef; }
                 }else{
-                    if (adjust > 0)/*auto*/{ adjust--;
-}/*auto*/
+                    conflictC++;
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
 }/*auto*/
                     LBD_cut = (int32_t)opt_lbd_cut + adjust;
@@ -1067,7 +1069,7 @@
 }/*auto*/
 
     if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
+        static DoubleOption  opt_var_decay         (_cat, "var-decay",   "The variable activity decay factor",            0.80,     DoubleRange(0, false, 1, false));
 }/*auto*/
 }
 

2023-07-15 07:39:38,391	[INFO]	-- ranking --
2023-07-15 07:56:36,302	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 296))
2023-07-15 07:56:36,302	[INFO]	2       SUCCESS              *1014.3144 (103.01%) [1 edit(s)] 
2023-07-15 07:56:36,312	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -715,7 +715,7 @@
     checkGarbage();
     rebuildOrderHeap();
 
-    simpDB_assigns = nAssigns();
+    
     simpDB_props   = clauses_literals + learnts_literals;   // (shouldn't depend on stats really, but it will do for now)
 
     return true;

2023-07-15 08:12:53,095	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311))
2023-07-15 08:12:53,095	[INFO]	3       SUCCESS              *973.3591 (98.85%) [1 edit(s)] 
2023-07-15 08:12:53,107	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];

2023-07-15 08:29:37,742	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 454), ('core/Solver.cc.xml', 'stmt', 9))
2023-07-15 08:29:37,743	[INFO]	4       SUCCESS              +1001.0574 (101.66%) [1 edit(s)] 
2023-07-15 08:29:37,753	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1067,7 +1067,7 @@
 }/*auto*/
 
     if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
+        static DoubleOption  opt_var_decay         (_cat, "var-decay",   "The variable activity decay factor",            0.80,     DoubleRange(0, false, 1, false));
 }/*auto*/
 }
 

2023-07-15 08:45:56,423	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 280), ('core/Solver.cc.xml', 'stmt', 399))
2023-07-15 08:45:56,424	[INFO]	5       SUCCESS              +975.0927 (99.02%) [1 edit(s)] 
2023-07-15 08:45:56,436	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -531,6 +531,7 @@
     assert(value(p) == l_Undef);
     assigns[var(p)] = lbool(!sign(p));
     vardata[var(p)] = mkVarData(from, decisionLevel());
+    int curr_restarts = 0;
     trail.push_(p);
 }
 

2023-07-15 09:02:17,127	[DEBUG]	StmtReplacement(('core/Solver.cc.xml', 'stmt', 358), ('core/Solver.cc.xml', 'stmt', 308))
2023-07-15 09:02:17,127	[INFO]	6       SUCCESS              +976.947 (99.21%) [1 edit(s)] 
2023-07-15 09:02:17,138	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -846,8 +846,7 @@
                         cancelUntil(0);
                         return l_Undef; }
                 }else{
-                    if (adjust > 0)/*auto*/{ adjust--;
-}/*auto*/
+                    conflictC++;
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
 }/*auto*/
                     LBD_cut = (int32_t)opt_lbd_cut + adjust;

2023-07-15 09:22:09,244	[DEBUG]	StmtDeletion(('core/Solver.cc.xml', 'stmt', 333))
2023-07-15 09:22:09,245	[INFO]	7       SUCCESS              +1188.3079 (120.68%) [1 edit(s)] 
2023-07-15 09:22:09,254	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -793,7 +793,7 @@
               fprintf(output, "0\n");
             }*/
 
-            varDecayActivity();
+            
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){

2023-07-15 09:22:09,254	[INFO]	-- rebuild --
2023-07-15 09:38:47,450	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311)) | StmtInsertion(('core/Solver.cc.xml', '_inter_block', 280), ('core/Solver.cc.xml', 'stmt', 399))
2023-07-15 09:38:47,450	[INFO]	8       SUCCESS              +994.2725 (100.97%) [2 edit(s)] 
2023-07-15 09:38:47,464	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];
@@ -531,6 +533,7 @@
     assert(value(p) == l_Undef);
     assigns[var(p)] = lbool(!sign(p));
     vardata[var(p)] = mkVarData(from, decisionLevel());
+    int curr_restarts = 0;
     trail.push_(p);
 }
 

2023-07-15 09:55:11,474	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 358), ('core/Solver.cc.xml', 'stmt', 308))
2023-07-15 09:55:11,474	[INFO]	9       SUCCESS              +980.5682 (99.58%) [2 edit(s)] 
2023-07-15 09:55:11,487	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];
@@ -846,8 +848,7 @@
                         cancelUntil(0);
                         return l_Undef; }
                 }else{
-                    if (adjust > 0)/*auto*/{ adjust--;
-}/*auto*/
+                    conflictC++;
                     if (adjust == 0)/*auto*/{ K = (double)opt_K;
 }/*auto*/
                     LBD_cut = (int32_t)opt_lbd_cut + adjust;

2023-07-15 10:11:36,443	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311)) | StmtReplacement(('core/Solver.cc.xml', 'stmt', 454), ('core/Solver.cc.xml', 'stmt', 9))
2023-07-15 10:11:36,444	[INFO]	10      SUCCESS              +981.1944 (99.64%) [2 edit(s)] 
2023-07-15 10:11:36,456	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];
@@ -1067,7 +1069,7 @@
 }/*auto*/
 
     if (verbosity > 0)/*auto*/{
-        printf("Wrote %d clauses with %d variables.\n", cnt, max);
+        static DoubleOption  opt_var_decay         (_cat, "var-decay",   "The variable activity decay factor",            0.80,     DoubleRange(0, false, 1, false));
 }/*auto*/
 }
 

2023-07-15 10:28:47,456	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 296))
2023-07-15 10:28:47,457	[INFO]	11      SUCCESS              +1027.0567 (104.3%) [2 edit(s)] 
2023-07-15 10:28:47,470	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];
@@ -715,7 +717,7 @@
     checkGarbage();
     rebuildOrderHeap();
 
-    simpDB_assigns = nAssigns();
+    
     simpDB_props   = clauses_literals + learnts_literals;   // (shouldn't depend on stats really, but it will do for now)
 
     return true;

2023-07-15 10:48:32,917	[DEBUG]	StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311)) | StmtDeletion(('core/Solver.cc.xml', 'stmt', 333))
2023-07-15 10:48:32,918	[INFO]	12      SUCCESS              +1181.9166 (120.03%) [2 edit(s)] 
2023-07-15 10:48:32,930	[DEBUG]	--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];
@@ -793,7 +795,7 @@
               fprintf(output, "0\n");
             }*/
 
-            varDecayActivity();
+            
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){

2023-07-15 10:48:32,930	[INFO]	-- simplify --
2023-07-15 10:48:32,945	[DEBUG]	
2023-07-15 10:48:32,945	[INFO]	13      SUCCESS              +984.6956 (100.0%) [0 edit(s)] 
2023-07-15 10:48:32,953	[DEBUG]	
2023-07-15 10:48:32,963	[INFO]	==== END ====
2023-07-15 10:48:32,963	[INFO]	Reason: validation end
2023-07-15 10:48:32,963	[INFO]	
2023-07-15 10:48:32,963	[INFO]	==== REPORT ====
2023-07-15 10:48:32,963	[INFO]	Termination: validation end
2023-07-15 10:48:32,963	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/minisat-hack_1689399178.log
2023-07-15 10:48:32,973	[INFO]	Patch file: _magpie_logs/minisat-hack_1689399178.patch
2023-07-15 10:48:32,974	[INFO]	Diff file: _magpie_logs/minisat-hack_1689399178.diff
2023-07-15 10:48:32,974	[INFO]	Best fitness: 973.3591
2023-07-15 10:48:32,974	[INFO]	Best patch: StmtInsertion(('core/Solver.cc.xml', '_inter_block', 106), ('core/Solver.cc.xml', 'stmt', 311))
2023-07-15 10:48:32,974	[INFO]	Diff:
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -276,6 +276,8 @@
             assigns [x] = l_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())/*auto*/{
                 polarity[x] = sign(trail[c]);
+                if (decisionLevel() == 0)/*auto*/{ return l_False;
+}/*auto*/
 }/*auto*/
             insertVarOrder(x); }
         qhead = trail_lim[level];

