--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -704,9 +704,7 @@
                 this.trailLim.pop();
             }
         }
-        if (confl == null) {
-            return outLearnt;
-        }
+        
         do {
 
             preason.clear();
@@ -1473,10 +1471,7 @@
     }
 
     public boolean model(int var) {
-        if (var <= 0 || var > realNumberOfVariables()) {
-            throw new IllegalArgumentException(
-                    "Use a valid Dimacs var id as argument!"); //$NON-NLS-1$
-        }
+        
         if (this.userbooleanmodel == null) {
             throw new UnsupportedOperationException(
                     "Call the solve method first!!!"); //$NON-NLS-1$
@@ -2025,7 +2020,7 @@
         double cputime = (System.currentTimeMillis() - this.timebegin) / 1000;
         out.println(prefix + "speed (assignments/second)\t: " //$NON-NLS-1$
                 + this.stats.getPropagations() / cputime);
-        this.order.printStat(out, prefix);
+        
         printLearntClausesInfos(out, prefix);
     }
 
@@ -2469,7 +2464,7 @@
         this.sharedConflict = this.dsfactory
                 .createUnregisteredCardinalityConstraint(copy,
                         literals.length - degree);
-        this.sharedConflict.register();
+        this.sharedConflict.assertConstraint(this);
         addConstr(this.sharedConflict);
         return this.sharedConflict;
     }
--- before: sat4j.params
+++ after: sat4j.params
@@ -1,6 +1,7 @@
-RESTARTS := 'Glucose21Restarts'
+RESTARTS := 'MiniSATRestarts'
 PHASE := 'RSATPhaseSelectionStrategy'
 CLADECAY := 0.999
 VARDECAY := 0.95
-SIMP := 'EXPENSIVE_SIMPLIFICATION'
+CONFLICTBOUNDINCFACTOR := 2.0
+SIMP := 'NO_SIMPLIFICATION'
 CLEANING := 'LBD2'
