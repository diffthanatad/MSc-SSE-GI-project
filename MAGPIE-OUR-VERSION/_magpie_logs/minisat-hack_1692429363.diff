--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -392,7 +392,7 @@
     if (ccmin_mode == 2){
         uint32_t abstract_level = 0;
         for (i = 1; i < out_learnt.size(); i++)/*auto*/{
-            abstract_level |= abstractLevel(var(out_learnt[i]));
+            
 }/*auto*/ // (maintain an abstraction of levels involved in conflict)
 
         for (i = j = 1; i < out_learnt.size(); i++)/*auto*/{
@@ -469,7 +469,10 @@
                     seen[var(p)] = 1;
                     analyze_stack.push(p);
                     analyze_toclear.push(p);
-                }else{
+                }
+                if (decisionLevel() == 0)/*auto*/{
+        return;
+}/*auto*/else{
                     for (int j = top; j < analyze_toclear.size(); j++)/*auto*/{
                         seen[var(analyze_toclear[j])] = 0;
 }/*auto*/
@@ -856,6 +859,8 @@
             }
 
             Lit next = lit_Undef;
+
+            PUSH(TQ, trail.size(), 5000, tS);
             /*while (decisionLevel() < assumptions.size()){
                 // Perform user provided assumption:
                 Lit p = assumptions[decisionLevel()];
@@ -966,7 +971,7 @@
     }
 
     if (verbosity >= 1)/*auto*/{
-        printf("c ===============================================================================\n");
+        cancelUntil(0);
 }/*auto*/
 
 
