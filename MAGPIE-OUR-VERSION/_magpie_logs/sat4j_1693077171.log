2023-08-26 20:13:03,023	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/sat4j
target_files = 
	org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml
	sat4j.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 150
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 150
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_3.sh
run_timeout = 2316
run_lengthout = 
fitness = perf_instructions

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
	ParamSetting
warmup = 1
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5

[search.ga]
pop_size = 10
elitism_size = 2
cxpb_chrm = 0.5
cxpb_gene = 0.5
mutpb_chrm = 0.2
mutpb_gene = 0.1
gi_delete_prob = 0.5
gi_create_prob = 0.5
tournament_size = 3

[search.pso]
pop_size = 10
speed_min = -3
speed_max = 3
c1 = 1.49
c2 = 1.49


2023-08-26 20:13:03,025	[INFO]	==== WARMUP ====
2023-08-26 20:42:38,782	[INFO]	WARM    SUCCESS               9451869149842           
2023-08-26 20:42:38,783	[INFO]	INITIAL SUCCESS               9451869149842           
2023-08-26 20:42:38,783	[INFO]	==== START: ValidTest ====
2023-08-26 20:42:38,916	[DEBUG]	CLEAN_PATCH: ParamSetting(('sat4j.params', 'RESTARTS'), 'ArminRestarts') | ParamSetting(('sat4j.params', 'CLEANING'), 'LBD') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 95)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1178), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 284)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1538), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 207)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 705), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 609)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 837), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 871))
2023-08-26 20:42:38,916	[DEBUG]	CLEAN_SIZE: 7 (was 10)
2023-08-26 21:15:42,957	[DEBUG]	ParamSetting(('sat4j.params', 'RESTARTS'), 'ArminRestarts') | ParamSetting(('sat4j.params', 'CLEANING'), 'LBD') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 95)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1178), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 284)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1538), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 207)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 705), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 609)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 837), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 871))
2023-08-26 21:15:43,095	[INFO]	1       SUCCESS              *10423819070608 (110.28%) [7 edit(s)] 
2023-08-26 21:15:43,329	[DEBUG]	--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -392,7 +392,7 @@
             this.stats.incLearnedbinaryclauses();
             break;
         case 3:
-            this.stats.incLearnedternaryclauses();
+            
             break;
         default:
             // do nothing
@@ -1797,6 +1797,7 @@
                 this.undertimeout = true;
                 ConflictTimer conflictTimeout = new ConflictTimerAdapter(this,
                         (int) this.timeout) {
+                    private final IVecInt analyzestack = new VecInt();
                     private static final long serialVersionUID = 1L;
 
                     @Override
@@ -1828,7 +1829,8 @@
             }
         }
 
-        cancelUntil(0);
+        this.conflictCount
+                    .remove(this.learnedConstraintsDeletionStrategy.getTimer());
         cancelLearntLiterals(learnedLiteralsLimit);
         if (!global && this.timeBasedTimeout) {
             synchronized (this) {
@@ -2165,9 +2167,7 @@
                 clause.push(-p);
             }
         } else {
-            for (int i = 0; i < decisions.size(); i++) {
-                clause.push(-decisions.get(i));
-            }
+            expireTimeout();
         }
 
         return clause;
@@ -2445,6 +2445,11 @@
         for (int d : lliterals) {
             clause.push(LiteralsUtils.toInternal(d));
         }
+        while (!this.trailLim.isEmpty()
+                && this.trailLim.last() == this.trail.size()) {
+            // conflict detected when assuming a value
+            this.trailLim.pop();
+        }
         this.sharedConflict = this.dsfactory.createUnregisteredClause(clause);
         this.sharedConflict.register();
         addConstr(this.sharedConflict);
--- before: sat4j.params
+++ after: sat4j.params
@@ -1,6 +1,6 @@
-RESTARTS := 'Glucose21Restarts'
+RESTARTS := 'ArminRestarts'
 PHASE := 'RSATPhaseSelectionStrategy'
 CLADECAY := 0.999
 VARDECAY := 0.95
 SIMP := 'EXPENSIVE_SIMPLIFICATION'
-CLEANING := 'LBD2'
+CLEANING := 'LBD'

2023-08-26 21:15:43,345	[INFO]	==== END ====
2023-08-26 21:15:43,345	[INFO]	Reason: validation end
2023-08-26 21:15:43,345	[INFO]	
2023-08-26 21:15:43,345	[INFO]	==== REPORT ====
2023-08-26 21:15:43,345	[INFO]	Termination: validation end
2023-08-26 21:15:43,346	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/sat4j_1693077171.log
2023-08-26 21:15:43,358	[INFO]	Patch file: _magpie_logs/sat4j_1693077171.patch
2023-08-26 21:15:43,358	[INFO]	Diff file: _magpie_logs/sat4j_1693077171.diff
2023-08-26 21:15:43,358	[INFO]	Best fitness: 10423819070608
2023-08-26 21:15:43,358	[INFO]	Best patch: ParamSetting(('sat4j.params', 'RESTARTS'), 'ArminRestarts') | ParamSetting(('sat4j.params', 'CLEANING'), 'LBD') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 95)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1178), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 284)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1538), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 207)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 705), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 609)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 837), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 871))
2023-08-26 21:15:43,358	[INFO]	Diff:
--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -392,7 +392,7 @@
             this.stats.incLearnedbinaryclauses();
             break;
         case 3:
-            this.stats.incLearnedternaryclauses();
+            
             break;
         default:
             // do nothing
@@ -1797,6 +1797,7 @@
                 this.undertimeout = true;
                 ConflictTimer conflictTimeout = new ConflictTimerAdapter(this,
                         (int) this.timeout) {
+                    private final IVecInt analyzestack = new VecInt();
                     private static final long serialVersionUID = 1L;
 
                     @Override
@@ -1828,7 +1829,8 @@
             }
         }
 
-        cancelUntil(0);
+        this.conflictCount
+                    .remove(this.learnedConstraintsDeletionStrategy.getTimer());
         cancelLearntLiterals(learnedLiteralsLimit);
         if (!global && this.timeBasedTimeout) {
             synchronized (this) {
@@ -2165,9 +2167,7 @@
                 clause.push(-p);
             }
         } else {
-            for (int i = 0; i < decisions.size(); i++) {
-                clause.push(-decisions.get(i));
-            }
+            expireTimeout();
         }
 
         return clause;
@@ -2445,6 +2445,11 @@
         for (int d : lliterals) {
             clause.push(LiteralsUtils.toInternal(d));
         }
+        while (!this.trailLim.isEmpty()
+                && this.trailLim.last() == this.trail.size()) {
+            // conflict detected when assuming a value
+            this.trailLim.pop();
+        }
         this.sharedConflict = this.dsfactory.createUnregisteredClause(clause);
         this.sharedConflict.register();
         addConstr(this.sharedConflict);
--- before: sat4j.params
+++ after: sat4j.params
@@ -1,6 +1,6 @@
-RESTARTS := 'Glucose21Restarts'
+RESTARTS := 'ArminRestarts'
 PHASE := 'RSATPhaseSelectionStrategy'
 CLADECAY := 0.999
 VARDECAY := 0.95
 SIMP := 'EXPENSIVE_SIMPLIFICATION'
-CLEANING := 'LBD2'
+CLEANING := 'LBD'

