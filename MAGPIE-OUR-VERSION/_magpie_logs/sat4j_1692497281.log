2023-08-20 03:08:06,826	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/sat4j
target_files = 
	org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml
	sat4j.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 150
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 150
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_8.sh
run_timeout = 2302
run_lengthout = 
fitness = perf_instructions

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
	ParamSetting
warmup = 1
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5

[search.ga]
pop_size = 100
elitism_size = 10
cxpb_chrm = 0.5
cxpb_gene = 0.5
mutpb_chrm = 0.2
mutpb_gene = 0.1
gi_delete_prob = 0.5
gi_create_prob = 0.5
tournament_size = 3

[search.pso]
pop_size = 10
speed_min = -3
speed_max = 3
c1 = 1.49
c2 = 1.49


2023-08-20 03:08:06,827	[INFO]	==== WARMUP ====
2023-08-20 03:35:54,186	[INFO]	WARM    SUCCESS               9440020857675           
2023-08-20 03:35:54,187	[INFO]	INITIAL SUCCESS               9440020857675           
2023-08-20 03:35:54,187	[INFO]	==== START: ValidTest ====
2023-08-20 03:35:54,265	[DEBUG]	CLEAN_PATCH: StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 66)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 80)) | ParamSetting(('sat4j.params', 'PHASE'), 'NegativeLiteralSelectionStrategy') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 341)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 62)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 575), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 570)) | ParamSetting(('sat4j.params', 'CLADECAY'), 0.19543482526608846)
2023-08-20 03:35:54,265	[DEBUG]	CLEAN_SIZE: 7 (was 7)
2023-08-20 04:04:07,522	[DEBUG]	StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 66)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 80)) | ParamSetting(('sat4j.params', 'PHASE'), 'NegativeLiteralSelectionStrategy') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 341)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 62)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 575), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 570)) | ParamSetting(('sat4j.params', 'CLADECAY'), 0.19543482526608846)
2023-08-20 04:04:07,523	[INFO]	1       SUCCESS              *9673710237546 (102.48%) [7 edit(s)] 
2023-08-20 04:04:07,535	[DEBUG]	--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -301,7 +301,7 @@
      */
     public void setLearningStrategy(LearningStrategy<D> strategy) {
         if (this.learner != null) {
-            this.learner.setSolver(null);
+            
         }
         this.learner = strategy;
         strategy.setSolver(this);
@@ -309,7 +309,7 @@
 
     public void setTimeout(int t) {
         this.timeout = t * 1000L;
-        this.timeBasedTimeout = true;
+        
         this.undertimeout = true;
     }
 
@@ -362,10 +362,7 @@
     public void expireTimeout() {
         this.undertimeout = false;
         if (this.timeBasedTimeout) {
-            if (this.timer != null) {
-                this.timer.cancel();
-                this.timer = null;
-            }
+            
         } else {
             if (this.conflictCount != null) {
                 this.conflictCount = null;
@@ -875,6 +872,7 @@
             if (r == null || r.canBePropagatedMultipleTimes()) {
                 conflictToReduce.moveTo(j++, i);
             } else {
+                this.order.varDecayActivity();
                 for (int k = 0; k < r.size(); k++) {
                     p = r.get(k);
                     if (!seen[p >> 1] && this.voc.isFalsified(p)
@@ -993,9 +991,7 @@
                 int l = c.get(i);
                 if (!seen[var(l)] && this.voc.getLevel(l) != 0) {
                     if (this.voc.getReason(l) == null) {
-                        for (int j = top; j < this.analyzetoclear.size(); j++) {
-                            seen[this.analyzetoclear.get(j) >> 1] = false;
-                        }
+                        
                         this.analyzetoclear
                                 .shrink(this.analyzetoclear.size() - top);
                         return false;
--- before: sat4j.params
+++ after: sat4j.params
@@ -1,6 +1,6 @@
 RESTARTS := 'Glucose21Restarts'
-PHASE := 'RSATPhaseSelectionStrategy'
-CLADECAY := 0.999
+PHASE := 'NegativeLiteralSelectionStrategy'
+CLADECAY := 0.19543482526608846
 VARDECAY := 0.95
 SIMP := 'EXPENSIVE_SIMPLIFICATION'
 CLEANING := 'LBD2'

2023-08-20 04:04:07,546	[INFO]	==== END ====
2023-08-20 04:04:07,546	[INFO]	Reason: validation end
2023-08-20 04:04:07,546	[INFO]	
2023-08-20 04:04:07,546	[INFO]	==== REPORT ====
2023-08-20 04:04:07,546	[INFO]	Termination: validation end
2023-08-20 04:04:07,546	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/sat4j_1692497281.log
2023-08-20 04:04:07,557	[INFO]	Patch file: _magpie_logs/sat4j_1692497281.patch
2023-08-20 04:04:07,557	[INFO]	Diff file: _magpie_logs/sat4j_1692497281.diff
2023-08-20 04:04:07,557	[INFO]	Best fitness: 9673710237546
2023-08-20 04:04:07,557	[INFO]	Best patch: StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 66)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 80)) | ParamSetting(('sat4j.params', 'PHASE'), 'NegativeLiteralSelectionStrategy') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 341)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 62)) | StmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 575), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 570)) | ParamSetting(('sat4j.params', 'CLADECAY'), 0.19543482526608846)
2023-08-20 04:04:07,557	[INFO]	Diff:
--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -301,7 +301,7 @@
      */
     public void setLearningStrategy(LearningStrategy<D> strategy) {
         if (this.learner != null) {
-            this.learner.setSolver(null);
+            
         }
         this.learner = strategy;
         strategy.setSolver(this);
@@ -309,7 +309,7 @@
 
     public void setTimeout(int t) {
         this.timeout = t * 1000L;
-        this.timeBasedTimeout = true;
+        
         this.undertimeout = true;
     }
 
@@ -362,10 +362,7 @@
     public void expireTimeout() {
         this.undertimeout = false;
         if (this.timeBasedTimeout) {
-            if (this.timer != null) {
-                this.timer.cancel();
-                this.timer = null;
-            }
+            
         } else {
             if (this.conflictCount != null) {
                 this.conflictCount = null;
@@ -875,6 +872,7 @@
             if (r == null || r.canBePropagatedMultipleTimes()) {
                 conflictToReduce.moveTo(j++, i);
             } else {
+                this.order.varDecayActivity();
                 for (int k = 0; k < r.size(); k++) {
                     p = r.get(k);
                     if (!seen[p >> 1] && this.voc.isFalsified(p)
@@ -993,9 +991,7 @@
                 int l = c.get(i);
                 if (!seen[var(l)] && this.voc.getLevel(l) != 0) {
                     if (this.voc.getReason(l) == null) {
-                        for (int j = top; j < this.analyzetoclear.size(); j++) {
-                            seen[this.analyzetoclear.get(j) >> 1] = false;
-                        }
+                        
                         this.analyzetoclear
                                 .shrink(this.analyzetoclear.size() - top);
                         return false;
--- before: sat4j.params
+++ after: sat4j.params
@@ -1,6 +1,6 @@
 RESTARTS := 'Glucose21Restarts'
-PHASE := 'RSATPhaseSelectionStrategy'
-CLADECAY := 0.999
+PHASE := 'NegativeLiteralSelectionStrategy'
+CLADECAY := 0.19543482526608846
 VARDECAY := 0.95
 SIMP := 'EXPENSIVE_SIMPLIFICATION'
 CLEANING := 'LBD2'

