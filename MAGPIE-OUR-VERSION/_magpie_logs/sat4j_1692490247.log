2023-08-20 01:10:53,357	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = False
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified

[software]
path = code/sat4j
target_files = 
	org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml
	sat4j.params
program = BasicProgram
engine_rules = 
	*.params : ConfigFileParamsEngine
	*.xml : SrcmlEngine
	* : LineEngine
engine_config = 
	*.params : [params]
	*.xml : [srcml]
setup_cmd = ./compile.sh
setup_timeout = 150
setup_lengthout = 
compile_cmd = ./compile.sh
compile_timeout = 150
compile_lengthout = 
test_cmd = 
test_timeout = 
test_lengthout = 
run_cmd = perf stat run-sh/validate_1.sh
run_timeout = 2367
run_lengthout = 
fitness = perf_instructions

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[params]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = ValidRankingSimplify
possible_edits = 
	StmtReplacement
	StmtInsertion
	StmtDeletion
	ParamSetting
warmup = 1
warmup_strategy = last
max_steps = 
max_time = 
target_fitness = 
cache_maxsize = 40
cache_keep = 0.2

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5

[search.ga]
pop_size = 100
elitism_size = 10
cxpb_chrm = 0.5
cxpb_gene = 0.5
mutpb_chrm = 0.2
mutpb_gene = 0.1
gi_delete_prob = 0.5
gi_create_prob = 0.5
tournament_size = 3

[search.pso]
pop_size = 10
speed_min = -3
speed_max = 3
c1 = 1.49
c2 = 1.49


2023-08-20 01:10:53,357	[INFO]	==== WARMUP ====
2023-08-20 01:39:28,964	[INFO]	WARM    SUCCESS               9652599278226           
2023-08-20 01:39:28,964	[INFO]	INITIAL SUCCESS               9652599278226           
2023-08-20 01:39:28,964	[INFO]	==== START: ValidTest ====
2023-08-20 01:39:29,031	[DEBUG]	CLEAN_PATCH: StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 342)) | ParamSetting(('sat4j.params', 'RESTARTS'), 'NoRestarts') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 386)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 823)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 895), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 547)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 119))
2023-08-20 01:39:29,031	[DEBUG]	CLEAN_SIZE: 6 (was 6)
2023-08-20 02:10:08,953	[DEBUG]	StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 342)) | ParamSetting(('sat4j.params', 'RESTARTS'), 'NoRestarts') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 386)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 823)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 895), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 547)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 119))
2023-08-20 02:10:08,955	[INFO]	1       SUCCESS              *10169552806102 (105.36%) [6 edit(s)] 
2023-08-20 02:10:08,968	[DEBUG]	--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -454,7 +454,7 @@
         }
         Constr c = (Constr) co;
         c.remove(this);
-        this.constrs.pop();
+        
         String type = c.getClass().getName();
         this.constrTypes.get(type).dec();
         return true;
@@ -994,7 +994,7 @@
                 if (!seen[var(l)] && this.voc.getLevel(l) != 0) {
                     if (this.voc.getReason(l) == null) {
                         for (int j = top; j < this.analyzetoclear.size(); j++) {
-                            seen[this.analyzetoclear.get(j) >> 1] = false;
+                            
                         }
                         this.analyzetoclear
                                 .shrink(this.analyzetoclear.size() - top);
@@ -1101,7 +1101,7 @@
         this.voc.watches(p).moveTo(lwatched);
         final int size = lwatched.size();
         for (int i = 0; i < size; i++) {
-            this.stats.incInspects();
+            
             // try shortcut
             // shortcut = shortcuts.get(i);
             // if (shortcut != ILits.UNDEFINED && voc.isSatisfied(shortcut))
@@ -2118,9 +2118,7 @@
     }
 
     public int[] findModel(IVecInt assumps) throws TimeoutException {
-        if (isSatisfiable(assumps)) {
-            return model();
-        }
+        
         // DLB findbugs ok
         // A zero length array would mean that the formula is a tautology.
         return null;
@@ -2353,8 +2351,7 @@
         }
         switch (evaluation) {
         case ACTIVITY:
-            this.learnedConstraintsDeletionStrategy = new ActivityLCDS(this,
-                    timer);
+            PrimeImplicantStrategy strategy;
             break;
         case LBD:
             this.learnedConstraintsDeletionStrategy = new GlucoseLCDS<D>(this,
--- before: sat4j.params
+++ after: sat4j.params
@@ -1,4 +1,4 @@
-RESTARTS := 'Glucose21Restarts'
+RESTARTS := 'NoRestarts'
 PHASE := 'RSATPhaseSelectionStrategy'
 CLADECAY := 0.999
 VARDECAY := 0.95

2023-08-20 02:10:08,978	[INFO]	==== END ====
2023-08-20 02:10:08,978	[INFO]	Reason: validation end
2023-08-20 02:10:08,978	[INFO]	
2023-08-20 02:10:08,978	[INFO]	==== REPORT ====
2023-08-20 02:10:08,978	[INFO]	Termination: validation end
2023-08-20 02:10:08,978	[INFO]	Log file: /home/tsongpet/MSc-SSE-GI-project/_magpie_logs/sat4j_1692490247.log
2023-08-20 02:10:08,987	[INFO]	Patch file: _magpie_logs/sat4j_1692490247.patch
2023-08-20 02:10:08,987	[INFO]	Diff file: _magpie_logs/sat4j_1692490247.diff
2023-08-20 02:10:08,987	[INFO]	Best fitness: 10169552806102
2023-08-20 02:10:08,987	[INFO]	Best patch: StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 342)) | ParamSetting(('sat4j.params', 'RESTARTS'), 'NoRestarts') | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 386)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 823)) | StmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 895), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 547)) | StmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 119))
2023-08-20 02:10:08,987	[INFO]	Diff:
--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -454,7 +454,7 @@
         }
         Constr c = (Constr) co;
         c.remove(this);
-        this.constrs.pop();
+        
         String type = c.getClass().getName();
         this.constrTypes.get(type).dec();
         return true;
@@ -994,7 +994,7 @@
                 if (!seen[var(l)] && this.voc.getLevel(l) != 0) {
                     if (this.voc.getReason(l) == null) {
                         for (int j = top; j < this.analyzetoclear.size(); j++) {
-                            seen[this.analyzetoclear.get(j) >> 1] = false;
+                            
                         }
                         this.analyzetoclear
                                 .shrink(this.analyzetoclear.size() - top);
@@ -1101,7 +1101,7 @@
         this.voc.watches(p).moveTo(lwatched);
         final int size = lwatched.size();
         for (int i = 0; i < size; i++) {
-            this.stats.incInspects();
+            
             // try shortcut
             // shortcut = shortcuts.get(i);
             // if (shortcut != ILits.UNDEFINED && voc.isSatisfied(shortcut))
@@ -2118,9 +2118,7 @@
     }
 
     public int[] findModel(IVecInt assumps) throws TimeoutException {
-        if (isSatisfiable(assumps)) {
-            return model();
-        }
+        
         // DLB findbugs ok
         // A zero length array would mean that the formula is a tautology.
         return null;
@@ -2353,8 +2351,7 @@
         }
         switch (evaluation) {
         case ACTIVITY:
-            this.learnedConstraintsDeletionStrategy = new ActivityLCDS(this,
-                    timer);
+            PrimeImplicantStrategy strategy;
             break;
         case LBD:
             this.learnedConstraintsDeletionStrategy = new GlucoseLCDS<D>(this,
--- before: sat4j.params
+++ after: sat4j.params
@@ -1,4 +1,4 @@
-RESTARTS := 'Glucose21Restarts'
+RESTARTS := 'NoRestarts'
 PHASE := 'RSATPhaseSelectionStrategy'
 CLADECAY := 0.999
 VARDECAY := 0.95

